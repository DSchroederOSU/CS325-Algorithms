%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: Prog1.dvi
%%CreationDate: Mon Oct  2 20:37:28 2017
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Medi NimbusRomNo9L-Regu CMMI10 CMR10
%%+ CMSY10 CMR7 CMMIB10 CMBX10 CMMI7 NimbusMonL-Regu
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter Prog1.dvi -o Prog1.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.10.02:2037
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: NimbusMonL-Regu
%!PS-AdobeFont-1.0: NimbusMonL-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Mono L Regular) readonly def
/FamilyName (Nimbus Mono L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusMonL-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-12 -237 650 811} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B89290699B50C1BF1BAEFFE
1F57BE7B5EA025241A248A6D4CFA5067A1DA6EBA4CFC940599BA3F3C934D7248
B8E4AC5816F0D2CE8B3C4193CE39D19FFFDB75254573173CB51CCD83C2F2D06B
2483CF9B07B21EC6F502F028C273887BB06DAE2AFAC10E9FD3C7CF51BCA7B277
B706E425302DC78975AC0E43B87073257A5CD7424B6865FCA89D886E8F95C4F6
D457623DBBC0D16BAFEB4C649F5D72B09B18502EEAB687E915E9B536A361B4F1
44C3CD4CC683B5F05A4ECB4823A5EB5179BB7EEE8B76C21B2491A97808F6318B
585B0BAD98F42FB4A755BCB74CD354F794C8BEA5B90FB9681BD5849D45247E39
930C882490230E1662D39CCA875BFFEAC3E79A78DE6E1298ABE9817AE98675C4
16220AD0D3A36580EE2F2A17AAA1246C416D58A4C52FBB26AAF3B6F75833AF8E
3AA996218DAFA571FBC7CAD90ECE9C883C813D8F168C5E86BBFA0F0A5CB36E35
2DE4CAA0F8D3227F72C5056BFB5BCA6BF9C60E037A0E44670A8D3CBC9A19F379
CA8DB30B711F518A8C7569211AC70C46EED2AF62A37F238BD0BD12D60332E673
C6E784B3EBA3F2E71E9993B97E8A38F85048937E958F1CD8FC6E661048546135
56B810FA1FF611B96495081C04542DF7FEF085DEC619DC8C84CC57683D212813
9D14728AA32723E1D15F2AF8F03422CFAFDA417B02BD110204CA1CC8DA7A39DD
917E09FD39B4341967F5C055170D7505B97717ACE39D7D4B8B6AA528E7A4CEB4
CE6CDDB4BAA9EB42B3340492F822C11204E340653A1B4BA0E2792D227EDD02E9
99E7F31385A3D821F31923D3D8A54E790A3188E4AECD685BF81CB8BB3376C1B8
A53C44B727AF545A3B6DFFA6D7243B672147138A85F84F0E1339008A3B107E1D
3BA28699D9C0F3EE9462D973F329D281B6346A901E84291B9BC6FBB6DC560599
BCD491C34C62BADC626267CFB8680CCFF63BBCABFC4145F47354C1C1B24FBF55
8653AE50868A70B8C4FB3BFD15FD78FC26415E6ECFADCADA97F5E442312E7C71
7EC32EDA5264F9AFB4B1C23F755295DBABF57F992408E3E8BC945B8F5DA83399
9F9D8865D8A7FEED34D4B3BB450CE561EBCE71F8245BE46883FBBF86FC42D933
764491F2111DB1AAB1889FB06BEAA1E0A05C5B34B73F2CC4CF7E8DA48AE10F19
464273ECAC6A6CB033D54FDAF26B69FF8D6977A0446F6FA88A5971DA9C4C7C54
0C3FE0EB837DBFFFAF3B888134AB38B5B3BDC9B4B693CCD10C045215C334AA21
432F7B87CFC3379E39B03AB1B045CF5A585471FD2528CB9881A8D662574D9D50
AB0402644E83479EA265192B41D8F3E81B4761ED2F0550746CA3B21B026E261F
8D920C2BA8F9DFCCBD1B7733EEA500102E39529212B65E7565AC5AF020324F9D
E6D8E2A8B188CA63FEF456A75E140DE04E20DB774161952D462620AFCD9D1A3B
E3D924CFD804CCCBA52CBDB6164D9810B7F051F8FE81B828028E26316AC57B2F
0CBD35C95A1C147437C1AE23EB9CBE993730D21DE023EFEC3EAB42278DA9E391
EA173B346DDA2638B5B60B749DF353AFF7F47BDD61C91DA2DBEAC4931927709F
3D4C2CB294E443E1537D8EDA62A4A68CA0E716B9286A01C4F2F5A518F7E9EB8E
706251A76B2D60E7A7AD37142D2CF75A87C8A73C3814BDAB0B560D612895C1C2
04FD67738AF68A5EBF8EFFC965F583781C176155E01B789370DEB8ED96032EB6
792AE302B20C38A389FC1BC4250D2A6EF8853EC5638E1DBF7491F8601D784EF6
71B66936527D0A8F874806B28DD649CB35D90E6345B12F46BBE29AFA7652926C
104DDB7A1169F5A96C3FD32EB204A2F3B50C42D174AE261DBE2EC7E045A26989
E420C1F9F88D9725FCEA44A75FEA44CE4C991729C5792E14A43917128DE2205D
27D2ED7271F16CE4826618615A17E9376B6C84881BBECF8400F09683FCAADFAD
6435A30566981B2C56E2870060CC1AE8ABCFF9A2F51B416E460D4E707A647B48
4728F2D9E799F2920E5826070FFB480B9AE455CB993EFA4793DC8192BBB4DBBF
E13B37FEB39575541EDF5292EA8F103A6E987A4FE9869DF8B4B4C033E07E8E18
FFA6044611DBD79B6FDA788B38CF2C288DFA7745A112B46B947DFC8C7C714E48
5D560D3F76A692FDF56B23480824B7CBD031F6F181AC463DE70103457A1CF2C3
5D49052D332A900E0F04E6606C7AB5A69574EFF53A1EA5220B00A38621CE5694
3C063F0CC674BC7E0182A18C907E404819D2F089F43E68E45150CD2C4B6609DD
DE50138A8F605BA82EB84F4D03ADBD0802732F97F37F4C8D1C34E4369917B35F
68B3E4C85105D879DD73FEB02B74C1AB219251F6AA643BBF1AAE385A1760FB85
32F6D868464493DF42508690477E55E2913AEE591684CFC4C85B4E12768D9A83
68E75595131E8CB1CDE00FE6F5147DCCD876A0CA8597621BD6021F86C9CAE5C4
76F2359FB8DCC9087C2F9F4E498E93C8ED6E3D25572DBD3AEF1A6D7DFC284D7A
14817DA0640D7DB680E79F9029FF9F7964AA2095A39C74183F41E46F2C56BCB5
9CE6AEF7E914F66FC77F1AA11A8AFA6B6EBA8FCA6750CB48A95CA64FB36E8055
56BDF996C3032C1C39FFE91B7943786D4ABE13F74E9E9E4CE34660A7362DDEEE
3D30A83FBC9CA102B50C3A0A5E40CE0811225C8D4E4AC47BDED2B8F8AF3E781C
96E44B3FB71E0A9B232D731C8D75F12C881DD604E7DEF9C3407A9803F49CE9E7
C37A1B08A0D3F9CFD183A6C8545A3ED97AEA8C4325519CDAA9CFB61D6622867B
D339FE96807E3A32EED28A40C617CDC218C338EB837FD8F96A11A23CC98E1AF5
21B144DA5B16F2BA8BC75D30E26CCE6AA5DEB885D397C846A6E9E4AEA452AAB5
1A81874FA8B3B9BA33E5B0AD0728F33DE79BB830A2F69AAD4FEE1096A89B45C0
68EB4EDAFF8E6C6A79D4E8BFF1463DDD942178D25268687D1E1DF9F4914F8627
CD9EF1D298299A9FA987376BB92B6DA1BFA7CB2C670B71BD9DA48AABC521DBD8
C428980250F7363809D7AA9B4D6F468C68BE9DDA7F0794B9AF93AB5A9F1EE708
8C104884F47CC124F346C19AB6FB7E261BB5AEA0B0993B5020F8574CE0C8360A
2C4C0E7DCFDD1E9A619367C51173364B6DB61B74E41EFAF7223E9D7B39AE80FF
C396C3A9EC15FB45E9652EB63E4174F27F5AC1B5E78F3552B2C1EE447A160AE2
BFFD861E23A38A289E7A98E20C282BD39C45726F023EA280467ED865A8FC8069
D4D1F6574D38C50389734DDA841737FD8DE9F6E6F072498851217A2DEB8E64D3
EA95FA22813C410B5FEAAB281AEA9D2265C6CC1680470AAA11E24C05903EAC72
7B0F1497F7C6585483B3722BB9A6BB6CA05A0DF674E1E63769F077CA6A2CEB9B
15C9D0C3F76CEAEA3FFD83D1B39C8FEAC31305AEF03391CABD9F46C868D5A02F
48A3CC3BAF839CD43D4908DAFCB0D2564C98B1C7823904C4923C9F028888E165
2D388C9C74A4F4FDAAF549F5CB6107CFC60CFDABDE359BDF437549E5E4FD5FAF
3858B07909E1CF77BEDD8BBC1A58B56E2AB34FF962A235EE3368B456FCF04536
36D58ADD916C02CEF4513823702ED2F3DE06FF281F6F34EE241674A3EE2645DA
90652D589681C05D0D162A761DC91B2470E13087AD73E4BA42888613C8244B0A
88652F5A1EC5546FD4DEAA2A82A209E2454D33498393599D9E987C1780ACCAB4
C146CC91DC291BDA54982E9FCD9B98F0D3D611AE4CA625FF4A75F5B6D9702DCF
0E927EF7D853D4E9C4A041544871D3D49CA7A2EA4B43423AB95A6D1E5068D4AB
B939A52EAE27B68BA5902819A1B00336E7666FFD24159CD2AB4CC141CAFBF10F
2A05DFE3AAAD15CF2085C5D4CA4066D181864B4F28882C72F1C16BA0900825A1
8A3DC8F5CE8472C0F6AC2DA7297E1801EED5F0D5A166C0D6545888308B44C75D
9E780EAD6ED1D2D72D9F57A11CDC27CCFF840792065DE8B60867FBDFCFD3062E
20E83FA69D9B4BA8A2016A9CEC4C97F533A5DA8B4B245714A996A44D8DE9C349
D8AE14BA3238EE22916DFC64E9156B8CF2C80FA0840B7E28644C3FBC75583A79
43ED882DC2C6ABDAF38CA84366ABE1553D2FAF26EF405C4D00E4DD9F83370A2D
A4EFF092AEB20C9A785CBEBAC7352F57C70ED2E4618B06D57725D1051C7E8344
B56F83FBE176C468E63F6A0A4D308ECECEE20AD96793284647ABF2CB1665110F
D7892D423120DBCCC1AF7704C9045051322DB94146BCC4EAB0D08B9DAC607A67
77F03F6B65C716DE9BA1939D7E997D0D8018545F405FE0329D073275F491F5E4
087885FB4314F2EFAC60FEC958BF0412B87A1528AD133A56F63C7AAA9950CC72
B1F735A5414D985EBE522D718261FDE80C9D0FDC8C421C426765B167DB8EFFA9
E541FA90BA1FA4C3229B2379A50EAEC8C58E6C4A95E10272920D36C01850773B
C2A8C47F0BD0ED9EB8D5F2212CCB13F733F2704BF259F7FF82A2C500332E67A0
460EDF0E4FF6B1971206305C5FE4E37F2F597686EA2E01F180FCF541144DA5BD
1C146A1B62FF389253A090A13D8248D79B74877916B3BC087248E5A4F08DB561
578088F6A09132FD084B8EA982FFD3ABC311FC8345B1F3884C483F9C719D010E
82A57A5087D68C0B8C9CF3C1A16B195EB2A498E60E6181AA4FF088601E0BCC65
DD5AB8B0A4B09E56B24538CEB6AA2DDDC988D12BD4E4EFF07F9BE1DA54BE9178
4B721065224C925E7F59347AE01E9401FF961C4A20C8F09061B1430C204D4E7B
C28B9B222D0C72AE259AD5D13B6537F6890BF500B4CC54150184FC1A29943463
4D772D2EE66CC0C4FAAADA45C491103B6C2D4C14393B95D12FC9F4D36F5633F4
D53F203F331602FE0FC138EDEFF078A89DCEB95F39877A009E553136B9DEED11
E9048F41D76525EF60E980EA03F315BA14C80E80248819BCCFAA907DAB2B5785
B878485A966B136E08D4D6B920B84E040C63C1A3C53E044C5D225E0DA3E6918A
2E7B4B9489FEFBC3CCD3A16CC7F7894D4A17700F4D5BA9D189BC8EEC79DB48D1
2AE567FF26A95D677617CAEE4CA4B282C8E80B53F1E002F576583BF8FF1FEE3E
D0DB577DA27E4FE3C21022F91926361763B86FA081E98DFE93C60307081F094B
93F22D21EA39CC10366D7F7C6301D3FAEC38EA38DFB5D0E5D92BE7BC5EC38C52
B081DA4A9A2BC49A12087B13C5E5C26E34553562AD48B8D8C1CAE72C02AB0ABB
5823798479CAB93ABE057474F896EBA3057678F17E11733015E600BCDEFBDAB6
97D4552DA53D00CE85A4D0E3F7DC0B7B31CAB428C2756AFB19B4100F7A23B335
03A092CB0F1FBCEA7CE8C080DEBC62A79ED43A21496E1684FB9A53831DAC58EE
F552872C5926BE65C1A7344AD2EA4DBC22CB6B0FBEFD1FD78AF2A19313E987E8
20CC74B2620156612EB4B29F4EE156ABEEC43401B3704B933EF47A3885068FCA
8396A30A2E76058489F0B79782A8AED71723859AF26AFBB736DA740688432EDC
F829A136712541A117E690634EEBAB04413EF8823D4462419CD465A9EC386134
534A315CF63AB29FBCD68CED6DA01287AC96666B4E0E3028CCABC42D7EBA9C56
C2F17322E3792513C2AECB3EDF147293DD611F3CE69BCA58AF121DA171B189BE
4A6AFA3D6136248CDD07B8F9C07E06D549A34CA41EBEC13268D06EDC9C961F46
BA4EAA107FC437188F5E746AB571E82F7B51DC5267C2C78A18821C6319AC8D52
9BF3F2FFE97E5DAB705B9CDB63CEFBF82F47A051CA32C39FFC00D6837A6DC8F0
4D5A37B928D6E1F0CF0CA4102AF06089E98603167B0AF5FC529B8631E268774C
0E4F4CF15DAE3B6C1D1958E79F17EE87EA649D529C3BE0C55F24C18BD49B21A6
30049B643D8EB7D47CD9E88C7A158497DAAB32755A4220011D87AA5F04DF4C80
89D3752C4D8262B3A6BCEB0F4E6436B4D6BBD2AB58B8E622B6373ACBA6F0387C
A03AAF347F7EF05FF02B128B2064471AD76F25C6AB3E9D433B4A9CA421D65C4A
6B71AAF14C63923F66095D520D1C1AA264E7B739C4088AA58556A38187EA7583
14146D815003BB275A50F357F90F9CF335C361D3F692FCA41FD1CF870627F8BC
3183C9A3544A359A3F5ED2C44FCB9E4F8BA477DA8D72305B2D405C9E2E8FB50D
0D687BB47D2C7DFE5463C9619F0CED1B37DDC7B924A01118DCE34CD419D74072
BAC8B8450C6F4D9817C3B36119FBFBA42B3DDBDF0B0BCA057B50450CA9F9A2C6
A122F6771362EA1F04077B139B5F19C569204DF645B799A92B5873BD51491B80
BA1E12DED10D82EE05DDA2302322C543CE420F57EF3B542F1B2485069A74873F
E3F69BBCE17D17E8358B9C0A2670BB3F44DCD5474BFDCB5E7F9D9F6D462ACF38
922D84B66C59D4EAD868DAD4334BAD9ACBF2E9D55FA8BAF39883AE26130FDF26
CFB85B294AEE0F659AA42B169C314DD32EC802115F7AD756D9B29124A9E47F4F
5A8A403DB31556186043D32336A4295FD80243041285E3700A23D3CFED0D200C
C35CF7CEBAB276D373868F06CF529A6769BA05741DAAAA020A92A5D23549A663
806CAA7AC70AAFF85512A2B80C38BB06B3F15F7F4AAE746AFE11327A3E50F8F6
3D4F9D6381A071A8447CEB691F227FD60173A94091D9E4B4AF13CE34DFE76E59
F229A7E4B700EC76C6F1A0A23CFCD1FBDFAC82381286CFA04302F7B92B281098
F3DB66448653E536A3D89386E1431C515230F1406205126E4CDCC23EB4C431FC
6C1DBBF79938BA6716DBBAD05253870BDF50F61ECB18910A5F2FD9ADCDCA8FFA
CF0F1E8FE6F40F1E0639989CDA7E843A6972A781290DE3D0A6396F7859CB59AF
A83A1A4225855325012A1754C3CF21240A5AE76339744B92CC08B9A0F7C7EC6D
F2F065AA09A4CAC032F29B1DB2FA3160D14878418B46A864D8C10A03896A2A66
135253E3217B371821E96EC75C62DFE05374D802DAD1559DE16723BFEE9B21C2
F98E8BC250F531373B10F2A9DCC814084EDBCA084888A83172BF7EF0A2AE13FB
DC42EECF864EB3CD8AA9E34FDD78B864C1CCD679D9930844DA1B8C18D87E2DFE
DB8F10BE060D029C556721AA86A88B6567C07522C420342BB89DFDEDACBF098A
54372F60BD94AB1E0D86C891EC13C4CED6D9E64BF48C6B1C4335777A04B7C2D5
60D5C140E45CC0374FE80BD5C0A4DD1A26F1024D4B15AD744D3787641AFC5BF0
11238BC913511E036C60CD8A9E692218B6B425805DB8EEDED7C8A876454F02D7
0D1CC3B21A6973CA4C875EA2B921CD554FA7FF1CBF147561A38DBB71733FB106
54D3D1105B37F5023C385C69842EC645718FBDA83BF7359CC649F44580845F0D
DA5FCF67A6413E75122B0BB24F8D414BD2199D108343AB8322E68779CA6D47F2
8C20CEB302B2A1A60A02A5200C48499964A2B1402F95046C57E3FCB9D358523F
5DAFC39290862ACEFDE502F5683E26F1E3F1D44F5067338D678DB9932A4FA447
4D9FDDBD9487115330743692D0DDBD566CB1CD75FD3D866DE63393499AA5B89B
AC5BCC7BBA878F6109A3FECF8A05B094AFF57C6E804ECC5F29BFB385D87B0E42
43A9295C8DF5CD9317A692B9C46DB5891C5BBB67A1740CA9E0E3328106BB2470
BC1B9F432855C137694153DA1EFE6296249F52B20865B1C4CE51FF56364B92AF
D4A6D4AF662AB90A649B0C59C80303C2064FBD77F91A684B1B492C2D36F89C5F
4860D484C3C72556116B40D6B0FF8FE6D0978237114F01C60DA7E577DC6D483E
246DDEEBEBE5E6168BC89ACC13715538BB071A62303F7709FD514443FDEBFA14
A2976D8E3559BCA3F9FDC54F38D882DDE8DE928BAFDB9BE5B44431230F2EFB66
EAE1B3ADEA80B1E8FB569DB8A3B75E507C9FD85B65CC6B55A31E291882B72A11
947EA59AE852D64623F4601D6146D8FB8C5D4EFFD8613B50B2DFB8AB9482C074
39C6B97B73108D159517D1805EDEE3E1F94692B34FFB6273EF4FF1FB1AB1F311
EEE3210ABCE9D3276583F49A74CF39D36FF5B8F9F6F659C4B1D26C6EAE8E3EBF
67F908BA1ABD43FDDBD7F9705DA8F96596E6D3C8361F0431BDA26A42091709F0
F2FEC4925B708A867C7057B1B0B0FF4D1777ABF56369DAF4F762416AC635B28E
8F27981F1A3826EFF6C7F9DC6D7F23947DEDDEF47B314631D13B04C7CB794C05
8D18D0D3F7D256501A376BBD06FEEC47B24AB813F3E3DB0680F1DAD4D8D3DAAD
C0AA0F25160E0C028BCCC4314EFC3EE62D9F0E5EB749A507AAF96E4758BA71DB
393333B014ED241968F1766EC81EA450173F89DB5E13D3E197E6D3152CCFE713
59436B5288F77BB0CC6681FDB85463DF52776FC75BBFF14E6A9E3548410F44BA
42DE14ABC80EC62355372677DE212836212240AC29EC654BA052CEB0F7FABD9B
702889DC94C58DB70FABA1D934A3B0F64592C48869C8E5D39349BE33448D2F62
58DA61AAF47917C66C7B987608D9AAB5C553A23C7C82C100768B4F9B8DE04116
F5AB3FB5BDE6481B7EA2D35D3355C37E777EBE2A12B3458D45683E5FB32FC582
CBCC53109B04F0AEEE0B048F2ECDC8970157F11728CE3AAFC3C026371AB59BB0
B61DCFB99159BEFA07A210EF00330C976D043F1BE727C98E37B10C31CFC6FCCC
24B6C198E30DEDE07DCC04CC5DCC401B832259DDA43D30C33E94FF212F34A1EB
49A99E4A0751D6D95B99891ADCEE7B599920AE5BDD16F3039A9FAB4CF98C53D8
6ACA7C98EAE4E5CE987FB9CFAFBCEACC7E0C454A41801A579D373539E8AFE654
946EE19EDB530610328EA795E73FD3B294C1E56A40BAA81F04687B52B16D7847
3321C58A1C5EFC604D7EDB6961C9EB27C6A8133077B76BE13CA0AAAB196E899F
56CD405F3D8B55340E2A24629AE6D4F7B88148C2A16476111E1622877D7FB780
0C9FB19E65419EE6A7BCBBC4C0EA1A38DA75227C6891F3A4555F62C3FF470450
69D7813C2D0EA9B5517226BDD558B37FD3703963F0DF707A44A0BFAD85D6F69A
FA18611CBB09BCD61592009009C76CF7E2D39A552E340934B482293B730B9880
BA6ADE58030D4BAA648B722688FF8275EB119F6808754D9F00C2C9FDAAFC16E8
A90249835F399A5539268140E599314EB3EE9C9FBB0F67B045A17CC9CD628106
ED3F23674D6B55F27DBA04A1BE66F3FBEA126B486CA6F6FDBDE49AE473C46E2B
AE77FFA31136E6194DE173DE8F93B854B52AD496F58671E99A2F561FB21A7676
2AD26ECB0F2B3CB5C3C2C90DCACE8D1BB3D2C2A6FBFCAF8B75F00C0C033622EB
6094BFC8997B1D65D7173640B2361DF32AE20055EFF11859F122729B6E985FA0
2F789180758CB5E40FAD2BD0E4A563D1C5E94BAC3B229672310016F5279CC754
F3D13AD666CBA8F8C56E27E44B5D5EABEE5A3EFD38C40BC3B14D9504DDBD0985
50592AF21495B2061F5F4BE3B7C96614710AE128438AFFB7A485D4A5BC134E6D
6083277D8A4F6447DC59F75281DC4C2F6BFE223133F5E9B79231AFA01C2C8DDA
07318BADBD95D136720F41F20A707D619DB7635F4485098408970B3FAAC4DDBC
9CEF34B885314321C04AE86EF9AA65C40A4B8EB14265FCAE4416678FD7EE4DC8
36F31EDEEA2791AA1AB48510916FB1C6590DCB5D7D5955CF7298C7026D5FE1D4
78A1C463478E134BB128F708DD8155F2535FA1D1A508FBD0BDD36B694FC58193
913683CC2D4B7B916DDCD573E08C9AEE160264FCF6C2EA8F4349C9D46808AD9E
39ECBD2DBE7E2EAFDBE45CE19A2082B6CC00DE76C6AF71DAFD769D2F780D0B5A
FDB6A81B482BE6F6C22553EC3446192895F39CF7F995D23BC4E14459A9D12152
ED81175F3E22F4394E40317C4B98C52DBF0CBE8ABE30B4B5BC9990C6FAE8A808
D07FBEC277BFC31E528BEE655051D33963346CEE19F2D063F95C39427AF2F341
F496A11214C7DCB12616F7357346E65553F4B704F7641BC264BCCDD859069720
4AE4DCF7A698728B485BE2CFB3AF8412EFB62954843A34841FBFEB762EE097D8
190E80B9F4EB3140E75879BE4EF03B9AEBBEB3B51AA797687145CDEAAC4D9037
CAD68D730C59F8916DD217E3C33D481974E8F536D030FB2B0EFDD9A57200A829
74EAF0D36C036C16D78E767B0102669CB93FAD213446927A539492EE4346B39C
BAB90443083A74742E895C8B2BB07DDA993908EFC3E41516CE412CB410BD0262
31E22A9CD0F664D769E6556F131B71830D84172E7CD7C05B2585A53C7CB0DA51
0CFC953C2158D476D0FE0725DEE6886BDE038E272FC860758F37F1B4CB61B37C
3230FF3B6E50CEAD45ED2C0C270CA767EC7EF8F34D00DF035B7ED2E30077811C
4C5CF5BEDDD9296863F46279D85E4AE2BFD687F8117DA1AC1F6D047C31F0AF1C
2FD75C48023CC0FB7B49A95CD2A1E9AB315D335B1A481FE3DB344A5F50DA95EF
3F0F916C9F077963B5017C7EBB3D29226084B9ABE03EF7B5DA545D43A0231708
E5E6CCD078D7F2B063F5BFBA649CBE7A8CAD9A816C933FF53193EC0FD78DC588
E29BEA16B3FD226B20D4973DC048CEC4892CD329DBE1B0C05ACA06078A606CC4
63637218A766F1CB52490678F3DEA278C3C551809A46B3BDEECEC4D91D676820
C0C3C49C5F77E601BED695A5184B9AF41935D61803CE2E6B9486347538F88274
6E5DC259E3F50835A1B9454D057804AC7C59F1926543BE3DF8F379289BA9BFE0
814EB479823CCE8994B0639D860F9B44FA327237009BFE0ECADA74E5E17231BB
9B741F3942447A34F55B7688678EC59B79E13B57B841D4F6A4AA1819A34FE0E8
C13FDFE5D941627F8B766FDE3AECB2093F403716136C63EADBAD9C79B3AB6380
0A37B6EDB5E58E01E28FCB37B041CC965CCF6AA93CB8B89B76881DFD8926A69B
9EB54A68FDED44D6EDFCC85DC46A7612FE2C58333FAD8A5DF5D7ADD8FF195104
B3CC39DA6270DF2CD5721607DF801E05F99DEDBC87859B42079ECD867CF27A82
22D89402C386DCCC89C52E4241BB74FCC957B07AC0876167A3309C286AE83386
EED2C2AE21BE2B99735920AD6B143EFE966AC1214E4DA3FC84147E53EF073046
43EE919899A88E10012E0BDFFC884E32841E6BE1D88CF918AAB8ABE40DC26346
67C13D868F2C81C2F455F34CDB44B528E8DF3B36DB44DA464B47BB4DC9AA04E3
B6CD9A0127916EFDED886E3FDD7941DF7D31B7786B148456ACCE89DA8292457B
00F12EEE3917730FA6F82A96442A81B9D5A25E176D10E70FBE9099909B9B86DF
DD3005F3AE2208C5741136BC9B8B1C47F90BF23C5E8F45272A02059252E789ED
A174CA001B3121DF1A8A1BFA725969A6A1BA71A561F2F7854BAA1C72B37A237B
BDCD12C56C7856D4B0ECD4E415CC9290C79FE24F1A8AC6C6A306753C7C6E6753
8BA28C743EBEF8C82DA021878D12F59FCECF6F9848B491C64BE4F4D111C5CA3D
D24A5F54A849C5F2F57D79D880E13273F7A423D64D1693B7EA8C57F322ADA058
25004A9E46785B47E27FBFAB6673D7FCE9FC7C29EDCCA10AB03099187ACC0F68
0A66AA8777CB0D1472445EDC8B761635A25AB894750A1AB42978D60C060CAB8A
06F6E369D3D200565F58DF9C93B7D56F51286219AE3AE753950304A734938DF3
A3EDC51EC63F459732C2BA6F48EF90BEEC53E88FADDB38686EF45E96B266C0D5
4F9300B1A5B261A193D64E3AEC89CE84D6FF439C07C17C2E8073E85DA1EF9EB9
34479F0419EF51CEA749DC98F1880BAFED29A5A35ACA78AB5A380DD876F14BCF
34F43878F7D76E5B0744A7C12C1F974E42BCB15869166F8F8956A8603E807FF9
45B24970EC6078E5A0B36CE0B77700680D76C4999A7EB3FB9C5287C3764AE204
5C3A1E9C0661D553F8145113F886124DA9A4F8F2F30B3AFC1DCB0EA367E7CEA1
D5EB19017B581353CE91C22B0E81F4E56B356B560696B1F12F613AD38F7CE7A4
6CFA0599DA6B3E48F576BE9242FB65D39E701A299BD887A5C930E37F396B5547
A09C97A818BD326D87F248D120E2B00CEAE9790DBE27B9C48D5F607E30A7559C
15D1BAD2EA1144BEA92D620FF4CC394BBCB96B72B694357C74E2421E130EA691
A7861CC2444EC26B65EEB3F00893D7B5DE058009BBD440C80C04404021EAD219
5AB596327F9C5FAFEEDB527A9FF32D218F1543B2B419C3BC97A411F9E9346FA3
0C01D67A31E6186C611E98D4465F8ADF992ED48696F7FCCC86D1A9488A107E92
496B3647271CEAFB802363836DB72A59201244651B87E512A0EBEFD65C19B147
FA8D8E2EC2BE158E2706DF7D026FC6B435A3442102EE862767611644D9EB9FF1
2CC3B22941CFD212FD21A4DC52AE145EFAD751ECB6ED2E14155A9FB55D93D768
AF5356C65C3EA6D2825174DA649ACDC6D515B17F663228241BAD7C0CE64E2E6C
7CFCBF66DDB4031AE00406239F1F036186DBDB97E40F00E8FCA194A029DC1CD4
52B964AAD7C7953BE8BBFA0E10BDF9A2C03394BB3908676686ABEF80DED110C7
7122C6E239DDB8AE5E92D9C2C658C6BD7D49B5F1284DD805D656E52E39595780
E0537A7B03E642C28D7C25F68C1C0C65B5B53D7148E40D62FBDFACE3FBF05586
1132ECD6588E13A86417E678B90F8D9197708EB62F12340C1A170F67355D028C
9CD66ED55B5B5EA336261AA372924CA733361387A5D23EDD89AB42D07FF05E69
EE10242D56259F14B8CAF6307C9F68D0DD93887154AF418CFC78E0A9F63F31CF
1409C8EA94A822C9C4DC8D391CF1DA573ACEE3291B3F6A2E838A0423F7954B7F
5C6A0E13690F0038275688B9FAA65010E6F3C505E26DC2813CE5A10C29E7FF1B
1729F9D3C9447D19FD60F946A6FD2A412ACB43FB8D7528F10B88066428450EC8
06F10C4828DCEE6BB3A464817D6A81DB36839592FF835CB5C0990118918D7C63
F85569052944E9B19E547FB532EBFBFDA9AC06874B5464B5101EA282456E0B78
1A60BAF3F2C5ACAF81F8B9851DEBD2D4C4DA8C0A6DFD93A6480A6DC4F07ECF77
C0958806E3E2B6654F571EE93446A8FC2001441374F451EE187F2538D6BB584F
4AB2445E50B6B6FC28EF779DEBFADABD8A317ECD02C384E9FD707046AF9C5FB8
49AFBDC3C6DA722ECF61AAF6FDF14E34722F98A2F7B5AF8BA11FECAE4938BD6C
BA03C00D2BB80C6A61F3F81ECAF868522AF3B713BAE4D271C845B75139306A9F
79BF252369FF997BEBFFF347286DD87F6D75A8E1519A656850DF9FACDAAD6E56
3381DA2C3881E702610226A47CA50E300562184DA027A12DE2F65F409648F501
48FF03EEA3D6280699F403D6DF3D6B642FFB90E33CEBB398952CD5949FAE3347
E38D5ED867B68DB1B7C91E6E6F21267537F230474F3DC9164F8CCB5ADDAC5711
0FCE0FD6DEBE9E7C7B2835F6095FC425AEE3A7F1706295B1DF76B33369AA80D3
DC684C3134C37B224588E0EDDF535362EF4F6DC8789882C920682489288FC1C1
71F934EEA9D3BD925369C29BCC9CF53232454BC0834C0D542467920175F09D2D
DB4C8D65D9AAD6E59D9178D9A544430CFF5AB8F607DD0FBCFBDF60B40BFDF5BC
192B5F8752A2CDA71C1499CEF50F2E4DD4FC335BCEA8139C40EBCAF4B1955046
3745C5BF84FAA5E8A9C1D5460FE7B8992AB36D311F176086B9206FC6A29AF41E
4B592E72065117ABECA9379D014A3BDD394AC0CD666381B22ECDEB3E3B9A1D6B
07443E9BEFACAD4BED7654431076201A0A58ADB0BE8A0D4BD8468675969E48EF
A137939B46684638AEB4E0192841E4A83139CC523670E60F0B3A838D3B423E35
AE435557C4932F338BF51BBFBF9A63CDFA2B0500DC12A81C04286B5AE5573D30
CBD27D9505AD06CE300900C7D4105DCBABCB8932A0EAF5F7A9F3B43A344E84B6
03738B27CBF7EB61BB5AB18499DEEF2F13DC244B261CDF17A45A05879DB16510
476388982CE4DC9EFEA1B6C1110EB6207D648C2A805A91602E12BB98FF086E54
21B8FC2089F79726807F7C6B49C1F6C7093E7DEEB33B636FCC54FFBDEF8A7E5E
E093B1D40E317DD5703C7E3660760E87A5BCC3FE90F59F5821D3A88038C8E4E8
6DE47C9AAE4A217CFF8F05498BFBC6966F35D0678ACC5E81BD4185F6FDC0172F
32136BC10787E7310D32F3EEACD30A4F54DC77BFA95DBDA8AEB3A5D51E6EAAC5
A127A8F908AFDC8EA27CC9A4BD82306262A8DB5C1D7068C9E240B31A225E4D91
E9934CB821968291F9BB9A93DEF511F6CA30237172E3E8D84EDB72D5AF48333C
EEF334216A60DE3369B4C54A27B4F8DACF8A139F55180877FB32A0E594ABA69E
5E012489D843D196EC76505625DD74ACAA44FE1390495A1BFEDE0299E42462C8
D52AFE1538B9DF9F8DB425408217BA5121CC6684C59F3A4F0BE5962AFE6B2E09
5AB560E33C8B6054A77EC43C948030A8F49791561D916FA66224D6F948ABCFC0
010F2DC957C651E91749678695DB457C9552464E39CE7440F2D8B8AE27B07317
6DCE4F4FED96493EE365670FC5C5F88ED08AF08577AE26BE21CC558FD91886DF
5272BC7388A474A7572EBE57D08476AB0CBEB4209359D1E0F41C0D9E3BA65271
C087C8975CB0356C245225A442D0958F8ADCD2697D1FD814E59D12526C8F473E
D5B5938ABED5AA708B0B91736FD55235270F394E0E4FCF68514C5C1DD46A8024
8B0F9B9AE15210951883B78DA7080842B2CEFE7F5F3A54E1B269FDFD870DED55
6A8446229B99B777B38BEEC165ED28A686F79A005EE80CF232592BF1652DA0AB
7E7C5FF2743B4340F2E793A0ED8D149160948C0A6749971B9D22BD5A51A3F779
E63A95238D227C54D89B6A28B8F7F4E98E2660E478B19E13C0719107A5B6D7D4
D31B484DFED2CC8214921CB58E3192078AE70377FF1CCE2F762E083A00C85085
2B61E0F4C5660FFCFBC6A5DDCC72FD42E49540DBBDC521803F6030635E5E4094
7BFAAF17B88F1B3926C10F543D0EAC92E79F6CA24457CFCAEB397EED85C4458C
45BED7929C96CD04473EE14E30F0B2E57F981BEA106D224DB103AB4285DA21D4
14A6DFFABC322A2A3F626B95348BCFC7D7E0BEAE1E293A56D7F9AE4418DF171C
CBC74A26C32A540E5722F3BE4EF845CE822D6EB637176E9AC7C5DBC9B8CEA48F
3AC5AF945259EF36463155B46A2CDB31C97F660A45DC92018565122DEFA8B73F
F9C89EC3850D88DBE34B551B5186E32D63C53BE0367C31553E7A2383719791DE
E2FE5770ADECFE05C459803AAD9B7624620A881E0B26B2B8F1C1A0014DD4AFC4
335DCBA5EF77FCD87653407473EFEC6B214402C3C0EC301428FECC02750C33CC
3526149C770C2D7A87949C7B09BB880D5062DC0E9DF15AC50D5570E95592FFBB
D3D0324ACF7E19D69F90CFFC284E80EE209CC66F7635E05D029801B75B3E8067
E472CF9870849517153863326B9F9BF744D3ECAA31F26D0DADA7B9158408F12E
9FF25283A3229B0B42AD58AE11BDFB48402989E1C66892E01D898ED619ECEBA0
5AA228345B5FAD4B30C3EABE6AA2DBDE80C2F8A785BBC34509500E25691AA32E
C915EA887FBDBBD754FC5623575161086B77B9B5977AF15D7A6C0B74B0C839FF
C3DA4C2DBC0470F64DC618E52975CF200DC24DFFA766C7D7F78B5B946B8CB002
BD4B6BBB6314B3B1B2497DB70B5FF56805BC9358104E829BDF87F28B5C03664C
255B06437D47BD5825605C92D053D57A80F9239DDAEFB12A800967C0CBC6FF29
EDD43AA702AAAD8178E086D66B8BA4CAAC52871957191F51AFCD3FE68E42EC50
4536F19CA745B4BB4B0D9B8EFE3009E03A05C4E52F6746265EF99483088E0697
E4444D7954EB99C3609C9EF90EBEBCBB9F4C3B9B3CAAC4F24A69A4E4FEB31389
910EA6DF206FC77BC8ED7C5FE4A6511622FBBE7DE2D025A19CC9B5E0FE98102D
8AAEB085D501153A825DBCBAB198FB7B57410C32355570B2AA445DFF0FEF260F
BDF0251C4B7D0FD421DE06B3D031D72352213CCE18678944E57755046B051DD9
E902E81FF295471678C1BE677CB9027EF387F74B2509187EC5BA3975400B948F
0404E1B7110E5005628FDFE5D3CA5BD3637A723A853FB44F6FCD1FFD64723A5B
E645D37FAFDC72E46EC059F9FDFF764175BC8988AD189C2402284E697F20248F
C0909150F2812232740AADACBC3996C15C354A602CEA4C0C38F03257A8CC80C6
DDA4C5983421759833A16C70C0925F95D6704487BD06D08F3313EFD80DECF58A
773C176AF340EC3AE1A2920D94B64F69C775D724243D76170956FC2EA5B958F2
3D2B88A3D1DB2F628F0D00AF6BB5422E3C175A532FF6D6128913E88A22EF5CBC
E27C9BA0A18331CA47512DF349C2FAC984D49E876E9D8FD984F7533C9018338A
466AEEF5CB380C506E7C029FCD13A74FDD5DB7818BF011F22A945124BFF39434
E3F758F7B362557B005F5BE75DC7C97BCD7DA0B0889FD9572B296A8FADDD7FEB
370140E6D3DC5938FC1D826D5C128D6B0337050F185B10B98514C1030EBCA3A7
8867B5EA85FF7A7DCC4B932C293F0B34B6B7ED3C658780DCFDEADC4F2AEEE4E5
6157FF86462CC8F1628F945022630AE70B5146D7A2E46445C76D02B83099C957
5027452E630925C6682BD34F4BA2226D0032437F013E6FBDF00B2610CC7AFEF3
A679E0746B5D5AFBEF1F3A17AF8C7160F39BCCE99978818984F137704E72EA29
FE7596CF8B435C9752B03CA80E973D68640D666F7B05EAD8225D1B95C2B4DC9F
F58E19C4FE825C8CA4A5B9BD12E1FEAC05A5EB443CC0007FB3F4F01CFFF0CD1B
33EA757DCCE46C3DA50FA04899921DCF8300B8E435E2F0E56D6F85F61D76178E
135B8C91A7C6E7FD26C9589FC988D94EC24D9C4887206A7104744230C17481D7
A57DE5DDA887446BC4889C3CEFCCB54F57CAEE241E4290AF52D0FD3F353904DD
E1699D97541891BE7614AD58C80F92D3B3AD12D8C0104A0173B58BEC89C7F67F
49A555BB21CCDE11E5CA444D93F63ABA337C99FAE0790068FFF31F9259A384DA
45596A7C2F42C3E6B0B72038A02219358F97DA98722555255C015EFFC3BA8B9D
1BEA9D7DF73213EAAE3FDCE98DBCA60F36AD3380C1EC606B72890CFCE46C2A1F
B25C584F1765BC31E3D4EB384F7BC92E0948D29AB4F65C8802DC600B47875CA5
C91DB0A35F4894A78BC7DCE5C5AB3FC37DD2525AFEEC5A4FFD72CAB2985F7DFD
977A65CBFA7707221A6CEFB2E0428212C74587C078D79F4BF0BD498F2D25F3AD
1918481C4451E5C7A0A0B091AF216D4897A3F4E971F91B400FEC879795AD01BD
8A5EC1387FDC63CA9F44FA8FEB5AFD0E7316A18EEE0FEE77A69FE2203908E855
C960696BCD1A04CE6D2D0BDC4E5535AF5ECB2045E9533BA8A1670A411D56EFA4
D0435BA52056F54476105D84390480C0E8C8524561BCE274AD0C3713C89BA642
A1D706C40D5D38A7FE08025B5CA39F9D7E5BEE4F7971259FE4FD8C3708115457
74BA9FD022A54A1E0FCAEF42A55C5DCD2DFDF2D55C106A397C27AEE502DB3E59
ED827B8C18586F8CB726BBA3FC7E13C874D567791289908F97D0F53DF63D331D
2BBF6E20C8479A311B57B11B7F26AC2358BC0DE7B37F8BA77576D0CE66FC071E
AD714C3E467E4515B1D975A028D178D1283F0A7EE18CE225B738D3206CE3B7A4
15AB63A5510A272180327234F4EA201961958F8FC40969422585DFBDDA0543A7
D67BDE96F733CE6FF80029F15D6669AB4BDAB3DA7694EABA2A1FDA6086DD5914
A1D3AFADF33660CAD6DC3263954CF2FF21D83C83E5495792016386ED93049796
972CB507C7846E7D241992E0A000D54EB89E05B05E6D1E0321559F67C0AB254F
060E04DA9CB20770F7F8DE85B10DB1D90B335E19963D297F0F504BA92B3C4777
3F5A8B3B585FD38BF2775861B4F5476BB7AF84162A0603A931D08C5B96151DE1
E9E6EDAA57A4AD6A0569DF08D78C749F31F3CBB276BCDF222EE05FC8C955FD19
BC663676F28C2DDBFAA5559B32215B45893BF220871E46B0FF4264420770D849
3ED09296E25998FB851318EA61296F144224D9DD775964166B99D5EA87C00FA8
179582A597A4E89C7F4CA96945818B3F7004728E2E752BB544F64A082AD100CC
AAD1BECB8C59A9F476C38858F9FDD63B5BBA41AE4B428A75DFC1908530855FCE
A7FA8428429259AEED3E9DCA2767FA7362432519D0E0163BCC7A1AF528EE8C5B
50EF4133EC3530976E7E9F1B86F67E776AED7921452931A1FA1F30CB3D06D783
3E676B813CD737BD0847A037976B76A5A112AFAD40BCB26082EAF11CBC0A16DD
AADB3322E8CA7FDF4ED432F5107AAC6C676D39E42A78CCDA973D05B48730DAAF
CBDBFC1051530E0858757C9A29F46969DF297C310AD843B956C93FD6BF9B41A1
015DF02A0B190E218AF6AB01266E9742E5C06F84A5790EB1FEA0C602ECF707CC
E7853848BA999BF51705D8905D59D91A5336C34B42BFB1FB100EE46663549683
F98E32F63AF8C417C55ECBE28994CAF745D06997EB1650D7F50575A62A1A8D3C
BD0F0DC32DD757170A3B553D01DD74E713A9594BAD5D7052D94F475AF1CF50D9
6B4998B2B5EF4C21FE710E4874E737C966EF056B5D6544457817A162B6AA7583
D85333CD60F303F50BF2642483FA8A8DC5CB2FB6A8353F994F59F8B606D6FAA3
9BA03275D6B2FEB5BB2190D1BA3141B709914989210688BD495B8380362026EF
52CAF3A447AE26B466E654A60D7DA7A7C09D538FDF9D6EC709FA9517A558E9EF
C4E9DA426F4CF3979484BABFBF4870F0D669C1121F7D187CE7C4620370315F93
F6499E2E294839A6876D9EBBE2901A961375F8D79EB66AF8C448B5DFC979BA5C
192F943D200EF04913DAC23A107F47C00D665D7CFEEDCF334A0D9101CC3259B6
4AC6C1DF5577BEC4BD5B8562CE26D5FAB880E78D2F67A20188148A436BAD5522
53143BF0BC135C5F212E99AD5E1AE1154F027896C38E0477A92A7A990003488C
F289631BEF193FB75388DFEE699E41680D095C4EE016185B752610C9C82AC632
6E460EA76CBF392A2A4AD8B2901952F994C4B316EE9773A875CC4C4EDACAEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 61 /slash put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC62979F87BD3B70A8A2
C7C994B4FA24897D4F8CBC0D021D6F1B42B9BE470726AD1F8E04551231F475EB
9DEE98C52EE5AEAAE9A595CB446F741F1ADE9006577067DCF9E512E590119EA3
6C97CC7877DA5921140218B522A7A27CA65A3FD1F056766DA9B878C4DD18B366
D576E34ED6122858CF63FD919D83DF85BA4F98CF2257F9D31AB12236622436D3
F63824512A4CB929A50A2DE83D38D7D9AA227DCB20A63BEAA823E46812E8DC19
E2A678187AD4B122307C2EE0053F0B993EB7CA4CE0E7C199904DB607512C98E0
C1D30AF2F4B6C6F1C24A06304AF8BB06E7CC9B8C76706C5AA4E400DD8D640945
DFE774020A5AF436F360F21BC888A3DAA771CA2DB3DD2F95DB6D05A7AAD50D40
F2EDE2BDD92D5228C58738035835DA0812E5B45BA1550FE4E744C41FE4530C00
9375ED5C4BA2487ABAD8B9E4E27222154E6AEF7DDF7853D60E5CECB5822E32AD
CCA742C838B17FD964A1379A92805E6F60776A5804C0B722CC4CB66A35268A67
D3E7F5681B562D8B2F989BA4F6607F83B64135BEE9276436A16F2EE8997CC187
4176E5594B05F8C65D692097AD99352914740D8315AF20839E0D147732C409F1
48371FEF4E75C5AB2086CF7D3DBB4954B10FEB88245127E6736E32F24821EB2D
E59EBCFF598195EFEAAFC07E78642C850768D09535843851F7B3A1901258DB36
96090FE9D3C9C78F882FF8C0ED02096885A5038990EA688212F9F5D3DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
dup 40 /parenleft put
dup 41 /parenright put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828AD9B1E2C58230E5667C46D042163DDA225A921BD4F234CA2BACB5F
16EA9E34A9EA03A649F1EBD885B9814AF10D3D6530DB151B0876CAF825FE6D72
CA54E02D27CD81DA30A5C93A3836F25EFD079BC94CB7E5169E8EA2905D729B47
F177091127880D57CFCC651D1301A8C0DF47F15533DC1E6DA13BE51F80462E58
3CAE5A247F6F6E92D0371E14AD8EAE9BCBEC53B0413823DCA5F55070B1568E59
872A88A59384EA16C753AB647B46354D1C3FF5601C59502A5BA3A5D8C427F4E2
0283917FAC2931FBEA04D8470BEC1FF9D775E17125CB9CD6D13442BB0B5294FE
26BC8A0AE0765AF4201603C2A7307F82CE21E27433AA130665B3A0749412DBBE
85550995A913CC2C27FDE254B5C23A84FA88B6B0347936CC3011E396558DE178
82B7A774BD56A8690143A689E26C7F0833C7D674C1DF4BAD32A713962B451249
8040DD8E9CC63CC6C4598A17680D944118768F746369B6890A2073A16006F1B5
AD45A890AEDD680F1FD228994822FAAADA0BD03731ED701C60A4BD648B3CE90B
07E49C89E78C8165D547FDF5E1734D9A5007D7410496C1B2456BF97DD7D6B8D8
FA50976C5632E3E16420F4DF8388304B61D00B66EA79FB192716977030A95A29
784EFAB92BD0655DE8755A420903E7CF8A0C120BD12FA07DF0B9E36C84923B4A
AFF2045181306FFBE2C618E627F4E6E8005EC1EF45D6B32D6D3292FCA88D0CB6
2C41849D72486830346988B09D4FA9D91AC4594307D63B5C679A34858B7353C9
126BFB547D123139913E6237DA145A4BB5DAE18687A986382E46AEE0156F03BA
C40531EB603708305C5D10A797C68634D1E4B3EC731CB6B2A6821E48802F50EA
C6FDE6C06E677D73AB0E039454EC0BA0C33FB30384717577F3DC278045E9B47F
494F9BB4DD5080F9413F3D558E598CACFC6A8A7877B7E175E839818A4B0533BB
1663EDBCE31502F871C6D52902DC2ADF26A402E31C68915332BC0746ED0B44A2
03DFCACCFC254D6080503F4560D68328E68054F3652995EE0690A27891BAA9FC
2E75833F58C3445C06E5978A8CF4B0F5E7E4679159F2EB4E6306F92EA69EE2E1
1543D3FD10A8AEE5C079B7EEE55C8F373FE1B9101159C17E35B7A9065EB53572
10CADF35A2A0C6E60D280C9D693A1738C1E6C552F32BD89DD578D337F4F1AF7D
A1B87E73C900E82C4E3B74F4CE03882ED971B71A461FECDD579C6785B2D6F8BA
BC98578513A8975EA034D18038BD32E7CE3167219EC997B4A8D7CE352279B3AB
D12FDC82AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.0: CMMIB10 003.002
%%Title: CMMIB10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB10 known{/CMMIB10 findfont dup/UniqueID known{dup
/UniqueID get 5087392 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB10 def
/FontBBox {-15 -250 1216 750 }readonly def
/PaintType 0 def
/FontInfo 8 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB10.) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
dup 102 /f put
dup 103 /g put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269F4A3F32986A7D15
50483BA7C04CAE03D8C22F6F9A1827004DE75B70455207585BCDA37DB2ECD162
363518DA08026AD9B621422303A6D262158CFFCC48946A47FE42911F1A43CF10
7CE85E61151664036FCF591A1CFF0E7AAF263909A6A4A50DF0CDB60C91A75327
8C011FC63A462B0598140B4357EAEA08DC2C5445E1F8C2C913B721D5A1B67941
77BB66689F330A22D1DE5D86B2C4712DE9EEB66EF95D1E68BE947672CBEA966B
3E26531084152B1412F48697A965C85B0338CAD1EE054DD4445A9726A72E959A
B5B74F0E0A5A8F630116FB8342254BC455EC3667E184A9954E0B76EF54015BDF
F3DB7D1FAF44EEEF38E5F07E9589B85ADCB9B529CE9C889CB4C43D1C7F5C676C
DFE91F37CD6CD338DF774DBBAB9A1493C7384ECD4B588506F23A024487CE4903
0B8C9D1483536BF7CBC05E9326211B9211F11FC8B2B098A0C5F89F19106978D5
84C9134F45A542D914AE56D73299B3FDC93C2E8F4D271B54F7EC0FB05C1DA397
E9A2036EA69C903EB95485765BB05BBD2E021ADD7B5D83555E490EAA81157819
A2AE883E39B4254EAA5C4FF60087C4875CDB9E4A85A54955EEF5DD5B15F8C970
8E22FDBBE98CCD8E49C27F55616F3588E6699202AE58B0D9A3E398A350D90CA8
D3BF920E504EFAF93B5CCBB336B072F2B3EFEA907599A95774F4870B6656257A
29ED37ABFBFDAA41ED08161F473C20CADE82D6F7531110CE680EB172A2024F8D
6F02DDD49350CB0BCC97C657BEC9A7A92A7C1E623E8B0E409A74B01DD0A470DC
94ED4CA0B6BD786EE287B753ACB1C10BD826A84D8FF92424FF1A2418A6EF9BF8
0B3D0F708E2F52E4557F497E749CA9F2E513F33D6D489612C68B68CDBBB4CE24
E53AC2AB756F64B838CD2B0D9402620B0903B8A357D8020DA8B4DEF15AA06A1D
D4D78057167B901643CFC357D7283A850C139E1BBF6E4079F375EAF63C7C4F7B
F630FB23A70A90178560B1A2C7F64A2B8796D60826F3B10BEFF755CB59DC26AB
FE5E0630FA1E16D083C8A5ADE0345F783D771AFE185F3DB251C33AD86127C0CC
548400D92F559737FD421E6D1A807AF696A22C1779AB236BDD37F7BC467570BD
4C1981D141680DC78513430DE03DCA87134EE46E90471F4DDFB4D5AF445433D9
FF6F9700904F274A610E5978C0C14110C00C0D49891AB4BC8690BC93418E9EF6
DF7A3BA8AF0BD66C17DA2694FF55528771B28262917CFFE822E973DA4B55AFC4
AE9F6C28994E25F88612E804C918278040097C028E15C6B7FB53332908842185
10217D7AF376DC438FE712CDE9C50040E0B79F4BD67DEA70C6C2FD34FDA699EB
0F6047A613FC8485CFAEC294FAA0214F0639603A00F19A5D92A3BE89E5FEFFDF
CBE800B960AFAC6EF1B85F4B74D8830266D0FDF78081F6DF0F596C90E1954C09
631D98F44A8F0C2394AEDF98EF8BB4D21AA7905B3703D76FC4E104389E61377F
92CA0B2A9CABDAF99CD194E473FA0104ABA283C76C20F003C604199E6D4D2A5F
C72FC32D84A1F4EAEE4E20660BA4C14C244AB65F000B6D896054B2B52F19F708
CB80929D9F98AEDC99365FABB6FC42D9337653ED45D2A2B802017BDFB8D28F62
745B5D74F4411CFDA724189030854D6D578DCADFB37B73AE15E80EE20EFBBFD7
959AEA06EE4A93DCE0D30B894D811EA3033FE26358EDEB614DA60CA8F9DE9855
F26F1B7FE1EC8DF0E6983ADDE63E3DC55C1088EA3091C21FBEA4C39E59BBF3C2
7C4EE5AE85C89FAECDBE6BED7B789D390EF78674F41A8104BC970E81FA9CCB45
DF6B8C2C2DBE4DACD0FD66877529BADA909675A761460C3F6B6F122ABF3C4F3C
C2B74804989359C5C127B69CE1D89AF4A74BE3B8499014942319D03AA740596D
863F0ECEFB11825FACEACB3E6971762E5BD8CB9D0055C620F4E276C3339B31C1
C321D785E1FD9D7AE53725AAEF68C258D2AB7F8DA4F9B95DD5CE20C35F3E9908
964C6CEC56D0AB5B34FE2AFE412455C971881B144FD7D979BB6C8B721A6499EE
D39109FDC63E5DDE7CAF6559CEDD080A1624690BB6565FB0828D5025D153145A
E8885E5D37301BC1ECF95161DD88ED99FCD11B77BBAD6BF1E1D1BB265817AD2F
40B223CD712D48CFD86428661D191D0DE40CEE65272A90AE80C134307D575808
57CCE5A72EE709196847F25EC20775359490CD96F818E135A4770A5D477FACE1
18C3E44F1C1F60D1B6BA8B206F107DF7FB7167870392CCB34357F9E4499A4164
0FD3EE38365F9F16642FA5D4BBCCD53E9680174838110C2F341E8856923D67FB
17F77E3C9EEA8B51509ADDFD595784714495BB36BF6331697025D64718C37131
782349E44FFFF0CC73A9A01D0F41D89A433D01D82267B25B15774CD010594C91
A5FE2AB68455420213D78D44D0D29DCBB7C27381182947FBA133FA137B8B7A78
9A1514A411497C4EAE49ABF00971280276284E642036ACE628F142181CAEC3E2
2FA3B8B74109C3317B8A0DCF444A2D7CD40B56A6A0FB571F29020C10467F8E5D
56DFF57F4B067C7115CE624EC693759F6C93F10C4BF79C1083D72390CF06110B
6A909581DCF8D72361238801670A67DBF1A2C831DBED6740191FB43F325AEEA2
7CBFF48305A64AD9FF4EAE3A6F71596DB0E5A1F5B6BA2B6869F4F65156E823C6
4FA7BEA68663C5A539F7609EFFB902DA29DB1AEC8D477051840A9AA16FC5389A
121D76409D28E23E7908DBBD8FF823B62036C9526C3B10375A9385A4AF991B59
88BF2D51C62FABFF359AAF056DB79D13260016F6217B32DFED2938DF6A313D9A
F4852580D0C5357C413D5E06C883D19CC2E6968A5902DC3E4CA25FF06C6F76A6
9E15D2395CAE81EA10644263244B15EAA5A40C6E3D66C0B6AC3AF60FE4C1F473
6D4C2A110EDC509210E58B4A5E5B8408170535D1321825986A1B998D105991AF
CBD6A46610E58EB90C9ECDF50BC0D26C7A681F6670ECCBE1B091808E4016D871
E3E4123FB6B1927307950B814B19D665E8CE2D5E5A77BF59108B2D9E183A1BEF
7D229985E5D326571C07E94A68EC0C495E8DA0DF16C11F6DA761BDF810195971
3EA07F0BAD9E1118239673FAFECDB14C685427B9FBF3D309C726D9AF11FBE3F8
9BBA94E8331845E2CD62549F90EDA5482053354CFFED5185ECBEB1305057F699
3FF0F6B568B180A1690C5734054B8903D637F31F3255526DCB44C8549B7E7AE8
65EDDA8AC5A34FF63EC3DEE34A9EA6F7FEF817CEFA9D7B22B603ABCEC4A45A17
4A5FE48105B99857693DF7C56F148FD13F085EB821CBD3F3DDB49138B1875A98
6D6E48B2C2C124EC0BC9164989AAB1F5AE8C0F21E63193C70038DE654D67F565
431FC9CE4B58D283A2DAA40287616409DBB7F7E94DCCACDF68CD8ECB19B98BA7
BD00C1499731B7959DF35899DEF7F684CAA993990B6239B66BB2220919C36185
A3BB431DCD9197A67852D137C00BF45AF3698C115A41CEBA5D3F1E2FF32717A1
69307623AEAF8287EFB7A7019B181C30F2CF4584351E8176E17A42BB48C5F521
B4538474B2724B5DB5CEA51E783E870AA97FC47401CA0FC0DFC4998613F2946B
B827C2F7E874267DD7BE63ECC00AB0E2448E7951EEC5DB4095F9915085A97AB3
812A376AC0101429983921C76C8E686A52A669E8BABBE21354C4A74A6EBD99E9
E2DCCE027FF45D75DFA6547FA60F2A63243D5A3AE3A808C75A99F3D42839A080
557C7DE6628F353F57B704B809F249DF208245612B47221653F42ADF0AA26CF8
57000DD580F6BEFC12E654AB4C4317490832055B92EE69CC2CF85A0232986CC3
819877F3DBAE3AACB1F431C216077B528B1D863CCD0BC6860C97009B90F33779
4DD77D702A114565F58A1DF4B7FDDCA0157CB0A7E74A116033212D83C1C2699D
65BBB42025622243B1A25E399014D0C0582DC50561373C8631D79148CAC3DB86
DAA8CF5E39387115637865FCC04676592C3365F2130852EDA3FD572A353F4B02
497576CE8B5E7BC90A46E02E20536AD5DC1F3EA2B832253D1D1A819B0BDAFE91
893067A21AABFF14BF0485EFF09F6256A58772FF91877896F54582EA274F32DD
CB96295DBA8BA6FAD260A71766FBAA4865CACCB938D96A7F35884B2F80DE838A
532F64A69274B1E648E6B18333465A3B89E8EC4ECED5855F6188825DC2D232AA
88283656765F0F957E152D46620E0001C4B0713F7D9AC4E887B649593353DFEE
334A3C8A3DF606AD48E286A7962ED8F7B0F382373CF35DBAFBAAD8B1B4B564FB
D421EC6183B7051E3F3022E09818EA7DA564EE44E054C995F112E33DF2A7C38E
B5BB24A172F51B5FEA5D11A81957A075AF1CC2D7C9041F85E46709ABE201426C
244C07EEA7550E78D3866493E451937C404152E4B9E081F52653EF379AFC7F85
D00FDB5360563EABFF210F4D46574091A6FBADE205D15BC7A0EAC7C25BCF58CE
479497AFAD121023BF24D9737C42F4566B3CE3E0DDE592E02A4088354A4D5799
02EB0EBA57C13A27BBA913EB949A144FC4F913E3A06FDF1C7C88AB50BD994F8E
08A5837496483EE06EDABEF4381339B1007CDB8D888A2770536EB20DFFC71327
B768DE076F35D951034F4E09E18359837D2D5B80339885FC6FB6E6CE88BC0C7F
465D36783E58902AF41670D0E01656E2983B45459BA7D7822DCA1D505E36F554
4625A1684579A20F7B9491B949E2FE69F32A016E62A979EB9C4A05944001CC9F
CAC4B8E45CF45726B6BF10811DB74CCABA5EA5E5F2AAAD3D24B2CBCA416F2BF5
C86B6495C5C820757C4743F1464B300F47EC054EA29215AD2F2F17F55AB92016
9919577ADF4BACE5695986055FC4730E531FE82E9D926B1B03A8C204F6FB4A39
1C94C310E6D5F2F53D41BBDF76848CC247C89D4CCE56EE40FADFF0FBB48804C0
1823A8A70992C265A469576F47CA341810FFC1B8B58ABE8EB762567DA328B25B
A9D4F3472428AE0FC180543D29B8E4376D7EC48D25A411991924FFC2DF520BF6
90A7B08513D2A6B42F2AA51B0E3E5F2F6FD57E63BD1736482F303A13D6E0EAED
1761211598B1F2AB26DDD5D45ED477172287BDA7062E8AF61D232473EC060F68
31A225E0AF2E6A5BE2D8604384359C53F880B0A503B5DF5C98D2D657D1466390
6736B42A24D1DBE55ACAEF4C5058DE5ACCE069D39746488D6AA244BEFE1F32D1
BF65D0EC3FADF515EE45E672AAC72040A1E1065DB5A52FC889E1650487BC4C79
77D55ACD9D726C74B6249277B0DF721ADB3293098639658F6796F7A012416C14
7C694BA55C734A527ABA0C9E6363C2C00633058B69261961658CDC29A477784C
90517818017B6BF89580BC66BF15757490F131D9470A323287091DF45DF490B1
9328CCAE434A9637E0E7D3A63A418989384C98463294D25CB07883B8637AC816
57A0AB17C4BB9891599D2B8398DC08A13B73A2DCBB9A79218C161AEF14D238A0
8D00C90ABDCC18B11AF05A54621B19294D09A4B533A7F1D4F0BF2E637BF5E723
53AAC5785828293988797F37B8F14C7CD165E8587E48A876C96D701F46438349
0DDF52FB12DE623F786F13D9BCF2D5BFBBB9D5A16E3FBBB5E6A9C34494FA3F6D
B81C12FF86521554113D1AED9A894E5BE1E7225A9B98D4980AE902A8DB3DF1AB
5D48B334C4476EE4FAE42C2CFFFD1BCFD99D82AB3992D3CE1F8642FCF7BBEE3D
5840F516EE8F6E87B5294DC8BF2DF4A0B7A380CF7A2BECF45CE0B0F8A996A463
E6193879C8E25724BF182AEF116B7FFE8BF1A1C7FB6FEDCA86965D325538AE1F
2863A49700469ECD3BEC3D75AC255984373E4A5A621AFE445A10B8D97EF1BCBB
61263A4A2009650770801C386AC6F95F02870DEC62FD6C556A084FD4C165AB0C
A52DF2633B01DCAC757F614FFBE09CE217092414A7C0FDC43FB02DD311A70063
2E594A67C9F8D8CD037020C074BFE24168E810C8804EB53F16CB67ABD8C9F99F
80D65C981C4221E857378C4EA79E5CF88CD53B841C2CEB7C58581AD1C3EE79FF
6B07BD35895A8843393EA65FD48BD248DE0E7799845B1B568189EE76445A58E1
42ADE3CC51747B8B97E031CD51E90C75880B6EB5D7729BC29EC0AFA8690955C4
AA5E809DE62E0AC18C5F1A6FE5E5F767B70C8DC44C965E7E2E8077938B4EA3CE
F119F7F824DAB88946A3BD00FEE7D8CF68B5A35614F864473C24A95F13C7BDC2
00F018B5BD313629E0BF5A5E35D0A34000BA338653FEB7040C3D5A43DEFC7FB2
5999A596BB7A701E8E03E8D3D35FDE11BC8421E8283EBC327F7C9F6D457E573D
073755A97EC24BCC4C33D93D72F62790E732CE02320F8D7B385DFE2230418B1E
70AFA7DF7D83D7E04A2F657CA6C2410A63F9B45C562B7736A272349BBB18E462
A02BCF7CBCD049B2FA692445C13C4B28C1762DD4A632CD41A8196DBB26075B7E
9708EA316266289D910151A6F7FD5F4755E7A41DCC3AADEFEFA2F28D241DC4D7
0AD828E18F7541FAD3C51FF4938FFD048E1EFFA5A6E443049FCA2472FD9CD0D3
00A0AB032E36C43ACE958C75B2772BEEE4327A53F279FA49DF38E5A3BEC64EBF
7677CCD8EC1B972B65FC2643DC5064EB8A66A777124B70F2DC6FE62030EA59CF
9E328396317798C1074AF49EE9698EC5B3A0DF1112669CB2EB0E2B6948DE7DB4
B136C23C5D0B2DEB49808EDCD5A3B68E161ACCDFA41C8FEDDA50942F8D2E75EC
EC36EB127AA8656B0EFCDEE65748D32220E16F296B8D06AEF513E272CAE380EC
17A1A2B0F235FC70D479A606B33AFF70D324C6FF178A38DBFF6F2BA86115FC2B
7237BCD1325690F655B912C30BC069B20095279D01D4AFDADEA0E9FBFAC0B22E
60E377515AF3012FD9069DE25DC4FA527AB6B2EA9CA5420243D815C95E0F4D51
FD84FDC5341F20BA6BF1520C684788BA2801A7CF3B95932EDB3D8693ECE35D70
3666A19F6348D59155A89FF25E119B37D5AF6635843E4FDCBBC413F4A6031F4C
615AA55A257FDF806FD0CC1A65FC78F1427DEDFBC1FC71408978F46E3F32E8C9
96FFE6AB284538B37213D6B88AEA47E99DD73D9AD4369B428EC913CBB75FF2BE
D9D9C51701D2D0559632530D6231586A667F3A530FF2F6227EA4CDC10BAB9FE0
E313D378C933138BEFE6D0639DE34F45A5CE2049F5DB6E28A70246877C55DDF2
079FB885DDA5C02313345CE0D2373638BA9990A6911978264D314CF74DF63517
57EE8699DEECC391365AFED7C1329813024B3ADC3565E28D754217B5B1EE6BF7
AF11791FC1BEB8E6835BE35B05CCF2992ED7EB12909C9D10E89DDF362036ECA9
FFDA4DCA0A6B1485F4C4B8A9BA588C708DEE0286A83FBBC77B9E9B8DEA69E54C
D7DA907064DFD9C45D3CEA56AE7503493D5F4BE359D3F1669F0B4722B2171811
C8C58B922FB5A692314BBE92730DD235964A7CE0DA5F79507D659EF04BAAA9ED
372D08CA888C6640CDDF10C3811BF9679C6340418C89C8A56E50467C11FD1BF7
D7A58A97F117F511B5BDA0F10AA18F32C4A6A2B7AD54974DA8E693381243AC52
1BF222A8CF93A087FCA2CBF3C036E803B2A5FE026072BDEF9A6AB04B50A9AF0B
C78CB24EAD3C4C6C1043F6701FBEDC2B16C73B0220B1226E8CF1C4AE76A77D50
A4F2FB0D95866FC447A648A6E95481134C882B3CFC3CD9CD8BE6B0D25A1CEAC0
E1CA4591E98EACE52EE14B5FE74A4A729CD3E5580A9B0D0473AA2ECE3C05B9D3
F253C0B613BA7CE0AC4D16FD02C19C536AAC90E5511DFABD5837A3B800C49239
871F61F40EBB75EE3024F37818ECDA106D09D2647CCC4E6AC34F49B8FFF4238E
DC8441F3D1D2660CCD9E74EC97A6ABC38DFD67586F2ACE7E0A5E3221FEAE72AE
015057767BD78B47348036F41BD7AE960ADEC799AD72A1E98111D319AFF42709
A6B99ACE3CEE8181908242598A4BD3D5BE8854048CF160DC02B9EC518976DE0E
AE3937699CF64A56FB8171AE132D50E2778447DA76E212E748E6C3B466384472
8C4C0B0CE802075CB0E9529D572207DC54051D1C2A039C13E2D42965A274C5B8
1B33FFF0164FA482A3B2383DB03ACB08642ED48583C8C5131A46906239613CC6
A08BB4FB0CDEA716FBC337D9B3AD166B5A39149EA5957118D31D5A7919EBD027
9B3E13913445E729C5720054521E2235771048D6EBF351543710EEA40541EE79
86FF0218A472D6347F6F7B5FF3B7F2D2A1D203EF1F471E44ABBE43E43A931B63
B028A50171BE205DDDF4D5B41D2261DF52C52697F44578E1AB57EC7FA3663C81
3B2942F66013A735EA02D0C35D2048B8CA6512519D6D424F55E494C9E9EEB8A3
AAA67628065C239DB8BCF799D1E2A889F5135209DF90D16318D6D8766467D939
5AD624CA5C5B02C980C5B23AC108144549B423C82814ABF261B1A5F3E989401B
C456DC4F8C94FC5B017181FE119C8577210A3595CAEACC7874B19C0435A355DE
FED988AACAD7DEACB2AFCECDA4E6B007487BF1336FF8B388AAEBACACB02BB085
16219D0411C061F7C5B92BFF2893193075146265C08BC8020E6303D6AFC56D58
5993F0FF783ADDA2BDE040137DFD0959138FA5873583C6CFC5F7362BC416B2FE
944FE0316A5DA069FE7C26B13A10BD22DB11288B7EAFBDD8BA9392A4EE4AE482
29502521747434C181C7D3D5851FDCB97F95EC423A446A896D4F0A4C668DE97A
9B490E12993E575CE43C82A04D853780B2D198858A5960F5E532243CCA03FE21
F8B7B6B8B06AC0CA408197E242D44B293BB32447F718FD7C038411E0EA8DD9B6
801FB5A10588
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163AE57C48BDE42D6C1556A37A4B44D30569AA0A3312CEEF1C35327E7A92E
F2EE4E7B73DDA96096EE36242AA37D24D75CB4021C96454F56D22E46253CC398
56C914E2246893FC1F6DEE943B9E5CFC3FDF89BEFD26498437082246038C4A94
606A5D1A9FAF6A14ADE5CAA159FDEABA0AD7417E7F6B7F5DE3F181CDA0D7E922
BEBA86F38F87ABCC697A80102EF2E0D4370D8B40B16153E4EFDBA916058CBB14
E78DF01395AD8F8C1BCC43BAB10443E92F1DDBFED3D78F8919F275722AF44C4C
1FDC54DE5CBF0EDA5CD019A73B7944352D5C77B7BD8EF73C7EFAEA8177D2E130
3596538E5EF700FFA48021A3306256792C605C6BE3DE0400B03EFF300C4C7131
6CE7109D902BBAE513B3E7C2384C8FB8B7E7949C8C87DC321EC1E5179A8A5ADD
17220ABB9A29DFE73268A6D2AA7DB90E58900719A8F373E9786C68EBF778F15B
23414D4490C3869A937DCD1EDA923464C470E1FA47143619DDE30013C94378D9
AE058333CCF18ECCB0C5CA9C2DEFB009ED964FC74C23F1C225251F318FF7C437
AB9369ED158F27ADD340F46C2A61DBDB81DB18072C7E619A87D96273C5E862A5
243CC499B0F25D39F5DF2813A66CBF86741FD5F04A1813295F90673F962727A7
5409E10232B130DF2B2E4250F5CA8C6ABC1BBB23B551617D778C35519FEEF86D
A77A5290E717C80D4AF6112BA3296ECB9A23EEF13226B231643344281A2B09A5
EA95716703C86A2FD6DC0872267981DEE99145F1358D5688438686AB85B63FEE
99AAE51019C52B98E55A9BBD647EFE0B9516A968898C9D99696BB963AB27CDCA
A0FB2B2796D9F739205816B90E70CBD9DEC34CA231F8FE76B91F01D40C9728DE
AC14CAAD0F97E5E96CD1D5FA511F88E21C85EA4F84536EB66924908E281DF129
B57D45609CEBA50C232EC63D0A2751304BC63362E97DBA6EEF9F6979758DA19C
204C30B0E7AD46A0885B589F589E3EF80A1CBB643A8744D66DF451172E9825DE
FAC21228E28F6710947228A07230643AF7D49D436D0BEAADC717D914D4C5E021
0A887E0683D89D95E7378971840C688D221C3B68BB05CCEC6B103CF0E344D4BD
92F2B9453B2FAE0F34E3CCB053B229900D9413FC7EAB80B776D19F18D6BC9744
5668D658432DF9099CBBEE84EDCCCAE48FEEA1E19C2C58DCA242D1C6BEA07E93
C31D65A5B26627DF420FF163175BC61517AF8C6009ABBB44495E33107BFA50C6
F63B6D31BF2457F72163A86EF42565A0F8421AEF2AED6EC46AA71303FE0E3FBE
0D402251876A374F482E5D2AC06519A05B4C93E0F704100A04BC6DED2A41BDB8
4EFF3C278E4BDBED6A37F2FB0728C8EDF223E450AD5E685975EDA8F513BA1666
BBA904237CF4B1D8587A40000FC9AB6F605ACB167DB620A5E185CAC3CCAE65FC
DD670017FC1FCC4E553C8464499BFDB96914963F0BC7D0E23C922CB28ED42875
0A6E2CDA76ACB5301034DE58928B59A875DA1C074F1B8D03C962701BBB33DFBB
DEF812695BAAC7D1321EE632C207E2350876B1A6C960D4DA5BD5FB57AFC4741C
AA345F93B420C919271820E0C90476BD0003740C6519B84EA128EBF4DA1DFAF7
6BAEA4C7699374536069D07EA1BCE543A27B04AD1778F1EA753452E41AC1EF8D
0A6E8BECFD4F0EA44B57118E6CE3E7B512C29A350FCACAB44DA93A844F8B0FAA
016ED7FB4E61E7243DBA12C01CD815455753DBC13050A0376D2192F2EEBE47AE
BB2023F000E2CDBFD0DDD0C7276AAD1780BE8F2E026D4E80D94E9C7F98D122B7
297A1C909ADAFB485001F3EB1004D45B9DBE13E22D6AFB30879F8C413BFC9697
F82C1022A261FE6ED095446EC767
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 21 /greaterequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC44188CBE68D17F5572D81B25748ACCF1FB54F30ADBEB126AC4
8C6CCF1F7B521628787B0DF34AC7D115DFC548BAB5390F717055DD078753FD98
816588DE495D04C1539460B632E50994E6AB6956E50B3AA97668D3270EC4A58F
5BCA4B2A7572C0E968853A5485582D85B1B9346ADF148028C1052A00A8706D84
7D92CBB6D378C0AF8680D849D52A4C265F2AE9BB4992B66098EEE0A97CD63433
1DC4337D533B9D30E008D2E0ADE35D7FAF66E5D1ED18D5DFA6F800AF10C182D9
A16C07CC077D7E62FF4D32DD2C90127A096463CFB296B16FAEF2AB5979736D17
8B614E588DBAAB9EC18D2121789BDE6EA113EC77A909DD90A1D3D5BFE8490BFF
9B5178B558B26FCA7F587842AEDA00145E8EE7649E79A5E08124B85B4E99889D
EEECC777925A84731B524488E7154729462A36915431C27CDA96828F8BDD2B0E
A1BC24B13E82159F123754F7752507DEA275F22EA8275A636FD58883B7644965
3DE070791DD16351A33FC0A4B85F78FF111A7BEF3A00C2206102999632D3084B
09ACFF5A71A81732357547CCB589533F5CAB52F0D4B7448D4AC928F5BBC11482
80F774F7585CD749283ECF348B90231B1CE47AE4177078C90A40CE0986B7B8EC
3EE6800F086CB5EA79E6450E260A19C6A6ECEAD8055A25D8BA834F2AA4F98253
16FDC5166AF207A5C825120D1571C732587AB551FC8AAD6914B7792BB919407E
C5016A9447D37D24FB8E5D345CE82683476FBC30CA210050313BFA2D49C7A9D9
2787EB06AAB90F1450182F1179A626B871C0E28AF6A8F8148333FF3655D7B641
814C9F1AA23ACBCDA8E930CE53FB208637A0DC7E2E9CCFD18E312C370BF3EFA4
E426C6D9A665713A03D1263A5B67CC1644D617FFDBC3B59190D47B96B291FE98
810E6FBFEDE944DCEE350F176D9AF35801E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
dup 33 /exclam put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED277A492B42D88D0E068D61F2BEAF96BFE7F399175DE7D08981736F7DA253EE
331F97DCBB941B1832E3FDBFA7650E0905E062516F27090476AD2FF0CA78B14E
13CD9482201FEA5AFD00A134F3C357412CEE5E264C20C39E157567538D94E69B
6B7F3EC896D42594593A016CB5FD306F440F6739C7EE88132663A1B1D635E362
5667C0843D4E8E1C205588BDD46FCA71692EDD0042913BDAED8DA7D7C8016D0F
B9B44B7EE36B8356A8740617776F18D167F6AD72D8B006DE3E4BD74C1CA8891A
8E08C09A601506D57B5EDC2FD998E405A987C4205CAD91AB441DD76337F8E54B
79142482B2FE7853B7960061A6C420A696A0C47538C692108055EAC99DA91CD3
B0A2B7AA4D3E1CE749165D28DA7E2AFEAD936AE066ABFFCEEAA68E1B41C74CAE
CABF8616AD95FD9ED3B11C918BB38D165644346F51053A08C551220E93385C29
C2E8B76655CB57458FB78C6ECB6460A281A80F502523BC02292E1B8125409C3F
A734449C3B34DADF947075BE99F21B31B00EE34F824317E8766999D17EAC8B28
132D2BCF954CD29EB760C8F0114D19D4BA0161537A4B2E556C0B64CE8AC122B1
6BF9132830C8F4EA9DED9CA2889A38D13E2ED7542820803344CB04F0B7A71E5C
DEB07B37EE8D125CE74A5A53C1339D085BF92634D1C85CACEE0A97B51478A990
843F11F9E2C94E6710CEDDCDCD1141EF873A4D7DCCCD5170AA533B314D338DED
65640810BD7C466F5F433EC555E83C466B698F5D4878F55191FA8E82F6C45CF4
C8984AE9658C1D31AB0562F00EE394976F0A2F4870DB0C0FCBEB6D1699072D2A
F308222559DABF07BD914ABC6B9F012D4C70BC2D94CA34CAFEED23FBC0F7ACD8
98C55C8BCB135F6C4ACF0CC8F73AA1E3BB46E952C3C78E4A6BC9AE28F7F37BAB
82C4B4329E5CFF0AB122CE8B34B1A8F8E742C1F7B0C39E73CEBCFCAFB65D189D
87550C6DD1B761FD970E1F82C2659A46FFC68487A783AD27D2E4DFF153FFBF05
8D1CED29672F53C793E5E33B6810E923D716119653DEB0337A300CA3A1E9B54B
BEECD18F205B82F6D5C15E8BD3CA0DAC9B50D3577DB8FB8F3B30764EE809E4FB
6E07D5C63425A49B30B9E0544CA6AB5BF901AD6B5B6BBE9963B8A0031B00135C
75B2380F97406EB9E8EB51C53056C2DFB35F8D9B53BDC54749A357A36B40B191
15BDD067B7A18BF8858940F60E8EFA7545C6010CC2F30246CB9BDA7BCF31FF0D
36330A4787B95D7A47D01A187CB03A690D516EB71534C4B14998FFE54EF18274
10CBBA2473F58699D5B7A6D59D487A67EA1D9A22DB6E7B0D4472B236E262917D
AAFF648C7467F1CB4DB9BCD754F974A142800F1C2CADC4D7435E23F7395871AD
6FDCE2C4AFE8D8C8C40959E8D899A3218215942EA3800CC8AD97D8527D990272
32F3B24CBCF51F4C6AE4D43F6A21DB690FC7FE5C6AD001E6EE9FFC130E71D697
09DF3308F3BE0F813F424364678789109A668E707C52E55E9C3C59664EF122CC
18469B39618A3C477A9F536037543E0D3768F4E5FDC99AAA25AD6822B22B9CC8
A0E124C678A202392A840C03215EB573C7785B85F11DB67A484E3C5333842044
9974F4BF9DA358EBCD3125FEEA721385947B28941DAE7306C7F0244EDB76DF56
229F4F82C684A0205D94F0A3056466013B667A3F47EF6780B7B126D8255F1A0F
1BD08158F94077D191F62DD1057AEBA832EB995E27D36EEE7386A786E482EC5A
DB9846AA63FF7D4278CC27249B1329305788A6AFBF691C885BB65207810A3802
155C5BF6A0DF09FFD5521132E72DAA04EFE50FAEAA8C7B9291E8CC8AAC6E4AED
5CF63A305EE5DDDF11135A13A44D4682188CE782CFA497453C309B2164090EDB
62EF3DB681E7ECBAC9BD9E997A59EF5F44F78CFF4C853337C6989ACF9F98AA3B
22C76818637B5E9824473883374833E2C4E3EC10997B47C02DA468E1B1405446
D985B9E75A108B79379AFB3620929FFD88F15A1BAE76C6EEFC79C130434A2D9D
EC88F4804462ED7EE43FA81647628E18DD12515853B7617187C50EE0D0D7941F
0841112068656196C44CC973934DCE0AEFBE747888AA5472E4EAE9451E773EB2
B16202B2F1B9B785E55D27267A083AB75D91CB8B35196A0C170C5016A0260888
C8EA6B4AF18978A35AC49C5FB383963A3220B4F4CF20328415B2206518FB1F1B
7224B598AC585AFC792F2F5F04FDB35F1D487433D52A8CA1EBC4E87387ACE2F4
D31C0D4E1EFD247EA6F673ED5F34F1C1D20B609A152EDECFA26871850857DC14
178B61206A62F645EB9ACC9FE97D51ECEAB31E73863967A4FF7FCCCD04CFD614
76B4495F908B07921383630F2C6D55F3188F2D11E04C8D23621B3E77EEE12722
F9712F9A88DBA8330981646E985FA7F7ECB3DD471E898B9240AB3BC8F14FBB57
279B0CE9E1124D9E4B184A84DBE481D044DFB16043E5DE2155712AE2E881E755
D62BF45FB7F79DC36C582C274D0073568AB4C2B2317D3C80B1A70B71AA537516
A6AE91D99B71DDF800A4D407601BB632B33F1E4AA97827FC090BB9427C07939E
B5649DED6075ECFF58FBACC2E402B543C622B160945F93BA6F1215EA2DFFE4D8
2E81D78ABF58438D5EAFA88FAED56846812277FC08AFA90BBC1A68E87568A844
EEA08E4B273A00CB5D81CF1BC37933D28585B6D59163EDAE458E91E7EA641EA3
89E2367556933433DE557922C20D8C1D4BC1F344CBEBECB01E827F8AC87AC0DF
394D385E81DCFC02B7C1685BD633F0F9BB8BBC097A375BE1F979C7A902A6B986
445ECFC9B42C21EB1D9BA4DD79569DE87FE23F11EF997D9E02960F7C0D013CCE
063154E006EC3DBFD91E91C3052ED84AB231B88E71B9D3FE88048DAB5228D6BD
E7ABC7BDB8E2830239F397B1662BD176230EE13B7A652859FFBE66646D4199A6
2ED28A30C8932DC4DBC3F9D7E3FA7FCA7E8558FF8EDE9B11BEECA6CEAEA58120
92EE50089F30F3C4ADE4D307305271D9982080972540D9AD3349225E6B8EB758
ECEDE8173B87B4A4725F86A2ED82D15FCC3FDA97D5DB0C39392E35E65183E21D
8EFD175AC6DA8E033FF3DF0FDC7F4F675EEC5CFDF8D975CCFDB723E2904AE09A
D32C7B06018A433AE79C45596314AD6D2A797E17B501B49CEEE84F8E94849725
11E3C6C8198F984DB16C7147B826109A78D38A8DC2061C73BD8D0274D057C066
1FBA0A8A7A3D4787A965192CA6DCF61AB5B28E406FD902D5EBFA9023144D99A7
1EDBB90FB84380ACDDA68AD95358688B82C0FCA8921B0BF491B51F8E01396650
276FD4E15B8A4234FC70CC583DC0681BC6C50EC70758605DB82080F80D50138F
5A5EB00BCE48ED45832EED452E06A932BFBEC3C6D1751FE60C58780035803D93
B0101FB5A81EB8E34B5E7E8B6DB5D810DB1A5DE829BC411814E3E439DD00EB51
1CA34AF0E7A6DE35AD9B330D7D652BDCF3BB45A637D1F0F5070C44375E95C088
A0893AF446BA0C1B34393516E2CD2BB80D0AA2FD6A9EC498A32F7F22F484F797
FF9301A5D00AAD22D5BB32FA9E5994AC9EEB64B2706B80E197560CC8D3A6D440
DA140DC68081229E368B3A52F5A7DA76AC22A1DDB879E89F197E873117FBB087
C113BCF176F247366EA6A90BAF2FC23B6470A2D8CE0D53DEB20FD24D5165275E
2F3F9FB0E56E9EAF11E37E2594F98C7D2EB0D199A85FCE2EB4A1DF575450D2F6
D911F216CB2022A52782B3A24B65170F609EAD3FEF28D23792E5C597168AD0A9
FE0DE9C863EA80208796A33671EFA2BF4D120C06C0380772FD57DBE1E267FB84
6460E2F231B08C503B465AF9D4AD1F8C5FA5494EA6EB9F9EAB06A30C32C0E278
D333F60F16D7FEBA8E3027637CD6CD6C84ABDC3B7D0D57A37F6FDC1FC1DEC94E
771122A51FFC3D906C0E8F49A7BF14A2A305CCAC6B002A0B5EDD5DEAA97BC86C
946F95C30D4324FFC9B4422EFD8FE11B357C200CF266E5B6AC226C8398E49C0D
840020F2A51ED1A61B8C8A8A73A8A4CE006CC1D491E99B60070C48FF0AB6D64A
D23BDD390D8D9FBE3BA7C43423D2BBA642839ACE23C49094D1885BEA2923CA44
AE862D81EFD674454F57C93215CECDE0DABF5D153A90992EB07E4A292AB2CA86
EE615330298C22C337724CE6B9A62B4F4446461E4857FFAF1071BE52EEBAD4B2
653BC4C479239673492930F5C6236640705AA0F5A78447A22F144DB31724455B
A0846F7D4519CC4CF8879A65088C734EA8B39B67F335AF6ECDC439811F9D3ED2
AC7784C7B41BA2647026CA4454F772B1B14A08A377875F9B37B930739CA13CE8
8C4625852EB0CEE1FD6571723241C10CBB41BAF500EB36DC3822B0B88A4963C4
833929FFB11E7212038B10BAC2B12EF079C754F917D07F34A5707A0D6F0FA9CB
29F74199D60E0EDE0A998D3813830D79F6D4CD49B3F9BAC5788C4A2393765A16
697B442CCB054BBAD0189E7C278F22807A4E4194950C00490F4563694C06F502
19A0D1BBEBD0C89E2EBD4252030E4891F08CD35AC5FE664A737D408834CA3693
5B262A2BA2AE311FDC927A1A8B3227810D99B483D8EA7EBBECED4E583E9E0126
8D5E77A02ADC673299A076B8591D7032C2138C45ECA5A3D4AEF6581351890167
37B1556487B34F342D40B052535FAD7C8E039EC29BB4863DA19160B226BC9B17
D6C24C3D19F7853020C1EB5CFEED20B7B0AC560592BEF1AD07A6C6AC369F514F
312688F24385C87D242F2A5C428D1AAEBBBE0EEA7CFD43F133A828ECE08EBB68
E53B69B81EE29FDB883190FE7FE30FD3B2EC412E383395F95657D5DF5685C8A0
E0FD8CFA48966EDF610C40D78037FC290C670F2C1635113221656D8F0E20152C
B3F32ECC495104464041B773CE1C60D1C237B5CFD45D74B40D38BEC5C801367F
C9BC85AC8673E52C60AE8993C8587E7F17E5552F9E19ADCAED1361EFCF3C1288
AB507B1178AC1DB9F90E343B01FA4E5A48FD5398CB7EDE034DCC447400B4BEAA
18A9DDA6820D7E991611ED3045ACE35A3431BCFA9729962962D892864A3FF63D
48D58F99229B573EF40B327164308CA9D860E50793F67A70E4E4B73E77DFAA37
AFA79EFF8FFC3ECFDF68CB5860F5E37002A6ECA5A7E0A0420B2D6AC7DCEDC628
0C1AAEC2CE548B0AADBECE1100DCA539618EE768A9C3F5029819531F080BFD5C
6B8AB3C09203026074D610DCA2E9015664DFB04E2B1634E91D7FE0B149F33612
2B11D05994FD789B5908E76C3F55DF7059BCF827A1D0E0038A82A1BB9944F712
0653760C8B81C6EE98D69629619592D4C0959BD65622C3697ED8C6C894FB52C5
5B50C63CDC4F81C155EE6899C644CD68112F8743A1DD94F6536987B64B820720
5F58BCA60D31D2D072187C07FC36B6000C3CAA0B9CEDD7445DB89B22AF1E4C6B
8225631B5C379BE067ECC339EEDDDF04A4D7B4A32764FF3642DF75CEE66B398F
8D72FE27CE17CFFEFBC4ED654116A4363B8580DFC9F8D3C0D8738841C253C889
8E9FD2EEAF7DD05AAFF656A2164AA635863696B8201D4C51E592D34D7167DA15
01390E768C1305E641429B985849085FECA91A1C9418329969951C56AEEAFAC1
B71F9D4877C69B244EAAEA8CDFC777CD33839E53BF01384DFCE753953F044D74
850E287CEA6E4167E0D928434930FE90F736E5E687D0F60DBC90104E7E6E15AF
80FE4688B26C19992C2C4132A3B700C085A7CDA7BB5E040980BB509894D4E444
C834A122D7B316CE7D0394A250B2C3E67143EA2A35A7387CC096B7D2D0C19578
929506CA0A724C733EBEAAF5FC6CF3BFC915AEC2F2B70DFE2BC25DE441D20D4F
E30E65CE5AC0404CCA90527FB78CCF5E9F0D07F7158530A69CED509E314DA465
6C17EC84490109B41929009308BA0DE681EB0CB4847B421191057BAE0518AE40
84995C62F3032AF903EAC2B8BE125FE3264568513249A8483FD8543E6BF41692
DEC5CBC28E53DDD2E78B45EDA23583D921A8C5AD64B1622ECB841E5ECB9D2C23
3847D457AED06A0A193AF83F6517F6A13E35422E20257FE75E2F8D578D609F7B
F33DF2A253B2C9240E9F899A2D046DD42F3B483DC04951DA5475468DBC5C5C5A
9213FB0E9CB9FE98181CBF1C3D47C5551F6E0E1DE6D77BA2E951FFDFBBAB667E
F65DA7C89AA59AD9E584D149E37F924AAAB7C5E1B49BE987FF2746332C7562FD
9BBCAF684A3473661D9DE109B3B203365CD64DFCF22C66A0FE84D18D36183297
437043C3013A54B0DE6B8767E1504819333E6A7214554126AEED9C499B02ADFE
813AA51E224F7A746440ADC9F37B40D1BE261A6C8684A7A1446E8A2D6BBA5842
8C5AD45E1C24334ED933433A827211C797F0FF5AA5E30DFF518E89CF622C7200
8C0155F9C88123B62748ED5135F34495C3D30A3B19D359539A46A0753E12C8AB
7523AF348F2F9C4A5B3AE8D8A2A999B8C01ED21C4064B58C6F65B9211256D191
C8CBC7DCF874B68ED63320958BFF1B1A42637932F7DFF56912F2562F85E6BFF9
D468A461D95CD6D7EDF6A31F60BC0288473FDCE59228A022932BA5FB2364DAF8
3F63DBA03C8E867298AC15C093B48FD16DD549E4A263FFDF13C743D62BBEDA1B
4ECB4BE614C0BB6DA970ABF875BED5240D2E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD681BD9CBEC596
5E246EA09BF28E98FB55C1E009C35D0DE1F77393EC792463AD99F06EB05CC098
26600D42045A75CCED6ABF5FBA7CFC21560FCFE13CD0B7F53872A09449E7A748
4A5015741939054CF994DDED17AAEB074E76FD2DD48374C2B47B17CECC15A13E
3E24ACEFB8A3BE7B6CD98585D1FEDC7BDC64D393EE6FA025BCB36A327A1EFFFD
BB4759AAA590C25436871C742B0A23AF8C38C9C160E8565C7547CE9E7B5E44C1
BB8A687764E68CD0F58CE1D68E6672CE32B2E0DA7DDDF0A6245FE840888C784B
FBA60FC22E964C0B9D2A99193FEAE7406042DBB1FFAE5CB79186B0D1E31B8D88
F66B1EE13552228CB742827284474148A494BF045F3FADD09D5C3E33AFFCF25B
02370558CF2A56B572EA8A74D6527F3943EA7066FECD36912D77BCDE6EEAE2C8
55A667C71A6BAD7D970254F2ECE7BAEDEF5B0761496D973528A2CFFBC981A674
5AA206D7BC4940DC421EA114DF2247FE43965184C2799F3C4BCB5A914488D740
C71E3563B4A27FF68B5E91F470E3FCC70E794F1A260E0A394F5C65085F5945CE
38CCB1CBD820C7BFE83A016BAD6B5964FAA36CEF089DA4B940A6C1FD67145847
74A20BFA3CECC46C50DA2A5D9541659974A5E13C62BBA0909431C35724387E0A
8EFCE7F3F0A9139EF056EA05AD5FEE37679395C4D5134769EFC6EDC82A79AE5C
0472A4AF7C1041BEF16E1FA2000D080C3A3CCE28D13CB53CCD0986A0380926F0
58FB8A42C78B8653E1822E5AFA71F506F74D12F2BA0F088255688B67D92BD90B
62C206A0D9416A1BE2785C542DFF672B6A5C2C4333A537F69A5601862B371443
F04A5F8A983F15A586A77E0359E013EE7D09B4E62C12407FFDEC8F7298B64058
76CD83AD366BD014F4807D17F81994765357ADEFF50400E50E8839A27DD6879C
2A96867F9ED5C9BBF0E80B1E5A0232A60073BF2D2DCCA4AA58E96FB904BAB6D8
180B3812CDF207876B61770CDDF39136F543F474B94681090A6A362A91887E07
3653C1293AABF2A0F5E076CD9ED6C42B51B39AB0D421D2B0D800C4386612D354
143537EA9E777A3170C240F8BDF633E779BA1AFEDE44A9BA9B34E8EDAAC5819E
4A01DF09681751BCE8507D77EFA88D19B7A146A55911EC5C14F1FC524CCC23BA
9AC999BD629642281495A34AA353F1B0798FB8D67484FCB84F4D49AB54577649
DC458A9C017B6EF7F1F61A94123BFDE8780A29F0A370F320CDA091F700AE6083
C2F7982EC6BD853234C459A59D93608E66A6A41BD81CEF631D467B43F3084C47
2387106F054991E099ADC938905AE12A13D21F867509B261F72660FABA3D9FA5
6CA720D690AC4C4C9777056C25048F6282182CDA0DC03D0E24DD1A05C632AF68
6B35AA3201CB1B881790CB0C9670F0775D943A866C6BCCC64A6A26EEA1E38090
64724F82B30A855A2393705D27DD95C3D64577F4F86B64030655DED219AE758B
E2EF13BC17677D6FDA335124F7843016E5CAF397594CC532AE330611B238CEB4
09FEE500CA061B29B69328F191F726129C5B007034A07BA69BB48C184CC44A57
F71216CAE8A4E9DD285F57E2A4E44BC307DB8A2E2CE2EC40798A78A105029E0C
2DBD4DCBFA2077825C86B9D4678F874A75870CE5DF1DBDF958F94C6FB6BF6B68
EB2FC166FFA7721A2C1D08E67796BBF4D7620D5BC9864B6FA157C1D635832BFF
11FF54BEA89F5A3B6D58F892A71DE17247A7AE7957C2A23F2E7434F5660BB394
4218FA958BD42A7C14C63536D471C81EFE4215C93D8128073C2B9A35351D07B8
3437FA02D0678E77B6FC416E655F8B5FA10BD9F6B09C186673716554D5E3E8F6
763D86653D64265CE231577EFE46B8620578727BFCC64721068EAC93FF85C430
EA5F5D89B4907F43A33F45DF6684D3DC76A2784CD20BD483DEA5885EBCB32ECF
3588E3198858A1992E4682DA9855D112A8E9211F1227AF62D870D1D3EDBAECF9
792A332EF7ED0A54E918DB39CCB95C241E83121D62C07B364B2E4BB2CD97DA87
B1FCBD1F8A684B915B6F84787B16F7A580DDF85B079EAA7E5B3DEBCA8D860A7F
C617665E24AD3433211A959D5B32C941C579F1B58F8933EBB02E1BCDA0C2F332
21FEF5E8EA4DF63D49AB76FF37901B6F308EB060993E0529F87985E88EEC2F3C
A97B8D22EE98024AA7BE08B09D202324D68D78DB2A5DFBF46952522CA0369BF0
656B4037ADCE085DBDAB0EC911063A9E00EDF06DD2A93F5303A2DEB1CF47DCC1
D990D4EA5A946EBB3045BA16E7F3F03C6225214448568F6E83660B1BEE3185AF
18D78B59FF8A525963CD9F5D7EEED092B4CF89DCD81067A831A5B1A823F3B9A0
A26AE923774ED726EF9CC57232BDA59F2A7FD9B9011E6E41E1EAA7171AFF7334
15771A2D2A50B95043C3CD6039CFB639FC564B7BC4D9426EAF703B2A4B6B47EB
8C9349E9D69B8736C5B7982CA7A16A8C40A9A7B9D83739D380DB1BF5E73B33A2
2764C1527BE7DCFEB5CC5FBF045F38B539EDE645F743E22847A2E1905D2BAA4B
3A113CB9D0C43FCE93F35905E7B5A0AA0275DAB5F7EDDF80F04C1F950008DEBF
11F36AC8602F5CDFD0D035F07CFE8DF8F7A1A4A43385DB1FA21532DA71D74D58
59A6AF0F2E6DE81847F57A83CC2D74D356CBBD4742C7AE2A40501519A75F99A4
407F6F47ADAC9B96300234DA1FEA319B94B1F07A262652EED6F633B7EA85BD06
EC9310047206CC514B724600C3A74245C4FE42596716AD5B11AFEBA4061684A2
AF028121E6C1151A77D16FE4DAF44DC57630590A8E4EA94E9039E40E45B8C73F
D447E056FBF6B24756096BF403DB15400260B2846F1C82E3C3A1470A6AE73C59
1E39452F65623A513460F14550A915169541023B3F1936A68F5E1C1FC2C48961
E8E93F89D1BBA1C49D99A1ED73045CF93D21CFACB966788AA69989A7D6E96771
ADFDC4220473BE2BB4B982F54F2B17AA7F2AFE1401B7FD3AA72EB0ED94F0B247
FA8D8E2EC2BE158CF82DBD4F9F541D2EF434FEED1F00A34DFC954B113BF40A9D
007437D2FC4EEDD3B02255C41E564D50C7E69D37DE2C25DEA7A7F912430DA8E4
06AAA49331320C41FA9133603E97B7A13F2C318D7AB83EAC63D0CAAF3DAA846D
AC120F6CE2657C3097AD911786DBFB850FE7419827FD133AC943DDB8AA8F14EE
427DBC8E27820BD1DFCAC21B6B39E9394B9843F86D857CFFAB821891FC092E5A
8B6B4601ECCEDAD7D781B38EFE6CEE8C2CAE8F5412756563E72F9F2B9114E03D
C7CA730924B6DF065D8CF37E56D3A4993093CB3013D732A970BA529738C960FD
0388ED3706CFF0E5D45E71EB96C6E5439D71AF67E3D9F7EEBC6AE3CCF89667DD
C6C53A5BB1991B77915083CA71A0F87E296E8E849E5B96CD5C4474326E873EB5
4401F74F9C64330F595367281EB2E46C32BF0FDF306CA464EDF35EE938730B4A
E5CD017C38578BB1BCD3FD31AAC383E65BA3841A8B9CB1860A269D40F7244074
F7224683D8BACD815926A573066CE714E2A5B0E6C7777028
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8D69FB699E5EF78ECB6C3E02F2391C4FFAAD459133EACC2D796BA6CA1B93FA27
83C18A7081BB584ABB0B61BE229F35324501AE0F98009DA9ACC5F02B85D812E7
45BB2FBFF2741AA8FFB82847CF547F29AFADC5303174D9022512B07ACCCCD0FC
88CAFA9983962FF8D6E0CACEA82D14FF523AB281897C7199E063C8E418F03A41
B814B8DDE80D46AEB4F109FC99CBF5AC6DE086115A250D2D670BC208A6B182AB
F207C39015F1DA2E2AD1967EA896C09692E9057801F243B335B5B6E209D1BD84
D00D951D4CF9252A4443EECCAF1E56E3163A8B82FF19251B1D3735B67FF464CD
57295728A500BDDF39FDAF30EA27983A2553F57DA095ED1D98A6D480BCCC7460
B9422B3CE88E98C376873BCB48B923012E45D9F064B23AB93F3235F83F7C01A3
A5B0F48CD2BF9A311A624FD72535354246F33BA4A8B26D1A1F1B4C219273BF5B
3B2EAEB83C1CE112F8FCC4AC4032F55765C9FCBC5E1833C8EE811422871B3E64
7E74A2438BB7684FF90524DC5A11D6953BF87FEB33E8A314E7DC353AD7B37D3E
EC11F844B7B3E7DF2140D2236AEE113FCDD8F719E117932777E520448C0E12AB
488838B7779C9605228131816CE3F2EA2504178A87A06C5788C21917E4B948B8
71992A89148E566AE755F766F5E407C7CC0950759F807298174583416524B29A
0B2FEF2C16F7AB7B2FEE8AE66F95B6A61CBE8D61207D2BD81EC73F69E354E0E1
057484CF6620C6B1D295EE3D3FAD29CC9ECC614674A88DADD3FEF54F48AFD2D9
4BADCE1E9C50954FEC4C1207C704167F82DA84D04F1469DBC6462AA8FAD974BF
FABD8E22DB7EF8B5E3A28F83EF3C4B70691E1AE571B2C372FD96C8B7E21FB144
1A8253329522B51F0060951E935E026C25847C739B6EEAD71521DC1813F4D2BF
5379B7F894A8D822CD8B8115CAE84EA5AB0E1FE82E76C8512482444485E8AD4C
E85854A35912493829A9EF5B253DDAEBC5CE6923ADB7239A4285030096DEA6AF
7AD28E2DD526D66EF00BB3F4971F5578F86FEB25C1ACB394183F31D783711AE4
5C409C778DB1DD2B545FF4B9938D2EE9029BD66526CBA83A87793CA934F06A27
C78C5122CD9EC73E29A912FCB6BEE40DA110ADA3FF7F79157204E37A4CBBCB1E
CA89736121F08F16C88DC5D48ABAF6F7DDFA806CCCD79B14DA56A83FC9AF5994
0CAB5680A26E061D2F60994F1F939D0F143540CA685A536CD1FF4DE4FB36D118
367CD97AC659ACB1B0C3D46B8C6B8C53ADF57D33E98C6C31C9A04CDB15B160C3
E2B285BBCFE14C06C490185669AECBCC9086AB4D09E359B41CF74AED5B75C010
85EAAD717EC40DB3F2F775CFFA46A7C6F095D9CAB59659A840F012A466C00A9A
0459368D38873356560C55438755D2139041486076C94A3F421F1D82BB17773B
3DE1BC0C6EFC309B8B6A3C060308A7DDA59DDA06B3D954253DBE46C79182535F
2A15F0C4CB16CC068124F8201003C1D224E76F28FDE894EC9A14A14EF7D4A1C2
BBB10F5FCEA940D3929144B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC744
0BCCC7D131A22F9DDD18A15283213F9B0F7AAD043A6839ED8A92DD82B9077118
A04261CDAE22989FAE27ADFA96A24B9600D0A3CE315453DAB180934BD11766B3
C1D543ECB0CDB6902BD615F6AA4AD1BBAC97FABB8A611D6B96160406B37DD9EB
5AD33B6B4DDA83A0CDC2EB79831752927637F7FEA664DF5BAD9566C2AFB07584
028CA97C662B55200593609C874ECDA8FF27464148F7D36F430742B95D691ECE
070E393F86BD6D60E5288F7E10B71DFEB021AE56F16D4DD6E39E760071CC4601
924C473B761B1C0A456C76D4296225700B5BF6002E086030A0B1324B359A06B5
D21D7E2DDE51A0EADDBBF0BCE98AE75735DDC74273DFDEFDA6A5FF6E101613B0
E84641161865378B8CA8C226CB05F32CBBB7EAC21B50414D63F8E9BA65BF4343
DE80E7ECE6B43B4709BD34AD96EED80C7088920ECA9B5A14ABA46069DACB7988
CDF7D9A33A46F1ABE2E7D794DDE8A42F3F8810C7BA74E71A369B2E334CFB5C3B
88B40E826A8B6932A175D5388B7942EFE8EFD2289F71788A1A6C7D5DF306BD03
A5A9E2C13E533213DB6F6E61D7C305D7E74832DD2AA8BBE768A11ED572CD605F
5E64FCB16D0D8ECDE1968DCE971189406DB89365D736510535227B6C06FA1AF8
E88CA24DA74037035D2268CD063A5C1FC6D456345D3EF4E343D9C379CE932302
BE11F73871D66919C84D734D8EC5954DB3C8552D2D6A8903B830C7AD1E3B6778
C068EBE560BC229096A73348298CB42A00DECEB61C1D79B8DAA300E43877A88E
5A8F22A1065923B72587C92A08A1A7CF25C3BA7C3B86A76655336AF0EC89D29A
7EA4E442EABD3EA9FA7750C929DF1ED8A68FCB0542324604472164D797A10324
72BC4EAC5613BA2D29094086C9B881489B08EB2B54F1D870E9FC6606EA4A0772
428090A8AC09B7D3B2A728E739B25D0A38261A0EB23589727828F74AA7F6B27D
B0CE0D8BEEF34E2642A76A0EA440D6FA33885C9B9FA61684332A3EFF9E93534A
6E0062F71DEB775597402C5CA536162024F2008D619DB75BBA85281C413245BA
CC5D37F67EC9FCE378C4940303BBD456FD31D028BBB5671B15AE5B68EC3A003A
D97E769930696E493F463AFF38E77DCACD3AC57D92E7C2650D4B6CF9B669F9A7
18B7218DBCC4112AB5F8ED193775D4641CA6E41B08AAE1F21F05D4DB4E8981DF
2F2B8B787E81273626E09A0C9789C29BBB59F871B70353279EEA6062F35723CF
D3D8D107A3EE7F23D1E7E38402A41F41348A39D020C21974827460ECCF0CBBBC
55F1F8693324BCE0C419DB3E99A2E017DCB81AD860668E67D06D715E3AB76410
FDCD38D8254A86C4AF4D9766A25DD3AAB001ABF271978CA851B643AFA267DD45
1A56D5010C6F6764C02AC1AF1B7D574AF20C46148A46AE0C2F899076F77F5383
9595485DD8B5D2F90705BAC3DDB1B6C439DA3150FC6E477AD5336173B74337EA
B8A012ACF7697A696EC0CB1158F940C836924B30546834988A9ABFC4B34BB11F
629865683B96E7D7BC4BE22B74FE346D6AC8442EE7E002C75612F28B466BD9B4
7EE78B09BDE4FA5D7BAB9127C6DEB3E11A9C6CB80D2307464DFF96E530C5BB81
C4EB8E3186256C9321B38585FA7B09B09EC27499F821BC245F71AC30A4A937C2
65CC28A83EED8F3C971D6DF5A50A615B67DA52913DE8E26E48E8AF62FD65FB57
6024A4901042B788037A85D3D37535EB04FD4834B5239650F4D46310B75AB789
96EB94C7691A4DFC64A295898566A515E327F366DACAF9E06391CC7CB1CD3875
EFFF20D31D3422152A0FDC01B80B82414F78396E4A459FE1C5C5DAB73E8B109F
694869B15D62F7F366B2021A78EC53F524D58607B3192006D2D3231391F5AFC5
0E59DCD6B512FB089C483DB3E64D4A9E9491D41B2A5294370740A748F4FC18BC
E56E312786E8E399975EB22EE182C53165413E1ADFACA1A87DD5613B831E9FA7
6E8C7741168D8855712115724DF868D5A07D4200535F51BE342B625FCBA961F5
7134842D4B5263A27CE415F9F761AD4C5764E68AF9FE2FFBFE31BB67E0FDCA97
6E967EED2C687C6E2788DE6DF315B818544933B253E5E8A17FFA5B8020DB05E3
B72079E9B01C3D7B00ED21CD626ACF67E3AA901A8FCD53E810D0ED26535A0B10
A27C8D8EC597B067EE8C0F73BECFE8F132B57C8BE40418E2E15E57CE8C88A367
1E79C9F52614464AA8B0AAB6A1AF9EB131FF9D330DA9F073CB162419378EB87F
A741AAEB208DA24794A4267121E5420871FC26E15CCB1084C45710BF147ECB10
F4AB7BE958C509A7A964428B24BD8E780B6585A8708B5C0E21ED7B135B1E6F0C
B03324300A9CB17C51836462D71B59C7003CEA2AAF0DB2D96CA73DB8BCD3E76A
862C33A0FE4BA3C647BFE244882F1FDDF1AC53BB638F51CFE80ACA4A37BFA563
5F83B1D5A86178956BF7940F2912421C4F3BC76FD991EAC83446561655B15078
A2719A4F0BFBAC0086F09BCE533648718C421391BC4E0BDBECE4A7FC58DCC2F0
0B5F200D8CF4673638EC5DFD9187CD9469DEEEFA077D9497E9C0EB14CE6F54A5
A6CAC1DCE1FD8B15622AC1F6C8A56A3E35FF07B5274188AB0109E96DCAADDEB2
432FC8030D41BAE7C1FBDD625749018A1EC16FF56E375022A03DDD85A544BEC9
A6FBC5BF379C66D14651C31700323489C7DFEBC11C971ADD44CEA2ACE428A5D8
167A627189993779AFE0A35D28679ED2E6F78D08128C273336CFBCA4EA693AB1
38BEF9470F9273D5EC0B69DC22B166FA183D5C9614AF82D00B6895EA9BB8F8B1
1B1AF9856790E69489EF60C9F55AC750EBC60ED0602AA4C8665A3C513804DCE2
5D92C40C089A9F87BF788942720540A6E55E18E3FFADB57017A783DD89B3412D
159B88936E1CD33F73A0E0709C5730412B42035B0DDD6E50AAE342179C217769
CC7AC290C422C17537A9D98A38C8B6967FDF039C5306745112BF1E2AE146E04D
9AE49A2516FCB445EF6D88E152F5016F8A708B996B3B8750FCA90CA8672DD534
36B4117694575F2237F977EBD2F7517FB9F3DCE101C80AA936703A48C920175E
42D35054A324852CE1FB2C64C26768E83682B313BD2E6947F116E2F9B10EE449
DB17E53D72378C2503F2DEB8372655442DF1297BE2E33AC62921E7CEC0ED8961
E2B7DD3A8DA847E41E29131A245907E945EC4044E0DCD4AD91CD503CFBEC3585
9192CDA86CA96907702521576B4871918C83A0057921D988E2E1CCEAE986FBD6
5A186362EE5B8C1E124BA24A30023BEA9A2387E9D2269F501C03923299058B31
07422D5E5869FD524F299B22D35A61046B33F22C0745FE0B75AC33760949FA1B
A711459C819484FC9DAF9B26DC595998F6F7775EC2B2B2A17DAA76031D79AF3F
72930C33D251B0A422B0C6376393BD902FED2E361A6DBCD227452051462AD170
7DEB814E914915376A127D342FF85B40CCE47EF4A05FA11C67406AD33743D1EC
3D5A2F4FC992950E4C0FC033015599419E0DCC6245BB5718040B568B0E6B133C
6F16688BE3A7B13539E90121B9E6919B58FF726297F2A7DF9321CDC65AE2ABD8
0776B812AB7AF9961F0943FF5F88C8542D7545A7B4B166F6D64A7FB5914F07FC
EC839FC1294BA653D5C26C224ADCDD5CF9F9BFC99A8E2F6DFD39C69E0B2048B6
0EC1FEB6F0158D4AEAACEBDE3D65EAB3337C7F24FFFF96276F55CFE90C64C2B0
EE012B6B2B663E6A1102F2578222D8DEB20F0CCA9C07E0BA68E4BB35C1A72469
564A0A61E8C3D8709D608FB903CE450C70006B373A58E7CCD94483B8D8BC3BBE
DEA210BA2AB9CC9BE04551E17DA46F646AE0D3172E2E5199887FA90302D1F6A3
546E90A839440D5347EB89F518E225C5ECBBBFCB7D5E1BDCF7DF04DF47884AA8
D4D432625A2D058F575C72F4A10CAD629B8CDB3D99D7C90ACBE74EEC946B4412
B0B94A18138AD2F7F2F7E198FFC53FBD9B984B05216E8CDA5870BB20632C49E4
671C026D061EE788AB07C5195C95236CDD43BFDDEDDB60C8975F20ADA31AE882
A5F726E8AD62608DBC255A479647149B200B5279C29D7EC8E6D4A8AB3C8E55D6
0E18D338D21C8750AB83573A4860E9A4311EC5414571B2B3B7149C92C9F11E69
89D40CDB76BD78B2DC0C0C77A269B86643A1452539C275D3D5FACF25CA9D238D
DA3F1DD2A5D1E8F372DF9B43B3A0ACAC98C685040410802D3D51B419C4ACCED6
2D5928302BD5E5514CA68BB67B6D0DAD8CC299A8CB22ACF60A9340814C283601
A5CF1C41FAB7DD4784CD74B34B93D196A944F4BBB849BA89F2AE5877339D1F2A
CE6E53FF07213B6B96BED7E150B0ABC19457CC6C0C6036B1526E7ED3D98A026E
FA8516683FA3A30649486C002BFB9868AFCF647D01A19BD70782CA4698C639FE
6EC028F53081589BCB89431FF4B1DF0930F442D8ADEC45F642DD8A886D41E066
8B24430916ED58EF36404E3B912BF4BFE16F0623FDDC528F6A3183BF1695FFCA
78165621EC8AB15453ED61809DF7154DE438CC9B047350D4E144978CB3DDB526
F5ABCCAD6C82EB09720475D09D7B01F32707FA6CD9704527A5F637522D515DAA
C7530039CA595E306F15261040CE87DDC2FFB4A1566118C4E0C46E1470B1602F
0EBFBB4BAA62649F5B233916E2AE3497C879022FF3E87C5ACF0CFFA9A4A245A7
4EB8D327F790867A024AF1677F4FA79683503CC8BC8509DF44034EABB01E9C67
33556743EBB0B829C210D4205272A9ACF63005F5D82DA8C86E3DB59B778ED095
04E77002CEFCCA048AB88EB0352FA10B969C3B05503184D4676B932B510B1D05
8AC9B358AFA4FE8480F8CC8D722F6F3D4B72816DF9B504269EBBD6DBFE19362D
0A4B066800A5C97275A23B26115CFA8F58F7A557666BECAFED14399A3C93C16A
9096223F1694F9B809FC79C973571CE3C0D286CD941DA8EADD235478A5CC6EE6
8F39A695B88C377EF9BAF38CCE3ED55B7CC9561A7BE9CC5266299A49C7C4246A
6BFAFA2F12135BFF313497CE64AF94774543318185132C796CC2F65308D29E01
C7933A960D089550D8382839AE8C789A6339F7D36DAFE163824896DC2C74BC98
1A6EA85C135F60246D47ECC90571044E7021EC70520D10EE8C58E25A36BE601E
06A1739387577D67D8F188F55C88892053C5F1EB2BF8DBF444E3818EEE8F7460
6EDB4B5C3DDA2A8BF0D9878CB87C82F9B1263614FBB8DD0A6EF16CA75D4D5D0A
7358BEC9A5E384E2E27B58A93D544A54A56E887E7148911BF9C48FBDA96A501D
9A0B375D38373B81323A7E861EF6AB8AEB55CEFDACC6BE0C8DD92C3919755C48
B4F711372AE3B7BB1090E9EE6954EAFE8684D472BD8D065D836983265DE8EC90
81A480F912ED27662EDD238036C9A646C280EFC242ECD53B6542FB20339D368E
C29ED24D1FB7BEE7570E3F6B57326516F82B4288A2EAAD3E1D89473EF2D62241
645A22846F5CE9ED7F3FDD89733004FD53F4731BB638581E5B9DAF43D8B68277
60CEF6C19D2A553D673582AE0C21D1698676EE24A4CBB9A0A0F4023BBB8FE0F1
68D4D12950FAFB308B89D84B0159BBC1CABC60E2C35F0B72940937BF33358AAB
8BA734D54BCC704DD18F8884A6D3EF1F2B901A04B459B800C74B076C9E58EE3E
853E18FB61EB806D12BF56059D40E2810C6AB44DFD60B2BD572D01AF735E4D6E
2DAA903C3D3F360ABEFB007D46720081C4980181482B3BE69E1FE68FB06FBD58
BF563372DBD30BCB727C312E03E985C4FA7BC557214BF927AF2133A00A362456
FF3DD525E82B764F67FA7165C2CA2C4DBAC2EC5EFF28894713A2ECCB35B69369
C888AA39917CDDB8858606089B3F8C8939DAAC4A2EC5C445911CFDB94AECC509
46E35FB8FF11352E2BA87A65F8949B0B7918EA727DE4A08DE38A0ED1FD7ABE90
47DA8EF83926375327F5F816C2FBCF8CD61F47D9990B238122AF74860AAF98F1
07A7F4743E37FFA997274B9905F57A5D8CCE72EEFD7D3574674BFFEDD14033E1
DBBDE47A4291275639C6DE69976A1D71600FF85CDB1C8BDA0B6B0885DFCB7879
A80950BFDFCA88537F2C587659A74FE3CFA00A46374D40408CCB914D93F443CF
890CAE193EB0EC4A325096FDBCEF4BF28DD94C99136295744B66327E4D755774
0E0DF52F752A1A312D0D8462C9389D0D7275D2BAF8D7D8D30BE8479993795ECA
6807ED448D11DC92F881F334FE2F96E69E411AD2392D8B2EEBBD9D6BD3673FFA
D5EF6D8742423046799DCFC749FB928EF9B27FD1F7C524C89B8DEA2712DB5FAC
821BFDF2DA7DF431A81B15546C51EF22B5452F31450D3D4590E344F7665D5F11
B2620D15C8899439214264331CC308B25ACDB417A8B2606FE6E506351D2CD634
4979436BB6EF8CA99B057CAEF9BC50F0EE6AF1B93250698AA590C07044E94F86
3AE060C15384AA3B971E94EE6C5876D9A150C3314D6CF5FABC872BB7CBADDD96
379AAF8587ACF8B347CCE0D73E5DEF603D68C3984D89641875C81B20F77D5472
9781A48D0EEA39A25635E50C9603CD2140F501EEBC53684706E5AA02982C49EA
0FE82B5C3D0E0A06E45A98CB068B967527DDBDB7956DE8EE507F79A3AC795CAC
61BB37C3726993CE2E3B3DA2E3362005A415C6D1AF652E4229545DD808E4FDC9
A90A49DF2C1CD16F4DF34B7122D07147F459F299DF886100498CA25084B8F3F8
F2614882C88512C172900662A187E7C0F083740C18191F515E47FDD5BAFB1ACF
97A609807A5117A9461C92DE71A8B3E97803700E50900B1523F20F423A30C79C
5CFA483AF99DC1251FA8EDFCF2EE129F5E037739E141A74174327A43117E7EDA
98DD054C65169F1FE7A3D115E94D83126336DCB8867A795FA6EA6AEF334C5547
37AD7D5994236797F4308F037F647573AEC3B473C5EF5EA99AA922FAA53D9D03
C54706B5ED1C7CB144151AC74059F3693891C175C8515E9FB2A5350EBE0A0D81
EE204F09E4ADBE5BB5BDE8D8B0F73B4A0B382613AA146D643432F79AADFDE20F
EED119AF2AB84BBF796AC154766CA4AE15FD414A76064823F31457241C8696F3
E8DB557C4E8C34903DA01C0392D34BF377544C44C1774A4F81A5577BD4B255CD
6114AA6A305C8C2636838179AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B20B9
C46951E3D2772F46B84E908CAECA64B09A6B156DAD6DD390FFC22AF831712233
AA23BA994FB0C2B8AD99539D85B7B7D4D75F85620061EB2DF447212294816736
9F458E17A24DF64D1567A7E457CB9C37832038AA1A96A0137495F2C229917B97
85404865783BE784755194506905B2CAB06AE63215E74A377BF30F78AE62F1E2
0975135C451B09699E32348310D7DDCB7A56975FAA6EBD40D5DEACD63A2FD4D4
1E9F4123EDDD012AE83C312CA1B25CB68E1151905BB6D0802E6DB536547EDB28
06235D9D6E0ED9A300441A2E7208CB972B450975CCF03055E5F576724D5B341D
7433EDF5612F30883D790D6986F72167A74758EC3620725B8C8E68CB8A70D86D
96D904646D95AB5E6E38FC80AA5EA94EACFD8BAE33B0F4BF2681FAE07FE3F2C1
C049E274A07D537F32D8509F6EA5B034430951439C840D2EBBB1972248F0E42A
3CC17951DD2E0353CD3CE4FA058B03B0EACEC512433D2833B34AF40511F289B1
87348B8CD571DC85D5424B3D1AA44A5A84C30EE6A07754507A5F306D74DA9772
F82E51C6AAC5B8C7639BA4BBCB0735A99748EB4E3E3D35B2B4530B0548BA8005
C4DD4A4D0E22D2E395461AA09BE1782F892BC4EEF6852EEA2C8D555E2F9E6F21
0F5C4E9830F666B9AF518936C9C07ABED49D56A9841027441C8BBD837DE68AE5
D982B234024D5AB95D3B393DEA87E29CF04EACEEDF4C5A48FC771CA9B9518E11
BD91ECC3AE91F578262F521AD8FFA97BFB1C1347C96FFFD12B6319602936F447
8D578074BCCDC42F13F00EDD8DF1C430E00C41B94131085F76079A1B1B947B37
B519306FC527EF1457317DD996B5A63D96B1F47E963E9FAB0872A486F833886B
93D7EFE418E2CF33E7DA5E944DBD9996FE7E8F8D539BC3215481FBD3752A301B
93615FC32D93C3CBA52010D14402EBEDFF97EFB35964C67C2C9E2F4F25595EED
B43032D3CBD55F1BAF82E78E5D88C03D620965E9DAD20EFF8E6D2E82A2A84BE7
8F76857449081B52B2E343D11E155518F5FB50EE797DD775E0CAE57F3752CEB0
37B9782B6C592EED6A66939B31DA0BCFF5BA67CB69A0D0F55053105624770334
021B525E8D12065D9EF50269FD743CC2AD67225C8E17CF1B43040549C90B09CF
882D3F7DF631296B6B668087D0A2E35E41320F1BC615E42A85788F80113F3D8F
761F45F91BDB602613E52943327F1D83B2CD2154DC9B5FA23D09B9377EF8C77F
737D33930E53168A5974E7FF955BFF6CE2F4351F1AA7749156361C37AF140B54
35D89E63D2BFBDE2D3869F1DE99830242C4E65F4ED9122A4A3EE72495C4639D8
9F0B601F94B8D3A38DA0E42EDF512654B1ED8A0B5332287C1C39EB473DFDFAB6
76CD08F02A8363EAC0A67899ACFC8A1CB05147F0AB9CCFDE99029F20B184504F
BE9F1E56EAD7EC62CFC83D7B2E150953B441D40C54B194A92CAEBF01B06C12FB
7D9DF82374D95C8580D2D04B112FE7CCB7BBC83B0D32B0D98C97C290AA30F2DF
C2297C64CE427F94066F6C806FA88F8EEAEBB41506759BE6C10303A17D9405BC
FC3B5B6990D4B88BC6F4D49FBF7279DFF8C1796EB6587025A49D9457BCD7841F
842757E32A5EB61F0C232B035CFCDBC66A33456659F70932908D5C25D4077EC8
1CB159DC86D2B3F5D275288AA19CC34A251D8D28D75FD82D749D368A15FF3612
1EE7A8367A835DEF89FDD8DED90CD93873B00FDC0B9B57D5DC973E54DC7A4F06
E3B65B3528A192797B3096CC5BFD54CE3447C14599EB90C8F5BB4FB0A32F81D6
18C44E7A43BF8F93B3D85B1FF6016684158051E559CC51D3B8630BBD8B9A9207
66EA4CC73705565F875BED21A826EC20ACE58588E9B6228BDE21975BBBC2663C
3EF38913FAF9B3A296F1896670FDE274825C6ED8196481135823DD30B645E725
D6894B47B6AF9A5BDA5E39D15845745D0C2DAABE1F5AC5516BC1F3E79898FCD2
ACBC767E7F2BD5425AD88928F3A03564682E186D34C4DC6817B5E2D0490B4DAB
2ED5F462D1DDD4173CB62B9F51442F090135F617CEA671DA0FD26D0576B0F3AF
195FC64907C0AD0F32DA12FA05AC487EDC9B338A13D6C4B95DE6B63DB9D6DE6C
B0B814A315D119B0803A6BF70C74D8EFD0B3078FE85AFBB3B2521640BE376603
4AAC57414D631902B92C516F67A28D98CE67D992FBF840C36FAA36C78DFDCBE2
97F4DA03CCB29BB09393912B22A89DFF2AC939B96DDD405BBDD6FB6D96299FB1
A29B2935E66E18A78399CAF492BD03FA549B69C7161D85B689B4B411335A9E34
48CE51DAE8EC64777FCC61B4EE61041F6FB112A808FCB51FD07AB0800C00A34E
5B6BED2D53F306E1EA44C563E9AE7D38187706F617C6B299C1F4FD0B336AA8EB
5AFEE463ED3F83FBBEE5206FA93481834597357DB9B1D279234400FD4FDE8E8E
1B5A87F601BD99F2C26F337A34A298EC1C28BEE39A83AF0E901B4CB170B0A772
666E190CC87BB1471402517646CC2CB6181B296226151DC5883D652D3FEC0639
E373F395D763E6ABBAD4BABBE0C1100B2BBD9E2D33377AE39138A26271E91D95
91DFAD5A02FCED6ECC540595E3496D12ACB0E9B0C06AB44A7EE7A5E7E1B4B49F
D872D2E313ABCA179ECEF05A888F49218548DC49605AA358564910A1B7981C00
5601CC333567DB43BBDA7474E063F1C99532F6FA9FC311A9709D5B18DEDB2331
5B617B3805B6DD28F30D56D1DEAE13021282415630F57EE40C97D11BF89A096E
39ED8EB85F28B584913233F771E350966CE13C9D5697A7F7666CEFACC648B793
7EC5987410E9EEA1990079A21CCE5FFC3323F22BFB33E662F8AC3EEB2B518C24
C1F095D889DD3D292805123CB4C380B7B70BB7C431DFCD4D7730748480497689
F6FE996B5B1C6ECF75F49AE1783F06F0BF43712CDFC01F9296C8652FCCBB0686
4F6527A318B939ECB9ABCF3DBB1163395BA0D26B2D653986732E7E1E0EEAEEB5
60508451820BE4F9C7E39DEB8A290CFF7B6BF4F2923293E96A972FCD51F13CBB
F8A9EF5DFFBCE16BE8F29E80F85AFE1984E98A7FB110F93B1BF3539DD9F09693
744B8C3EB02AA780F021CFC5AF945FDBDB4B5AA5904398AB0F3399B8379D9364
6679F0A2BA039FEED9C3A3D706974E09C2A6A369F13AF2E665AA8AC55ADA0883
A3E22E683F7AA00C11E50A98A63939B3E172B4CDE3AE5879706B9001FD703348
8B1949EE5086E36DCA8DCE1AE64AFCED3BE4FB9AD7D9A5804FC3E40B484FC8C8
D637F65B46BABA6A736F044B8CD36026D412A85EEA014A73DB4C1F23B16A9440
ADAFFD2884A6C630ED9D98601E2370EFA1E03ABAA6D7B689F4A1A78C455C560D
D52D886818C2D607340266E6D3003886C6B37694FD99CC8BF566B0E2F424780E
E20F2D99D5545B237714F2CC25F14276CF0A39BD960AD95E974F1697003E393B
24F7D0CCEC701F867F6A672F06F870AA34C4DC99FC36A7F50145C15B2E8051FA
CD6CC686BB0896E3519D881F79344C4DBD68B6EE5DCD3DB59882A558C4901C0D
17C7419076B1A9F2A73154A64E2FF2FE81848A0860E5A3DD3118482C30DE5425
382D4562E0DE904A0A6B8B1114B178BE81B16EDD0821D9F4F7E4984A478289F1
0FE37A75B95FF9A5155D2C8F9873E448BD11679A02370DE04446EAD9E15CB223
B880A5BD0F53DF1B8FD6383C10C0545D10B4D0CB5B31ED826D25E2A650496DD5
9D0107BA70C82FA7B951F24AD3B3514468588BCBB167A6D1254B56BAAD3E1FA3
998A77269A9EF9E537A14FDD6395239B7C1CC55236C2A2503869642866AB7414
E5F229FA11F7553AB38D8AA662E3B2609182A5072DCB03EE547BFB98DFB79CBA
B3B2BD16051169417B65C52767760E21AD37D8772D88D386DFF44227256AFEDB
0C67C998FA41168C80E18729876B369E337570D14485D503CFDC4FA1BF7759F5
AE9170E6E00312A8A944330DE044DF67E8F402396C06707A03E80F5FBDC4CEA6
5635A1AC81AD559F25DED59238A6ABB6DB63C169BC987EF28C2096EF4D9C5628
E86FBFD78639A4E3CB148F4E160D094F96DD993497B410D79EEF92C326C4E609
5789AC2346A102DB2CBC4F1E9F6FA536A1D080154F6B2B080EC37F6350F37CFC
B693CD731A4DE607B24A51356D7D8919539EA225954B6042249C47E9AA997917
70AA251AD7813ECDDC97C396ED66F16D189D5F405313D8FCED867D010FB158D6
00C641D4B255CF125818C84933228FF8126B5A0EBFBB35BB1F10F67B1FCC1DB0
29017BF6389213F079D640C81CB5A09497838D5AFB4661502A53825CFB71515B
EAC428C7BD8EC555F147E92B7679F1D4F29EC2A9F8D7C0D52451E19D3F4875B1
9768105A18E540BA8B1754601132AF1715E3C73096656C7719EB61B7BF4ECF25
51787172EB9F584F078DC5B38E7523666F14AE9ECF5BC72F1CF3105D944E99D2
FDC58FF5C6233AB85C3E39240525FCB0D771122E646C16AEED996024631F7D1A
58FAA64D2F06A599313AAB59C686F0FABDD0184E76A58C5B02074BBEA785D431
98451E8E43341D6CC27D1265562827A325A22147EF6AC74F8ED1E174AF06105A
9113D54DBE7939A43D967D32B4846649448E30E43DD6FF1195DDA09794848E1A
4C19BEF0E55AC5C524DFA3677A56E04CB2498CFC4F4ECE452D4E33FC65BD0120
80A4BD18DEB231AF196B77716BFB7EB60D509AF6978365BF48DF9E71070F3BC9
CC011320D436EE1DDBB4F2AAE5AFCD559CDD7C1526FD22C6E61E2BCB17C084CD
61DCF8C1D93568CC05F0AF2CB32768C15D8158974ED200C5C904201BA6A456C8
01FD7EDC1C7DA303880FDAE678711ECF270BCF75D4A9AE8EF86C8FC0929EB885
EB62775783D4716B36FF1F23DD7D25908137051C9141B9D4EA305C71530FD917
A115F24D9C1B935819305C0706EA22E872AA502D40A50B26EDD997605E246BCB
A4477F20E137D084596856CE43EC86F19DACE983A6D6273E235930A6084624EF
0847C885321EDEBF5AA0DD07CE99A800E8B561C7ADE763FE884CFA489035E24F
1A87ED0EBE7BBFD590A79F251BC66499B4D992E0364A10C476E24A4FB28E8D3E
259EDF1CC7345762A55E25B5A9485D4C43D0F735386BFECDA0CA488DBC4CF9A1
878C5C0CC361F73944181E24FD1037A59B689F0B42BD9C4C514C36DA6E6E0003
D586B3529747547FA397F47E5AEC4F31207577A169B8F2C0689A86B233B324C2
56CA492146CD270AD0645E353A3D71775F67EA1F6604909FB1F68429124249E5
714546E51E5739CDA457ECCDB622D2B80C97D4602C884CC61865CF1155018FBE
A7C8F81AC9D8541E112AAE26DF51DBFC58C616F2F0CFE6D5DCEA29BF4630CE5F
FEA2C34408E9C437D95C05D5B0F11A474492B03A0DD9D35FC255D24664EB3F9A
39C7C3180CF3A5D1EDE0DB6EAD392DB68C95FF008D5B1D1E4C04C07A3DCC3931
3C94EC0B5D7C1DC71B0AD7614FD28EFA248A68EB44DDFBB9E48A63B55B8CCA3D
44CE496081C1FE23CD4C1DECD3DEA6DE2C2CAE2F8B6A8DB26A85CB9A8556EA23
BA99C2DBC16A66BE554CCBD5F3BFADC49CA6C843DF47C12FEF3FF2D70E519164
84F8040820F2BAAA68674D674CF96877A8FCAD8B9D738AF6EFAADBB05FD97BFB
A00CB3A0DF6E9C32BDAD47403BFAF8DD7251955E8A5B73E862B0A8A03A36319B
4E01A4AAC05A67C81322EBAFE14C52E14A83C7779AD7C7ED5C155703672B9A9F
0F4AFCD9935593BEEFAF9F9EF15E4CE36E73F0D9D33A70FBDD2A0B2DC88D1558
257CD13B910C9CC062DE49B4D8A9E615DB652DBCD463113F7242EB48A58CCC16
3564A991D29E755311AC113F10E13D3917B68C01AC1547C90FB0755FC9D14305
FCE600762B0CBC0E82213C70F85B31869F86972219D0F71F1348526CAC6C59FF
63CD49BA10ECD0B4CAD6C3DF39EB887F58368396AFAA05BF2A7560F38867D059
0790E137F5C818C94946EFF50D7E5B0EC4FDB09CC6CA64BB929C2E185B01F907
27024E7ACF8DF8F5592C45EBF52F3E537EDD6C7045478E21D5EE62A1AD4B387F
16D23209AE0DE4E5A2BEBFA46404DE83A1A016C1AAEA3DB648603F07886DC0ED
D2B17351F49286B870DC0A02FCDDE660923D886BDBCE610CAED76A035B823592
0EEC87B4134DAFF49FA61348031C0FEF01652729FF4170EA58AE92432F432ADC
22B921BA15556FB099AB53A9BC7D06F16806D0D4815AC5590A97DED03130D170
7B14D10CEDFF4958EDD82A544AA01722E0A6CC7AC7484D32565AE795A5A25C7E
D96B0C49A02DEB0DA2F0D5EE1AFA6D3673F8FB691C14AB0CDF62BF07E9863AC5
256066CD131510F5799D8DBD2507EA38A1DB490F5964D40C23D69F39EE8AF56A
F6D593758A7E3EB82E8FF30ACB19D610F910946B3A51D17D2E7B95CE0D9DE581
B3EFCA8E78743899CE70B1887765F139FF03142FC7CB864D62805753FCA60D62
613C595D1E9A5965CFD848C7CA416B1E42DED1E106E884001EC51ED104993A66
E0FDBDCAB022869F70BF8CA094BE531BAD5FA3513E0E6EE9A8B3F418FFAE1E0C
CB48DF431F89996E91E648536C7D56475BC1446CB4496382F19C84FBF7A7ED29
81A3968264EE7DEBE396116230FED145B095CCFD785F062A04BCFB500A39AFC7
663CE77AEB2A688E4A2480FD7C32CC0657604E5FDC95362A02B5FC4203AAB0CF
40DB2900A02CB36B8D0CAD30536D0B157B7B33285CD5DD9BD07B4AC2FD2055A1
1A375B155B34F02EEE929AB75757C1B6DF468ACF8085970D357C2B8F3C2DE885
B0C370FB10F4C3B788D7D96C058929060D7F1F18D3157F16E63435E307A34B3B
8CF5225B381A34D2E4A4E41DE03642A3022DC4AF3954F8FD9DBA20750756D651
ED822DD33513410093657B301A47DF5A30F0A63C61A37F52B7C42BFC1864E93E
91891EC2939D6906493B465341D42A0E29824CE5A38C709630E6F05861CC88E5
EB0B84AEBC86CCF4F7B789AA8F0C4A3478BA47170D8DCE48D265456F04D22A43
63CA1CD3FC9719610688DE685E5DD37049D7EDF4B38B5D18D80A9BF9BFC136D1
1155A9F9C8A2E08C2F30A3D5DC42C34A6A23D2BA53D587D4DEC0B4CC750857D1
F6B2B885144AEE29BD454AA95A982D8125164C76090F0F9B7AF415593CF7F209
BCCD84D105A16E9142CED05EF622DEE2356B941F89F7BD901B9F069B13CF740C
2561C57892D42CEE43401ACB82D459BDC062F1BD1E981807C230D4E938B41637
4CBB54E4F75F049926860AA583B9CFB4ADCB66BCEE5284B6673A647AB2D4FFC0
1A483ECD308F603103D41078475ACC56C387FA9DE84B8257E03EB2D8F43F4AB9
50D83D7B8AB60952F419145FED87372665431DEFB217A5CB17E5C0F68D00E019
BD87509D4B3B51CE1DF7C54C1ABE7AD98C4B6B19928BCD7673971D9FC6307E74
7A69BCBA812ECF9154A9277DE3348D2AF47B1105FD842896F8AFA18C765619D8
4ED5DF669E7A717843F4FCC8F64E85C5D1D591A617EC740373C59C648B33DE82
8139DB5AADFF86CFC9339D5EA3E39EA0EB4E57AF49EEC042D6C7AE33C72A718F
2840CE2081996C5899E30EBCA61132000DCEAFE7795433C436810BD5A8B710AC
1489DB03291ADAE51DFCFA11E4E9BC4F34C388C53649DADD87A4992DF578DB5F
87638072B9F0E75F6B0C17DAD5ED156B4FC1DA9C1F578BB93E125487719341EA
F8B8EF2FF271574439A7EEEA5AEB8FC2D9352BC956DD3FCF0E5B8E7CB9BB4750
E1D8729FBE661AD52A63710EEDC222E35DEC70087C6C24D37CBCA0A02CB81001
E8268E117286720469D509E6939FC68B0054F2DCF8F75526A15C2DF690B51F51
5B573FE226E700048FEBEF25E9EC589B8FE50079ED4AF45AE9C68D2130F9AB2F
7C589DCE43B0F8B78241BC5057256B7AD1FE17FDF463F2B265A3156CC9B0E234
B8D60519BFA58E93A4777B5466A14C791A34B1FA3CA123BAFFAC1EE8C72B1101
B218D7265C5CF31DF5CCAE43BC68965300E71774F74E884ECDD62C46E39807A7
42CCD53F96E6BA65613B95FF953050D47D0F0C1B3B2FCE9844CF281BC8058577
F07C9F384A2378BE626646F55B875EB7D83B460D4CC64656D61F1DF9FD08105D
0D18314BD3F002EB2DAF8C5A8DCE1826B8F514B39F7D269E4E9516BDC0795800
F002C772B9FCE898C4C32054519DE170C47BD1E43B101CA7E641F8D7F8449F9D
0AB098FDE32A986F605DCAD2A1D8712BC2B1E46B0CAC59C128715E6A347EB4D2
A334CEB53F9C42684EC3EB1141EC8E9047286B60AE5E062A39E3C25FFA290678
D856DF9D947703514959190C254C89643CA2DF5988E7F183BDE30D12B100D9C0
527F9576C902FE96EB64D9ECC6E874D6414C4059E327B9752248CD4527563CD6
64E48EA5E8543B3954F92A67A95B1BEF36B3CBDE4B0A042FC6096843708042FC
803FB0C4E2A6A4EABE74BB1C9FA15E66B49BA8C1C35385400573242E75D37B17
05CBA3F5E8A843916EA2737912A1472BC70B52B6362D065F94B8C1CAC28FAC82
F0AD1C16D29A7F836441E8A7437DB34D48943FEFCCC9732B17445968212E86D0
9CABF734D7C2A0C3D7D32B1C5FBA370087B2F1046F99FA1FE8BCBA3E1B5AC785
CC261F8E1B99B7EDDF75295B000B6AD52C142B59E4554D300929C8E1D6D67B29
2E7EA945D83C572344712955663BB34539C64BB83290907B5B19242BC8AE6E04
ED43EB065D30A883FD142E250C707F9C05EED103D0036B8D797DE9DADEAC9EE2
B86A05B5700F65DF411A9AF3CE31FE967BD8ED140D29C4579D7B8F4540BC1358
69FD2884C0F2BE5F5AE2F6DCDF79768284C53FA85526C95D13B6B0A6364E93DD
6BE7DCCB2CC31401C3D5D20737594FF04399662D6E3958D6CDEA2D92EB596DE1
5C1A3DBF53E656FBE775CE1BCE87FE03639A7C9BE100A0C90453F042B79336F3
44CDF9438BB2CAD1EFB6FD9EA3680A58A3FFD3D47BBDE8BDA496A68429263D53
99E07D91C82B2FB301628AAE6F881FFFC2069B3614BD167DFF1A98D2C98844DE
752E29BA2106577866A572D252DB4431E30FBAE70CCFB3263C605CD3442384F3
D9D0579BD245711008F370739551DC51FC2442031D4323B753278D142B462A74
FA4CA312276730D9B6185C8D03274A03430A0F868929280E27702BF83306A061
8497E0B2E7BC7FAE091A7DA77F064D925EF324745E752FF7BF486C5D2C076E20
3F60F7B5F77EF032EB59CB19A576EB2DBC07619885960CC0321BF3AC8150D4B3
D5B4CEF8B60F575EA632ABCDBA5A6E489F718FCC3C7543138B197C4F9772FFAA
22E6DF9C575F8FA25A950625495A03E89046DEA2E46420A96100D2843D58855A
8E1107911A3BAF1778950467DA62231FD236B3288D436FCCEFE1FB6DC7315C6D
4C16141FBE7C797DE7BA7D4D61A88927238807A0F0B15E79F657D84A7399CD33
B3D5FACA73A561806EF1AF0F3BEA4C22F0C2C715D1AD319EE0F3954D6FE3B953
0142FEE50824C4175C737263614A7E2CE216A592747B0539C84BE45DFAC3D43F
CFA0250AADC38CA6C2C61AB0E6C51520757533F8A7F052FBCC184ADFD0415B5E
7F8596068E4F4A80A37AD0D6EF8E77389E553C4BF4593B5FFCD2F92686614C83
D716C5AF19769CCC93B71B142CBFE9A6EEDF46570F1B2DEEEE8378FD078BFF58
53D70756AFD54C0D0F65A0BF0DF751B3A5126BE061B4070AD23D651B27F600B5
43DF450A6AB7EE762DFDBFEA22C88B316AE8AF4CA8A7F428CC09D545DDAE311F
833897739B2C51A39B90BC988D7423BDCC795D8FA331D48C32096C8CF1B71F32
8AEC0452F2F073E937B8A89302345CC11A90692D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BEB1E15331BC9C6A35
62C88CD8FF8F4CDD8C61623AA82E746007C9D2504DEB1840FDF93BCBBCCA731B
4BF18A59FBAE8780968331DEEC1AC165263DD7117CA119BCF0331B540A5FA591
A3CCBBE97BD0AE7F8C34A42FD174A42C50B4D40191FF42EF52D058ECBC4367EB
D86676AF155590A015AC5D6B5F8B5A14828C8CFC19DB61457CA2EEC593464D70
370AA3F656B45B5A21980FFD6BBB20F0DF2534AFDADBA580884464A53E6CD865
CDD8A726C6C6CA3D0FD88E7DD76E345A9C6C820953948F96B10B7C8E42BE935A
CC96209EB9485D771D2A263C5E6FD63F36022EDBAB20CC8BEE57505F37230D4F
8E5D74EC48EDB65818EB21930B5EB8F54A9D2AC0F70FE4885506CC27B0354656
1655B15078A2719A4F0BFBAC0086F09BCE55812B8406F0133DA80CE65A75CA26
236DF9E5BDF8D9FFDC44787F71D921C758A6201DC0CCA60576B429EDD545EE1C
04CB2CB5110DB326A88D7A7556359C8BD38CED32B34BD8D1A690B61E603799AF
4259866588E57AE9B7B392D167B63BFDC1102565649B536D8445D635D327775E
C86682E5ED5A50C4FD908EF361961563EEBC9D9886DBE5024CDAC61A3A8E149E
FB5D934A9932700C0D7D36755706C2751B3FA5FD95D94CCA91AA2F7760754D8E
CEA334EE267256720D6CE4B3F840209C939D8516182CA5F0966CCBF971FEDE25
E3FDDB98327322342EEFC4AB610AAC8F27F0CB185D054AC7EE6253DD07517660
B50E0F93B42842784C178FAD195BA390E60C409D96FCFA353C09ACF15259DBD4
4E0DF07A91624203BC9935CF1F489C1061AC326E047186697C3CF63DD857D50B
8502F5CBEF5CFEA28EE9D110BD8B9ADBAE9A65169968180A1E80DF33F3EB72DC
8EC46F9D39F8ED5738F2ABBBD7925B0CBA991A4158898D90C9FB9E2E51337DA0
6B6FFD6E52EFA583C0E873F7E4499339FE6E70CBB5142A9EFDBBF286718A308C
CD9FD110165FE3457CDDB8858606089B3ECA38C565A40EA84BFCB92557F30779
AB4F3DA8D23FFD993C38812F6866EAF9C001DBFD552B5749518FEAC8DD86597B
7E6B04B22D908CB26A4E8745D71E9F46002E6137D85E673228D5CA5094E70433
72EDCF67F7A971B1C33AA7E1B70B54AA49D316055F12C868E25C95280BFC3C99
77095C289A7FF861E0FFDD1709CCE66303F90041D351B84494FC08C016034910
26250044DC5AE76A76139FE0F860F4D5E5431E961620FCDFE5809F5CAF0198AE
4B0D1E78406E27795D0D4AAC2AC2ABB4D186C2F5AEF49173460E39C162388A28
7E2835C27EA3BA15F80EA2F49EE47AB2CC32F6D88CD8A31D52445707D65101DD
29EFA824420DE0F40DB7E292EBD88247BA8955CE1D525AE08DE9634BB876EDDA
31896D1950B27164E18172A5A1B658AB1B3B5FDEC3BCAD63852F2DB69C1C1CE0
80F69090CE23089253F14D3CDF121F8F41E58435168EC78444117FE734A95970
108766A1D28C0EBF91789E2B42D978A47B6B18BF0135B008A73B07518B9EA8A3
028D7DA9987B6DEB3554643299BCA90DC4C8D46023FD1DBF1523CEBD636553D3
E5D514F964C2E06C29DE2F9175D71475D388051DDE3A30ECBD060A0E76AC6A0B
99F79668F44292B23ECC39A05EFD065090894BC8200DEF93B057C7F66A80DFA9
EF72A2E4FB46159ECCAFBE20F35A8AD87222C49B5F14B9DB208D130BF5160D28
9564770D0A5EEBD93F9AEA0AAF7AAED4A85C93979445E8D1E5A9BDD3B2295EEC
CE5A74D6E6A1BE31E078D0A011258412B971978BD0D3D8431684EAB1BB059956
6DC66EF6FBE2FD359F33E30EA714B955D213A1E7DFE51ABED171CB2DBAA983D7
B5A446BF526A58DA4682C9F22549FE68E9C535EFF70A777E892F5B7BD352E355
DE386E2A72FE9081BF38FF9C114D75E7B894D5074110BF19A25FB3B58F0AE2AD
2EAEC84A3320B7ADF8AFA0646A4031EA66AEFB56A44965744053106BD5B5E991
75BBC27E471A90D15124C400CDBF7319457F7523B721B2B9C0C1C521B5AD9421
173210852FF2532E4D5C443A8DA6D4C02A3A3F8D082AC5C1C0427AD24E2C9976
490B46BBC82050093B5BC70574DCD9B6A0297ADE74569C1544F3E43812D56692
7F29AB24C087E0F89EAC202FC8AB7EDA5DFC521AC793BD28FCA5B8642474DCDF
C2D703D46D426B269537BD1E24DF0D018CF19B1E977543402DC1E3B8F0E980DE
9F1815007CEA51619D84375B7321EFDAEBF0C83089B39ABF013B54E58E133F09
03DB641CF0B1D4E2B69CE5CAABAAD2F70A76E317BCB2A266AC3EC9ACFF53850E
AD7AA640287871032F5EFD6BD1BF759930EA2C17E3974D20F4F3C15296DDB13A
3D734A8B6327134965FC101405F894F97BFB6B6A55704CDA8EE8055F659BFEA8
8092FA92E5CF5B4E860625B5D3415F05D0516725AB29DB64C06763A7EBEFA8DB
8AA290843F5D57EA0052E04DB06267A60EEE0932568AFFFCBAAD15013FC1004D
903C72205F618A34A91A7C0058F85C37479642B1EE5086705FA230B2C0639C3B
6CF9848720BDDD26F07655913302E83C4B13321F76C5FBB7C037DB9F4809CB58
14DC17C2F14F34A61F3CBD2E72C40D21EC002434DEF3440F869A48C9A8894D29
C23D28871812FA17AB4687C25CAD227A5EEAD3076353157A3B3947CF3FCB3A75
3E5D38373B81323A7E861EF6AB8AEB55CEFDACC6B91C80C04908F59581638787
9D6569D2E42BA1351FA37D11E20DF09B4D1B004E09B4CA8677A959917DF9DAFE
98DFA539CBA73FACC5D04142DE297E42A192514ECD2386782D4F27D8F303AC89
8483205A841CC9BBD9F300737540B21745BD882FFECB8914A1E25B2A8B2937BE
C2CF893B0D3DA4B73D66460D19A6BC8AF994F2CCC673B6BB38C9AF59940CAB56
80A26E061D2F609633FB47262C6D41E1A93375E0C9D3121B1EC95AEA28A5CC20
60694BC641C156B1BCE10ABC618BF77560E853D630388563FEDB8468CAA3E1D2
93B7697284F9D3154F6AA2146D75497D79D160CBB55CF3BD47456241B62B81FE
5A51E7F50385C4A166DD678E838BE4FD1EA555B51575DC4939C3418A64D0B6FA
DA06CD872EADAA457F1D89427135B141734795C263F628E27D5A3FDC0E20B2B9
0D72D0A7C6DB287C8B2340D731E43F1693F72A8CFDEE93D40FC6F1759A00076D
A6EE8B8FBB54F6A6D70350DF7A90DD4C972B69C0DF3435C03D75580C0973C4AC
274CC223C8E510F3464A4069F14C830653511BDF089F9AD34B6D5279ED86083C
1DE8C0419DF55EC9B738C371A96EB293C5FAD5A81F7264A8FEEAF78A6F0127AB
A36771B1B221E0D0350BA7C9617951A18BCD69117DFEB921B517CB97AE23F506
5873FFF07C9F503878438914001A41A675529C9046E1BD79E9100390A20DAE99
F3960A596DAF2727713667F6BF1261BF597A0D285167231B9F444D42F17CB182
EE584117FC8461791DFFB4FF1570574EAC7E17C772540440EA91FB7ADFD7561D
55C9E03EBB587B340A358A65ADDBE9EC9976DB8C3F21E3904411CCD832A4367E
A9C08745A564F2CD09BBEB1FA1FF7EF8999DBA1B10FD88E772BE83576C90A5A3
7C5AD57E9AEB2A8717F653103DCAF0927813C88DC88FFB06B300935D7C9C8B8A
04CFA8915D129F62A20129AE3E4BA05DEB2A78E15F4FBEA191F44A520FFB6243
3B1B36B3A301DA06FE661A4BD09704EC31C9C164F9E822038086DECC51BC7D8A
8567D841DC64E1A25B4FA057A5AAA357AAA3DD0D863BC8AA7F46B57F996D0B21
E89872FD564ACB36CBF058A6CD13B5F20B5D4A4856E5013EBDE652B37E911AE0
E165608EF5155DFF6BCEC22ED954560FF7A1971E39FD5D92F2F7F3C15296DDB1
3A3D8F34A84DD42541141BE77B0C37B62D3D1BF8537CFCE40CA18283494E800D
93D7C60A361C8B082E81EE08E8A5FD4C79661103D8F94E8DADC5A31E35448577
F69D252891974E09C2413E9C514F5F33B1B45FDC525DF6E764E84E0B79416E05
7DC1ECA6BF2F851A55234599B77DBA86DFE8789B49BEB25A6A03F6ED8CD1BBB9
B904D50F7A97557AA6D67E5A7682D4C03EE1E04E8E12AB70B4B0B8337A818402
8006F3F3248B5454ED6DC729CC5070524D103C77E8A81AD2E91846D59CBA2CEF
72406FE766BFEC7B36ADC93501184205AC4E9B21143CC3675F464E7B624C5763
F0ADB027A201E32927FDFC55E5DCC88B658CBF3437B993503A1C57F0A516BF0B
552C2707ED2887C57FDBAB63E6B0BFB3FD90EED120F36536CB27A669C8CB1B24
059C940FE4DC3F3464DAE0D5301B73740E7D4F986DFDD16EA718B061E6D8D55A
D9074D530A51804EF810A6909FBBE7B0CF18D3D66AB0700F40ECF6EA59667A66
ED91BF5DB6EFD520E52EF263135ED9EFC19077012CB6519D7607CB8498DF7C49
5B95A557CDF4392E853E397DC111E36130DCAED0AA9A795BE07A8A986B66DDC9
D43486DF7BBC05B79A1E96F4F6F4A94C62A1D661C67D2DDFB5451427CB5261B6
D7D2EAD4B76BAE3329117185F2DCCD3E539B85F5B2584CCCF3418C6EF54F1C0D
B9190A9ADD9277A3885472D0931B1474128CE0CEC4FE38DC8F3741B700CA42F1
6139755A8C6EBBA10545D1E632B39DAF3EA337E87BC54529532FA790B8086219
43B99C3CF058F0B43B8DB1E446A994D76DDFAA04D0CBFDF97EAE242EFCE7AEAF
38B77DE648AF6035431A4605A7B3BAC62156DE15875C15FD81865AF829D5869F
2C704393ECA0186829F49F9F181917D92AA6370F75074C98C99D2E5C078B5199
588A09F47D88B61336BCE6BB93D8DB96D353342E3A5A0255EAFBD3CB99583BE5
732AC00FF3133C11A51A97D6B2D981B6350600F5E67C560F118D65EDEF651687
6761435D6577D1CFB71EE2689908849038CCCDC8A7745813D22014F5AD8DCAAA
1823937B3A07A0B291B211136FC31A73BFB4411C619E56C27AE186E1BF92018C
FF106F6A373A7072AE74CF20DF3C8BA6BF2D830F4FDFFE499FF6F867ABEBF873
E3C7106DE30A0B1F4C406F2B9B1E0E629F2B84C0793198EA83AB8A5E0EF0CFB3
45DA2D4F638CA3E4FEB31389910EA6E8331DFF84A18999FE9496FC0E73427157
E1EF147315F0C2E5BF3F639F8A398A8CB18688B8F0E08405A43A4B931E45B5EC
1E7570EB4E3AC27D3AD56FA70EFABEA2249A5FC9152EB24DC4F0506D52855A61
57B68EC566618302EE60EF8BAF6B45DDF672F673D8927701A3CADC493A5379B8
D215DEDB2D476A98923774270F1D7BD430D177EAF24C9F0E25A94F500BACC8FF
53983C3DAFF572F87B89990D663E2C8F49804630A49DA2CA23BF2B62DBBA66AC
A2973AB7B6A124F67A827FD9F8946DEA4E1BF73A932C5DFB22DBE1385139E26F
8426D1225488A9B780043DFE114D2536479E7D64EEB2C8962CB5CBA1AC1BA45D
CF4EEA6EBDCD1206243547DBB404181EFFB6FA3628B1EB9EAA51B861EEC94858
4C8D5D905E3DE46779AD43AB1D0C6B924E3D589120C3AC78C34F827B5B440C24
318B26A382A8C9940010080C12CC74EB7C39AD3730A7A6D3FD194EEB1BB5547D
DAD096E8FF5E4E066867F9CC39597EEA5441AF9AA592C8DD7D2E82FFDAE413BB
1AE5749C80980C93D33ACF10C57D55F2345CB5E5DFA6F0308169082AE0EEA2F2
1919F232572E16DCF503B5061001C95B73CABE1E1891262ACEDC681E87E41D29
0BEDA9205D66E40AE25E643A704DC646F9EFC88D77D02D391CCBB3847F215121
9CC2260855EB03B46AA996A3357DB34E242DD7FE12B89F6F02F29ABE4E11AEE4
654B28BF9BC21B1769793641173226985704D8C1D25DB9693797AC8A8733D632
B858A93D2803BB0583101036F50E59C77CE4D23104EAD48E77BC086A75503BAF
98EBE0697F5CB3DC135B4F6BB07E837DEAF9893042350E8125D0FD904C35E7E4
C333D3B337B20ADBD6773FB45F56B11CC71C240A7C22699E32F903296B80F88B
EDE221490D49D7CF845A30349530CE4BE83A2C34C07A13C784852793EAE11B0B
C35361687B82A0D9C8D44199A9A8F233CA7B1E5603A9DDE8708865845DE5781C
B731B0A322D4E4B9F225EEF68B8281688882693085432B5A1921BF8BF10DE207
8E17FA0A06DDA86882C3C957E0419A456695CC2F5DA0FE36B2E2AB66CEBEAB0F
3CEC7B118C53E6B3077DFC7515ACF6FCA427D2A453620B8620CF0FC5C68153E7
DC46AC851A9A40B68D43057B3C2BFA92960C4C9053B45EE0E18B05327FF446AB
7181642EDAA7A42D11EC8ECFF3557875C0A103461474013435558831452B6F82
B375D9327BA6611021963605F31CB975B97FEAA8B727C4051433B7AA0D46F3A3
F923F69FAB8E5D1B428F0698672EF1394255F2FDB02D4AE3B27CCADA482C208B
AC8E955500E604112EED8C42C30A58B2473A33C232C1DC69AFDE56604DB52DCC
6054B8411F26370CAAACB22E4D5E9B207A6C758C93B82511AE377DF8CB9CAD4F
9FDB007D8CC1D9B86E1E528211E4E9D0769A37F94808693E58DEB381B724D471
159FA66977D6566B72922FE46E49BB169EFC219FF31B5C36368158061C679F78
D31637F9754871753A67B216F04FEA7D726A99C3F1DE84B96AE55A9A501F5CD9
9DE77FB500ED2E8F5FE7FE5D7AD099C64A4D5DDD215780BA71E493103B563BFF
48BE11CF66A9DBDD12347353760B35CDE2169A36EADF9B8B281BB158C6864028
4E2F2ACEF5767F249795D99A95D5A13FEA9445FB1EE1035C2830F906699B9460
EC420AFCD11FA1934C9D81ACD2DA6F0EBFA1669DA049B80FE0359DDB6B612D77
49EBCF551FDB974E1118C1F074E4575AE0735FC007105F7934DD07B930C2F719
71535BD3704C4ABE1EF0E5E997506D8562B36C7B2958CE59045E5D5A87571DD2
4459E5B0BCF3025B0938D56542D0A7E8143A26587616FF4A96240A6E17F35C4B
ECE141E38E374DE01977C142E0ED10318333382EA2E6929502DA3268A9830D9F
9BA8A9B6D46B9163FEB5AB668DDDB2FB1F77DF9779C16B2A621D818752BE3E05
958B3FFFD51B5492DB49BF8810AF0BDC54BB1D0874081AABABA896B9E0109F23
BE0E07C8E2E48DE6D7777ED983ED90C6D9C52439DE7BB6EE83674244EFE886BC
531628CD9FFC78A5C3EB87961820DB8C41A0C8479D63D561608737F5432938EE
8224D5C5ECCBB1C731371F5C088FA853F85D7CCCEF8E7619C0BAE46404BAEE21
591AEE7726BDD7E787DD83DBED95F86B97E1E9D80D9E991753E22663C7B1ED60
BBA08F874D9E1B1661393BD85DEB50C5206AA9C2C4430DCFB2CD64CDB2EFE57C
CBA8C540B2E73D6F4B551044BB5A01FD8F30E96A773B1E19920DF95B45AEFB91
37CBE9607998FFE1B4D2716BA61F704CAA380B37F78FCF3F8B9ECC7D2E6345BB
A065F8BFCFF80F21CCFA88CB67DF1D266655E2FF6B267ACD8E1FD4B608415425
AF4A0E1A6665AC061224F46C8EE81AEFECB5313FBD9B6D8DC5ED70049138602A
EBF6B5E5D5E8459680BD22624133801105A77651F118824F6CD00209EFB60C1D
3568395248E914A6496CD9BE43DA79080CE4579CC90C020CDCD3E057392B1202
E416B635D3F474AD6CD39E4BB890706EA336F89880CE4C5B805C3C54F112F7AA
206DD9146D0742E87C841EA0267D10E5959961893ED525430575937528F717EE
2E59FD9E50F7090C17AA2EB223C2B81307FDF834395B17DF67193ED3CBEC072A
1A22806BA7696B8E06C21523C248624677B5DC9A393116B2E6173A0113A6F5D6
FF477D5B97F2B4B202FCE9B42B83750932C8A88AB1CAC031704563ECAD1B1CC7
5CE80A588AC97FA47FFDD7D897EEE3C9076225CEEEED76D619B0F3264E153925
BAEFE33CA56337BF404B153605402F14B54551378F52F29CBF6189E42535B16E
6F765DD95AD540C83C4D71240B516B0606338BD4134C8C65B2FBBE4C4D1209DF
EFAE449075EC09BCB01465B2BC0429162BE040639F2EE9C0FA9679755EC1DE47
2490624397A1A8DCF4530A89DF33968A0A72C2D9EFF01B884A02EFA230548640
6B96E86705E3EA638D6A47F399E09D4ED56A73AEA5A2B1D5C4C6A2BAED9C6CFC
3030FF6EAF97F7FA79ECE49D69AD360A543C7BAC3FFA3C61AAF973165EC8BB8D
255A909C78001768483A826D50D21A217D500474C66D82042A7F90731D9C0755
61B12AE869A75ED6FE1768B8E8BE31F533D311387BDC7AD08E56B987062BB572
37BBB3056A36E97E399A7AC163C2982989C29FCE47F94FD8CBCCF94422115A75
6842F8100D708C06A34D2E1D514FCB4FB9A4D6BDB195AE71EF97E918DC69E178
C52B5FB4EA59E9FB208A00DB8EB046F8A81BD29512DBD4F8C7D91BE31ED10561
6EFA83F66A05539E5734B4A2DAA3C7E6FD827F1CA8ED0FAC8E7E4BAAB9DE55C8
B611332601FA6CB88B3A1513E44B95B3B0E6E05C629F55AD4FFD646A4EA6835F
B39BD9EF06ECBCD35F10C42EA9DAF365763EC4B63BD5C9EB9D4EB8F6E12E6FD5
A6843DD48105C7E99E2A90DE8A0D5A826235FDAE0F2269E6CCA5E6E543778DA1
98EB92678E9659F6B7FE5E0C68D5B2CB4B0A01DF4504DFF074292909EE79FE29
4598B8493F9991DE93CAFECCE2BBC95869C26EF6419C4C12E7A2941391819066
BE33BBA54C0D2D9D5B99DDB20E51F6E1CA132E6CB4FD94F3D93ABFF5AC459EA5
D3F07D909C9A1FE25B022D9E5BE0B4D45678F773EC435F824A95B61CA0427E6C
FCBC313B4708D8EFF137E476FE5A098E607E25ED29F4BF3409309ED3C07EC33F
36A5E3BE297EFDF302D8E8D5CED4481B017558C2AAF242059AA51DD77F8A56C4
33059E8397051739EF0B8CD10758E6FB302FDB8719BDEBC7711FD41D7931B9FA
7332AAF569948EC55BAD355BBD85D66D6160C956F4B84AF763EECCA28D26DCDD
EBA956D677C9E906B43D57153F687ADDBEBECDCE5D5144613798CBF687F402B3
6D313032C031B298E84EA6F33C2AD3AC042AE925AAC76BAF554B06608C939495
4B53D0A84FF84BF5939A94F2927EA35B8E19688E347F3F9356111575D04F9AAE
CC5626E13574F1CF601F19B044731A5EAF971AE2D8AD945417E6B39EC952DF96
091851A33211F931022D46BB1BDD4B06B9B14430A07AB625B16993CE202A5DBF
62928E1FA81ED58FA8598C55080A06D587BECCCA9A75E08C5B5E5C2D52F322CC
455711C0147CB76F4723BB02264F5BCD6641B9CE61C958091ABDF028ABC06788
5B5CEC658A6161F5487D1FEC7799AF34ECA15F59697206D7CEC9902739CE68A5
52AA47F3854D2757F509F2B1769D6E73D678A6CCB1FF14094FEBC224574A1529
6D35DF91D243B9A7CEA8B3ED641A48ED761A7E9A4853CFBC72438829B19A4739
61A55E2618F1D8B444719E07C6768FF004AB0D0F393598A870C13DBCE520C20E
6591B1F9A12B73D713B04E814C13706AFDA1D383F306ED42A31C12817DF7BD22
73FC4B62D766B257DB2E4947F750508B0076DF1471D3AF5EE41814285EDEC18B
272C7113B1118FD1A2803E7E7C2B1CC3D8A8E589C4A4C52B093C8698F3884E1D
90E2C07A0BB1C59B638E677A4FC26F9D9A17F28132BE522C47ECC40BBC6A204C
4B3EE9D4F4361F8DF9E1C1ADBA6F63C1587C09CFB052316D4D96E57440D0CC6D
B88F58821D1F7D822A57E0BA52FD6822344E2682F728CC99ADD1EB2B2787C65B
147FB7AA49FD7B056D8E1B1611D3825A842A02A0C9F79E01E69A6025891C2893
95D9D280E8F73B3E12DA3C5EE8952BD948DE08F52EB8B45BC385641296EF9322
A1BEE0095949F22E99CBD1AC1A0CB1E0D26CEB7EABD3D44DE5C2197C220A4E6C
51AC3CCB3B6C3D2C2D2426402E174C0FEF0F7CB83E5373F3CEADA3319C49C670
047A3BDD1CA38572A0F8977AF681E45C38482909B802BAABD269398F95711B6E
9CEFC55CB4B95C396196B07399D0CF8C40519DD1FA7A604891171FB67C4E8428
7956BD829039C918EABE98E50EA7E4C646DF285A7AA09E10E1104547F6DD210C
FC01142DBA02EDE74ABE7055F57E486536C406112DF0EF4AAEEB94E01303F399
31648A51F04C50A8A6801CDF868D8CBADBFC79870D609C76BB11AD76C043AD4A
830F0CCA08D642BF3041446B09C74E14589309819657AD8F674003015D4AF3FD
6733CCCB735D8D847F397B5490ADB69CF624E3AA2E8E0790BA3CF8BD93344C6D
B0739E2B2AC0DE7C7F7330BBA4F20D40CEA711D8214B6F49D53A73A11663DE3B
DDE52F85706EC8869DAB6A39966C54C8F58C074C29AD52F4140E95413F3FAAD9
8BF47FE98C267AECA58C9DB3D8F03B649F5C5CFEFDA75D6C9E2A1AF41BC42C69
ACB81B761390E4E9D921A9BC4465F6B4CE7E9947EB76E22268D7F0CDA4643229
98DE889CD0DEA8CA6F7CF15844158A16B20F4F9874CB4B618C65A27F52F33616
E1B17271B584423C3DFB08BA7CB85ECBBD6348B96E2B9A86CB75699605069302
717E9180DE63316E768E30B5EC4E41EB13509A8DEF619D425AEBF3B405E72CB7
DC4D2F975A430C9AA8276775482AB01D1425FFA961215A9FAAFDAA126CE0B8C8
2CA7AC851170510877C810C8F15E1EC3EF3E4FFF1BA6C5FC27D3B830365A4661
2EFDD6FA4F2C68683ECCC15BDCCC9019320D42CC6608409DCC29251AF9D28137
D10A7AEB131A8A2CB5CB3ED10CEAB42D603A5E7B338AFA4404FB19F34451FC66
86B7F61B06F20B7B979292DCF9646FD1568D3536D22C39AA1B151B162DC470C9
4BE1BF8D060F044F07DD19B298F32E520A47AA87FBF7858AC53104DA8572D446
F10E9D69E8119A62040B30D852FFC44D85AEC977F1AFD17E424B55442C4053B3
0A153A25703BB53380CB7DDD0C88C7016D00A73EC80D4EF408B959842A635F97
5304E2699FC4F15C5CC65FE7CBF765A64750866C2D5092881D35794E54BBDF1E
680B08C666E1FEFAF01068BCE04B7915E68F9A07CF01BA86CEE707FAB43D5211
55FD9B18CC9E3D29DFD392DB1854F135C2B69D189387D15A35C007791BE169F0
351A502F723D9C496CFB0B2768E361D4034E462FF56A1F3CAD5B72998B05777C
DAFE52A29D175664FE013A13412E9012A633E802F274EAE221055BFE17F17FFB
B5AE1C864C0755FB3995FF72258678824E83740CAAA09DE6A629F327F06798E8
7D44D12B7946F6BE3A6AC689D053B29DFA7E1B8EA3A0A3564CB9861982B4C952
A020C77DF66963FC5FB080218D83DC368FBAFDEF45CD68CDEC783E4C2E12EA41
8BF46DE63B714DD85674FC38296359C2D558DA94190E0AD13C282DD2EB37F797
01FACF6B6D8BAB1FD7577868C085F09245D734D1F9B9A43E4449A2963A013ED5
502380B3C65806969D75FCF1C9E3E2E0FD7AEC8D13DB8692B85280D5C8193C22
5D9611DC0A8447508972CBD0862EE28D3BB54E9C4707A7320F3A2407F3380622
FC15E90592641FE99BEEB0253335B01726A9883802D69D160961F7D245C68C9C
E02199FCAEFE1B7B1E176288DD59CD3F258112229671F602A78860EE2CE92825
062814BBABA742ECE8DAB35CFAE8E3371F17A36E4B4ADA822A7650B530C4E24A
826E2C07E9AD47235195FC65D37612211F9017E4395C2C37F2283E222F398CFB
85F09E6331D554E6829285BD9CD53BF0ABAA809F619854172BDEE3E9A92B4826
46A636C1E1E67E7C48F348FD15DDCCF7A6FE19F6183A834A8863372BA3C9F519
83478F673691603E0DDF76B61498D3096092130838C2F88798A08CF3586AA6EC
A71D7B4C7BA9CD25BB0C4EE70CAB7CE221DE3BAA5DBF058005FD2631426B415F
E4763A11D820184388D67621A5EC3A1ED74B037690900A6BB2149B0B7D7893EA
486B56F53997E5617C3634195AE9F74FDF59A7A8A8DDCA6179B59633D14EB759
1EB751A3680A7456CE0CEC7F53DA0FE073EC3910E6442CFD3744B204A2D6C082
07A46593E1EC093BC7A56CEFB27A01BD97F34FD6BEBED273DD7965CA143247EF
157E718E35E1CA98B086F083BEC349CD52B5F31F1EB44F05FCF7F1E09AED246A
ABE7405DE9611A132FBB52084BB06FF56A15DFFB3F831AE82BEFF7D1231767EF
C06801F9C97AF1EBAB711E7429792DA8292CB7E00E4C7BC8FC8D38AD9B27FEA7
540CA081D8E15A769426999719A0E718730DB42214CE1D64F4DDE04D34000EB8
B5E085A5C4EFB26A567F28F29E6E16C4724AC72D9EFAE8EF3A832967956BB89D
59370A3A913BAC739A4CD40521D18B8FCFEF9A5F300E526FBA188BD58669F780
6EDCE9C803D46C2FBF837C65E3FBD64C3C66310F7247EC0002496A8E2DD98A3A
0F9E7800F55F4DE2D41CDB02D0D9D20562309C886400ADBFC787C41E45F31E6E
B563F851CD634BC2200964F3A918E13BADB14FE3FA5F9BC596EC8C47F12EDEB5
2B018842D3F11C2F024BD63649AD289C69EBB83308275679BE28AB6F31E073AB
AD1C0465BCE0C1180AB949C6874959140CE83B7DD762667D3C87AB63ABBBA6E3
0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (Prog1.dvi)
@start /Fa 130[45 1[45 1[45 45 45 45 45 45 45 45 1[45
45 45 45 45 45 1[45 45 45 45 45 45 45 45 45 45 2[45 1[45
6[45 45 4[45 45 3[45 45 45 45 1[45 1[45 45 2[45 45 45
45 8[45 45 45 45 45 45 45 45 1[45 45 45 1[45 37[{
 TeXBase1Encoding ReEncodeFont }55 74.7198 /NimbusMonL-Regu
rf /Fb 145[41 48[34 2[20 58[{}3 58.1154 /CMMI7 rf /Fc
194[74 19[37 37 29[69 7[74 2[{}5 83.022 /CMBX10 rf /Fd
152[45 47 22[69 79[{}3 83.022 /CMMIB10 rf /Fe 199[33
2[33 33 33 33 33 33 48[{}7 58.1154 /CMR7 rf /Ff 234[65
65 16[42 2[65{}4 83.022 /CMSY10 rf /Fg 194[65 4[42 42
42 42 1[42 42 42 42 4[65 1[32 32 6[23 22[60 7[65 2[{}15
83.022 /CMR10 rf /Fh 141[37 2[40 50 1[25 4[40 41 39 43
36 36 44 17[63 16[65 2[23 23 58[{}15 83.022 /CMMI10 rf
/Fi 173[44 2[48 1[59 41 6[41 2[44 66[{ TeXBase1Encoding ReEncodeFont }6
66.4176 /NimbusRomNo9L-Regu rf /Fj 202[29 29 29 29 29
49[{ TeXBase1Encoding ReEncodeFont }5 58.1154 /NimbusRomNo9L-Regu
rf /Fk 107[37 37 24[37 42 42 60 42 42 23 32 28 42 42
42 42 65 23 42 1[23 42 42 28 37 42 37 42 37 8[60 78 60
60 51 46 2[46 1[60 1[51 1[32 28 60 60 46 51 60 55 55
60 3[47 2[23 42 42 42 1[42 42 42 42 42 42 23 21 28 21
47 5[69 33[46 46 2[{ TeXBase1Encoding ReEncodeFont }65
83.022 /NimbusRomNo9L-Regu rf /Fl 138[46 28 32 37 2[42
46 69 23 2[23 46 42 1[37 46 37 1[42 13[46 2[51 11[60
60 1[60 77 5[28 8[42 2[21 46[{ TeXBase1Encoding ReEncodeFont }24
83.022 /NimbusRomNo9L-Medi rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (CS 325 Practice Assignment 1)/Subject
(CS 325 Practice Assignment 1)/Creator (LaTeX with hyperref package)/Author
(Daniel Schroeder)/Keywords (CS 325 ``Algorithms'' ) /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.0) cvn /DEST pdfmark end
 142 -331 a Black 0 TeXcolorgray Black 0 TeXcolorgray
150 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 150 0 a 150 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0 a 150 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 150 0 a 150 0
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Problem 1) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Problem 2) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Problem 3) /OUT
pdfmark end
 150
0 a 150 0 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Problem 4) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 150 0 a 150 0 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 18 H.A end
 150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(0)>>1<</S/D>>]>>>>
/PUT pdfmark end
 150
0 a 0 TeXcolorgray 0 TeXcolorgray 1545 511 a Fl(Practice)30
b(Assignment)h(1)1638 661 y(Daniel)f(Schr)o(oeder)1469
810 y(schr)o(odan@or)o(egonstate.edu)1619 1314 y Fk(CS)f(325)f
(Algorithms)1788 1463 y(F)o(all)h(2017)1619 1613 y(30)f(September)f
(2017)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -331 a 0 TeXcolorgray 0 TeXcolorgray 3721 -223
a Fj(1)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 18 H.A end
 150 0
a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 150 0 a 1695 100 a Fk(I)t(.)45 b(P)t Fi(R)q(O)t(B)t(L)t(E)t
(M)26 b Fk(1)150 275 y(Problem)h(1.)i(F)o(or)f(each)g(of)g(the)h(follo)
n(wing,)d(indicate)i(whether)g Fh(f)j Fg(=)23 b Fh(O)r
Fg(\()p Fh(g)s Fg(\))p Fh(;)14 b(f)32 b Fg(=)23 b(\012\()p
Fh(g)s Fg(\))p Fh(or)r(f)33 b Fg(=)22 b(\002\()p Fh(g)s
Fg(\))150 425 y(\()p Fh(a)p Fg(\))p Fh(f)9 b Fg(\()p
Fh(n)p Fg(\))24 b(=)e(12)p Fh(n)17 b Ff(\000)h Fg(5)p
Fh(;)c(g)s Fg(\()p Fh(n)p Fg(\))23 b(=)g(1235813)p Fh(n)14
b Fg(+)k(2017)150 574 y Fk(Upper)28 b(bound)e(pro)o(v)o(ed)g(by)i(C=1,)
h(N=1)150 724 y(Lo)n(wer)f(bound)e(pro)o(v)o(ed)g(by)i(C=)1211
691 y Fe(1)p 1112 705 232 4 v 1112 752 a(1235813)1353
724 y Fk(,)h(N=1)150 873 y Fd(f)36 b Fc(=)27 b(\002\()p
Fd(g)s Fc(\))150 1172 y Fg(\()p Fh(b)p Fg(\))p Fh(f)9
b Fg(\()p Fh(n)p Fg(\))23 b(=)g Fh(nl)r(og)s(n;)14 b(g)s
Fg(\()p Fh(n)p Fg(\))22 b(=)g(0)p Fh(:)p Fg(00000001)p
Fh(n)j Fd(f)36 b Fc(=)27 b(\012\()p Fd(g)s Fc(\))150
1321 y Fg(\()p Fh(c)p Fg(\))p Fh(f)9 b Fg(\()p Fh(n)p
Fg(\))24 b(=)e Fh(n)575 1291 y Fe(2)p Fb(=)p Fe(3)679
1321 y Fh(;)14 b(g)s Fg(\()p Fh(n)p Fg(\))23 b(=)g(7)p
Fh(n)1076 1291 y Fe(3)p Fb(=)p Fe(4)1198 1321 y Fg(+)18
b Fh(n)1331 1291 y Fe(1)p Fb(=)p Fe(10)1497 1321 y Fd(f)36
b Fc(=)27 b Fd(O)s Fc(\()p Fd(g)s Fc(\))150 1471 y Fg(\()p
Fh(d)p Fg(\))p Fh(f)9 b Fg(\()p Fh(n)p Fg(\))24 b(=)e
Fh(n)582 1441 y Fe(1)p Fb(:)p Fe(0001)772 1471 y Fh(;)14
b(g)s Fg(\()p Fh(n)p Fg(\))23 b(=)f Fh(nl)r(og)s(n)28
b Fd(f)36 b Fc(=)27 b(\012\()p Fd(g)s Fc(\))150 1620
y Fg(\()p Fh(e)p Fg(\))p Fh(f)9 b Fg(\()p Fh(n)p Fg(\))23
b(=)g Fh(n)p Fg(6)620 1590 y Fb(n)664 1620 y Fh(;)14
b(g)s Fg(\()p Fh(n)p Fg(\))23 b(=)g(\(3)1043 1590 y Fb(n)1088
1620 y Fg(\))1120 1590 y Fe(2)1187 1620 y Fd(f)9 b(O)s
Fc(\()p Fd(g)s Fc(\))p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 142 -331 a 0 TeXcolorgray 0 TeXcolorgray 3721 -223
a Fj(2)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 18 H.A end
 150 0
a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 150 0 a 1679 100 a Fk(I)t(I)t(.)45 b(P)t Fi(R)q(O)t(B)t(L)t
(E)t(M)26 b Fk(2)150 275 y(Pro)o(v)o(e)h(that)i Fh(l)r(og)s
Fg(\()p Fh(n)p Fg(!\))23 b(=)f(\002\()p Fh(n)c Ff(\003)g
Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\)\))150 574 y Fk(W)-7
b(e)30 b(can)e(re)n(write)g(this)h(equation)e(as:)560
780 y Fh(l)r(og)s Fg(\(1\))18 b(+)g Fh(l)r(og)s Fg(\(2\))f(+)h
Fh(:::)h Fg(+)f Fh(l)r(og)s Fg(\()p Fh(n)g Ff(\000)g
Fg(1\))g(+)g Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))23 b(=)f(\002\()p
Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))c(+)g Fh(l)r(og)s Fg(\()p
Fh(n)p Fg(\))h(+)f Fh(:::)g Fg(+)g Fh(l)r(og)s Fg(\()p
Fh(n)p Fg(\)\))150 985 y Fk(Which)28 b(can)h(pro)o(v)o(e)d(the)j(upper)
e(bound:)624 1191 y Fh(l)r(og)s Fg(\(1\))18 b(+)g Fh(l)r(og)s
Fg(\(2\))g(+)g Fh(:::)h Fg(+)f Fh(l)r(og)s Fg(\()p Fh(n)f
Ff(\000)h Fg(1\))h(+)f Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))k
Ff(\024)h Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))18 b(+)g Fh(l)r(og)s
Fg(\()p Fh(n)p Fg(\))g(+)g Fh(:::)h Fg(+)f Fh(l)r(og)s
Fg(\()p Fh(n)p Fg(\))150 1396 y Fk(This)h(is)i(clear)e(because)g(we)g
(are)h(adding)d(up)i(the)h(lar)o(gest)e(v)n(alue)h(of)g(the)g(left)h
(summation)e(n)h(times,)h(making)e(a)h(signi\002cantly)150
1545 y(lar)o(ger)27 b(sum.)150 1994 y(F)o(or)h(the)h(lo)n(wer)f(bound,)
e(we)j(can)f(mak)o(e)g(our)g(constant)g(C)h(equal)f(to)2218
1961 y Fe(1)p 2218 1975 34 4 v 2218 2022 a(2)2290 1994
y Fk(and)g(get)g(the)h(equality:)951 2199 y Fh(l)r(og)s
Fg(\(1\))18 b(+)g Fh(l)r(og)s Fg(\(2\))f(+)h Fh(:::)h
Fg(+)f Fh(l)r(og)s Fg(\()p Fh(n)g Ff(\000)g Fg(1\))g(+)g
Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))23 b Ff(\025)2567 2143
y Fh(n)p 2567 2180 50 4 v 2571 2256 a Fg(2)2646 2199
y Ff(\003)18 b Fh(l)r(og)s Fg(\()2858 2143 y Fh(n)p 2858
2180 V 2862 2256 a Fg(2)2917 2199 y(\))150 2405 y Fk(or)595
2554 y Fh(l)r(og)s Fg(\(1\))f(+)h Fh(l)r(og)s Fg(\(2\))g(+)g
Fh(:::)h Fg(+)f Fh(l)r(og)s Fg(\()p Fh(n)g Ff(\000)g
Fg(1\))g(+)g Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\))23 b Ff(\025)f
Fh(l)r(og)s Fg(\()2353 2498 y Fh(n)p 2353 2535 V 2357
2611 a Fg(2)2412 2554 y(\))d(+)f Fh(l)r(og)s Fg(\()2698
2498 y Fh(n)p 2698 2535 V 2702 2611 a Fg(2)2757 2554
y(\))h(+)f Fh(:::)h Fg(+)f Fh(l)r(og)s Fg(\()3214 2498
y Fh(n)p 3214 2535 V 3218 2611 a Fg(2)3273 2554 y(\))150
2760 y Fk(W)-7 b(e)32 b(kno)n(w)e(this)i(inequality)e(is)i(true)f
(because)f(the)h(right)g(side)g(is)h(only)e(adding)g(up)h(half)g(of)f
(the)i(amount)d(of)i(numbers)150 2909 y(than)d(what)g(are)h(being)e
(summed)h(on)g(the)g(left)h(side)g(of)f(the)h(equation,)d(making)i(the)
g(left)h(side)g(greater)e(for)h(all)h(n.)150 3059 y(So)d(with)f(a)h
(pro)o(v)o(en)d(upper)h(and)h(lo)n(wer)g(bound)f(for)h(some)g(constant)
g(c)h(and)e(arbitrary)g(n)i Fh(>)p Fk(0,)f(we)h(pro)o(v)o(e)d(that)j
Fh(l)r(og)s Fg(\()p Fh(n)p Fg(!\))c(=)150 3208 y(\002\()p
Fh(n)c Ff(\003)g Fh(l)r(og)s Fg(\()p Fh(n)p Fg(\)\))150
3357 y Fk(help)28 b(found)f(at)p 0 TeXcolorgray 634 3375
a
SDict begin H.S end
 634 3375 a 0 TeXcolorgray -18 x Fk(https://stack)o(o)o(v)o(er\003o)n
(w)-5 b(.com/questions/2)o(095)o(39)o(5/is-)t(lo)o(gn)o(-)t
(\045CE\04598n)o(-)t(log)o(n)p 0 TeXcolorgray 2972 3301
a
SDict begin H.R end
 2972 3301 a 2972 3357 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://stackoverflow.com/questions/2095395/is-logn-%CE%98n-logn)>>/Subtype
/Link H.B /ANN pdfmark end
 2972 3357 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 142 -331 a 0 TeXcolorgray 0 TeXcolorgray 3721 -223
a Fj(3)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 18 H.A end
 150 0
a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 150 0 a 1663 100 a Fk(I)t(I)t(I)t(.)45 b(P)t
Fi(R)q(O)t(B)t(L)t(E)t(M)26 b Fk(3)150 275 y Fl(A)31
b(Corr)o(ect)e(Solution:)150 348 y
SDict begin H.S end
 150 348 a 150 348
a
SDict begin 18 H.A end
 150 348 a 150 348 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-1) cvn /DEST pdfmark
end
 150 348 a 150 349 3600 4 v 150
461 a
SDict begin H.S end
 150 461 a 150 461 a
SDict begin 15 H.A end
 150 461 a 150 461 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.1) cvn /DEST pdfmark
end
 150 461
a 0 0 1 TeXcolorrgb 134 w Fa(private)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 44 w(static)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 44 w(void)p 0 TeXcolorgray 44 w(binary)o(\()p
0 0 1 TeXcolorrgb(int)p 0 TeXcolorgray 44 w(n\){)150
586 y
SDict begin H.S end
 150 586 a 150 586 a
SDict begin 15 H.A end
 150 586 a 150 586 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.2) cvn /DEST pdfmark
end
 150 586
a 0 0 1 TeXcolorrgb 269 w Fa(if)p 0 TeXcolorgray(\()o(n)45
b(>)g(1\))o({)150 711 y
SDict begin H.S end
 150 711 a 150 711 a
SDict begin 15 H.A end
 150 711 a
150 711 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.3) cvn /DEST pdfmark
end
 150 711 a 403 w Fa(binary)o(\(n/2\);)150 835
y
SDict begin H.S end
 150 835 a 150 835 a
SDict begin 15 H.A end
 150 835 a 150 835 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.4) cvn /DEST pdfmark
end
 150 835 a 269
w Fa(})150 960 y
SDict begin H.S end
 150 960 a 150 960 a
SDict begin 15 H.A end
 150 960 a 150 960
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.5) cvn /DEST pdfmark
end
 150 960 a 269 w Fa(System)o(.out)o(.print)o(\(``)p
0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb(')p 0 TeXcolorgray -1 w(+n\0452\);)150 1084
y
SDict begin H.S end
 150 1084 a 150 1084 a
SDict begin 15 H.A end
 150 1084 a 150 1084 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.6) cvn /DEST pdfmark
end
 150 1084
a 134 w Fa(})p 150 1150 3600 4 v 0 TeXcolorgray 0 TeXcolorgray
150 1342 a Fk(This)27 b(recursi)n(v)o(e)e(function)f(di)n(vides)i(the)h
(input)e(v)n(alue)h(by)g(2)h(until)f(it)h(is)h(equal)d(to)i(1)g(then)f
(enters)g(the)g(printing)f(aspect)i(of)150 1491 y(the)c(function)e
(with)j(prints)e(the)h(modulus)f(2)h(of)g(the)g(gi)n(v)o(en)f(v)n(alue)
g(of)h(n.)g(This)g(w)o(orks)g(because)f(each)h(time)g(the)g(number)f
(is)150 1641 y(de)n(vided)k(by)h(tw)o(o,)g(truncated)f(because)h(it)h
(is)h(an)e(inte)o(ger)m(,)f(and)h(forced)f(through)f(the)i(same)h
(process.)f(So)g(each)g(di)n(vision)150 1790 y(by)h(tw)o(o)h(is)g(w)o
(orking)e(its)j(w)o(ay)e(up)g(the)h(po)n(wers)f(of)g(2)g(ladder)g(that)
h(mak)o(es)f(up)g(the)g(binary)g(representaion.)150 2089
y(I)g(needed)e(help)i(solving)e(this)i(solution)f(because)g(it)i(w)o
(as)f(not)g(initially)f(intuiti)n(v)o(e)g(that)h(continuously)d(di)n
(viding)h(by)h(tw)o(o)150 2238 y(w)o(as)h(creating)e(a)i(po)n(wers)f
(of)g(tw)o(o)h(dynamic.)d(I)j(tried)f(to)g(create)g(recursi)n(v)o(e)f
(functions)g(that)i(w)o(ould)e(pass)i(in)g(the)f(current)150
2388 y(e)o(xponent)f(of)i(2,)h(then)f(call)h(the)f(function)f(again)g
(b)n(ut)i(with)g(2)f(to)h(the)f(po)n(wer+1)f(lik)o(e:)150
2477 y
SDict begin H.S end
 150 2477 a 150 2477 a
SDict begin 18 H.A end
 150 2477 a 150 2477 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-2) cvn /DEST pdfmark
end
 150
2477 a 150 2462 3600 4 v 150 2574 a
SDict begin H.S end
 150 2574 a 150 2574
a
SDict begin 15 H.A end
 150 2574 a 150 2574 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.1) cvn /DEST pdfmark
end
 150 2574 a 0 0 1 TeXcolorrgb
134 w Fa(private)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 44
w(static)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 44 w(void)p
0 TeXcolorgray 44 w(binary)o(\()p 0 0 1 TeXcolorrgb(int)p
0 TeXcolorgray 44 w(power)o(,)p 0 0 1 TeXcolorrgb 45
w(int)p 0 TeXcolorgray 44 w(n\){)150 2699 y
SDict begin H.S end
 150 2699
a 150 2699 a
SDict begin 15 H.A end
 150 2699 a 150 2699 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.2) cvn /DEST pdfmark
end
 150 2699 a 0 0 1 TeXcolorrgb
269 w Fa(if)p 0 TeXcolorgray(\()o(n)45 b(>)g(0\))o({)150
2823 y
SDict begin H.S end
 150 2823 a 150 2823 a
SDict begin 15 H.A end
 150 2823 a 150 2823 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.3) cvn /DEST pdfmark
end
 150
2823 a 403 w Fa(n)g(=)g(n)f(-)h(Math)o(.pow\(2,)f(power)o(\);)150
2948 y
SDict begin H.S end
 150 2948 a 150 2948 a
SDict begin 15 H.A end
 150 2948 a 150 2948 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.4) cvn /DEST pdfmark
end
 150
2948 a 403 w Fa(System)o(.out.print)o(\(n)o(\0452\);)150
3072 y
SDict begin H.S end
 150 3072 a 150 3072 a
SDict begin 15 H.A end
 150 3072 a 150 3072 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.5) cvn /DEST pdfmark
end
 150
3072 a 403 w Fa(binary)o(\(power)o(+1,)h(n\))o(;)150
3197 y
SDict begin H.S end
 150 3197 a 150 3197 a
SDict begin 15 H.A end
 150 3197 a 150 3197 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.6) cvn /DEST pdfmark
end
 150
3197 a 269 w Fa(})150 3321 y
SDict begin H.S end
 150 3321 a 150 3321 a
SDict begin 15 H.A end
 150
3321 a 150 3321 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.7) cvn /DEST pdfmark
end
 150 3321 a 134 w Fa(})p 150 3387 3600
4 v 0 TeXcolorgray 0 TeXcolorgray 150 3579 a Fk(I)24
b(w)o(as)g(all)g(o)o(v)o(er)e(the)h(place)g(and)g(could)g(not)g
(\002gure)g(out)g(ho)n(w)f(to)i(then)f(w)o(ork)g(backw)o(ards)f(and)h
(achie)n(v)o(e)f(the)h(correct)g(order)150 3728 y(for)j(the)h(binary)f
(digits)h(recursi)n(v)o(ely)-5 b(.)25 b(When)h(I)i(searched)d(for)i
(solutions)f(to)h(this)h(problem,)d(I)i(cam)g(across)g(this)g(solution)
150 3878 y(at)p 0 TeXcolorgray 243 3896 a
SDict begin H.S end
 243 3896 a
0 TeXcolorgray -18 x Fk(http://www)-5 b(.geeksfor)o(geeks.or)o(g)o
(/bin)o(ary)o(-)t(rep)o(resen)o(tation-)s(of-)s(a-)t(gi)n(v)n(en)o(-)t
(n)o(umb)o(er/)p 0 TeXcolorgray 2669 3821 a
SDict begin H.R end
 2669 3821
a 2669 3878 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.geeksforgeeks.org/binary-representation-of-a-given-number/)>>/Subtype
/Link H.B /ANN pdfmark end
 2669 3878 a 0 TeXcolorgray 33 w Fk(and)32
b(ran)h(it)g(through)e(IntelliJ)i(and)150 4027 y(sa)o(w)c(ho)n(w)f(it)h
(w)o(ork)o(ed.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 142 -331 a 0 TeXcolorgray 0 TeXcolorgray 3721 -223
a Fj(4)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 18 H.A end
 150 0
a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 150 0 a 1668 100 a Fk(I)t(V)-7 b(.)46 b(P)t
Fi(R)q(O)t(B)t(L)t(E)t(M)26 b Fk(4)150 275 y(When)j(reading)f(about)g
(tree)h(tra)n(v)o(ersal)g(and)g(reading)f(the)h(wiki)g(page,)f(I)i
(started)f(to)g(notice)g(patterns)g(in)g(the)g(postorder)150
425 y(and)j(preorder)d(that)k(we)f(were)g(to)g(use)h(as)g(input)e(for)g
(our)h(recursi)n(v)o(e)e(algorithm.)h(I)h(could)f(tell)i(that)f(I)g(w)o
(ould)g(ha)n(v)o(e)f(to)150 574 y(decriment)d(the)h(array)f(based)h(on)
g(what)g(node)f(w)o(as)i(the)f(ne)n(w)g(root)g(and)f(what)h(w)o(ould)g
(become)f(the)h(left)g(trees)h(and)f(the)150 724 y(right)c(trees.)g(I)h
(spent)g(a)f(long)g(time)h(trying)e(to)i(come)f(up)g(with)h(a)g(trick)o
(y)e(w)o(ay)i(to)f(create)h(ne)n(w)f(subarrays)f(and)h(increment)150
873 y(the)k(inde)o(x)e(of)h(the)h(ne)n(w)f(root,)f(b)n(ut)i(could)e
(not)i(\002gure)e(it)j(out)e(before)f(turning)g(to)h(other)g
(resources.)150 1022 y(I)i(found)d(a)j(website)g(that)f(described)f
(that)i(when)e(you)h(kno)n(w)f(the)i(root)e(of)h(the)h(tree,)f(e)n(v)o
(erything)e(that)i(comes)g(prior)f(to)150 1172 y(that)h(node)e(in)i
(the)f(postorder)f(array)g(is)j(a)f(part)f(of)g(that)h(tree.)f(F)o(or)g
(e)o(xample:)150 1261 y
SDict begin H.S end
 150 1261 a 150 1261 a
SDict begin 18 H.A end
 150 1261
a 150 1261 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-3) cvn /DEST pdfmark
end
 150 1261 a 150 1246 3600 4 v 150 1358 a
SDict begin H.S end

150 1358 a 150 1358 a
SDict begin 15 H.A end
 150 1358 a 150 1358 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.1) cvn /DEST pdfmark
end
 150 1358
a 0 0 1 TeXcolorrgb Fa(char)p 0 TeXcolorgray -1 w([])45
b(preorder)e(=)i({)p 0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(F)p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb -1 w(')p 0 TeXcolorgray(,)p 0.58 0 0.82 TeXcolorrgb
45 w(')p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(B)p 0
TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray
-1 w(,)p 0.58 0 0.82 TeXcolorrgb 45 w(')p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(A)p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb(')p 0 TeXcolorgray(,)p 0.58 0 0.82 TeXcolorrgb
44 w(')p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(D)p 0
TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(,)p
0.58 0 0.82 TeXcolorrgb 44 w(')p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb(G)p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p
0 TeXcolorgray(,)p 0.58 0 0.82 TeXcolorrgb 45 w(')p 0
TeXcolorgray 0.58 0 0.82 TeXcolorrgb -1 w(H)p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(,)p 0.58 0 0.82
TeXcolorrgb 45 w(')p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(I)p
0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb -1 w(')p 0 TeXcolorgray(};)150
1483 y
SDict begin H.S end
 150 1483 a 150 1483 a
SDict begin 15 H.A end
 150 1483 a 150 1483 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.2) cvn /DEST pdfmark
end
 150
1483 a 0 0 1 TeXcolorrgb Fa(char)p 0 TeXcolorgray -1
w([])g(postorder)e(=)i({)p 0.58 0 0.82 TeXcolorrgb(')p
0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb -1 w(A)p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(,)p 0.58 0 0.82
TeXcolorrgb 45 w(')p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(D)p
0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb -1 w(')p 0 TeXcolorgray(,)p
0.58 0 0.82 TeXcolorrgb 45 w(')p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb(B)p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p
0 TeXcolorgray -1 w(,)p 0.58 0 0.82 TeXcolorrgb 45 w(')p
0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(H)p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(,)p 0.58 0 0.82
TeXcolorrgb 44 w(')p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(I)p
0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(,)p
0.58 0 0.82 TeXcolorrgb 44 w(')p 0 TeXcolorgray 0.58 0 0.82
TeXcolorrgb(G)p 0 TeXcolorgray 0.58 0 0.82 TeXcolorrgb(')p
0 TeXcolorgray(,)p 0.58 0 0.82 TeXcolorrgb 45 w(')p 0
TeXcolorgray 0.58 0 0.82 TeXcolorrgb -1 w(F)p 0 TeXcolorgray
0.58 0 0.82 TeXcolorrgb(')p 0 TeXcolorgray(};)p 150 1548
3600 4 v 0 TeXcolorgray 0 TeXcolorgray 150 1740 a Fk(The)25
b(\223F\224)h(is)g(the)f(root)g(node)f(of)h(the)g(tree,)g(and)g(we)g
(kno)n(w)g(that)g(the)g(\223B\224)h(then)f(becomes)f(the)i(head)e(of)h
(the)g(left)h(sub-tree.)150 1890 y(So,)31 b(if)g(we)h(look)e(at)h(the)h
(post)f(array)-5 b(,)29 b(the)i(subarray)e(A,)j(D,)f(that)g(comes)g
(before)f(the)h(\223B\224)g(is)h(the)f(subtree)g(under)e(root)150
2039 y(\223B.)-6 b(\224)38 b(Similarly)-5 b(,)37 b(we)g(can)h(infer)e
(that)i(\223G\224)g(is)g(then)f(the)g(root)g(of)g(the)h(right)f
(sub-tree,)f(so)i(e)n(v)o(erything)c(before)i(\223G\224)150
2189 y(and)30 b(after)h(\223B\224)g(in)g(the)g(postorder)e(array)h(H,)h
(I)g(is)h(the)f(right)f(sub-tree)g(under)f(root)h(\223G.)-6
b(\224)31 b(After)g(a)g(while)g(of)g(trying)e(to)150
2338 y(de)n(v)o(elop)f(a)i(method)f(of)h(recursi)n(v)o(ely)e
(recreating)g(the)i(full)g(binary)f(tree,)h(I)g(w)o(as)h(left)f(to)g
(search)f(for)h(help.)f(I)h(kne)n(w)f(that)150 2488 y(the)f(base)h
(case)g(w)o(as)g(when)f(the)g(subarray)f(became)h(a)g(size)i(of)e(one)g
(which)f(meant)h(we)h(reached)e(a)i(leaf,)f(I)h(kne)n(w)e(I)i(had)150
2637 y(to)h(iterate)f(through)e(postorder)h(until)h(I)h(found)d(the)j
(root)f(node)f(I)i(w)o(as)g(w)o(orking)e(with)h(and)g(\002nd)g(the)h
(correct)e(subarray)150 2786 y(of)f(children,)e(b)n(ut)i(I)g(needed)e
(help)i(de)n(v)o(eloping)d(a)j(solution.)f(The)g(website)p
0 TeXcolorgray 2397 2804 a
SDict begin H.S end
 2397 2804 a 0 TeXcolorgray
-18 x Fk(http://ide.geeksfor)o(geeks.or)o(g)o(/pfFXo)o(u)p
0 TeXcolorgray 3603 2730 a
SDict begin H.R end
 3603 2730 a 3603 2786 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://ide.geeksforgeeks.org/pfFXou)>>/Subtype /Link
H.B /ANN pdfmark end
 3603
2786 a 0 TeXcolorgray 27 w Fk(had)150 2936 y(a)j(lot)g(of)f(helpful)f
(resources)h(and)g(code)f(that)i(I)g(used)f(to)h(implement)e(a)i(w)o
(orking)e(Ja)n(v)n(a)i(solution.)150 3156 y
SDict begin H.S end
 150 3156
a 150 3156 a
SDict begin 18 H.A end
 150 3156 a 150 3156 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-4) cvn /DEST pdfmark
end
 150 3156 a 150 3159
3600 4 v 150 3272 a
SDict begin H.S end
 150 3272 a 150 3272 a
SDict begin 15 H.A end
 150 3272 a
150 3272 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.1) cvn /DEST pdfmark
end
 150 3272 a 0 0 1 TeXcolorrgb Fa(private)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 44 w(static)p 0 TeXcolorgray
43 w(Node)45 b(constructTree)m(\()p 0 0 1 TeXcolorrgb(char)p
0 TeXcolorgray([])f(preorder)o(,)p 0 0 1 TeXcolorrgb
44 w(char)p 0 TeXcolorgray([])g(postorder)o(,)150 3396
y
SDict begin H.S end
 150 3396 a 150 3396 a
SDict begin 15 H.A end
 150 3396 a 150 3396 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.2) cvn /DEST pdfmark
end
 150 3396
a 0 0 1 TeXcolorrgb 1210 w Fa(int)p 0 TeXcolorgray 45
w(start)o(,)p 0 0 1 TeXcolorrgb 45 w(int)p 0 TeXcolorgray
44 w(end)o(\){)150 3521 y
SDict begin H.S end
 150 3521 a 150 3521 a
SDict begin 15 H.A end
 150 3521
a 150 3521 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.3) cvn /DEST pdfmark
end
 150 3521 a 134 w Fa(Node)h(root)f(=)p 0 0 1
TeXcolorrgb 44 w(new)p 0 TeXcolorgray 45 w(Node)o(\(postorder)n
([end]\))o(;)150 3645 y
SDict begin H.S end
 150 3645 a 150 3645 a
SDict begin 15 H.A end
 150 3645
a 150 3645 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.4) cvn /DEST pdfmark
end
 150 3645 a 269 w Fa(loc)o(++;)150 3770 y
SDict begin H.S end

150 3770 a 150 3770 a
SDict begin 15 H.A end
 150 3770 a 150 3770 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.5) cvn /DEST pdfmark
end
 150 3770
a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
134 w Fa(//)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb(if)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 45 w(there)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(is)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
44 w(only)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(one)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 45 w(element)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb -2 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
45 w(it)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 45 w(is)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(a)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 45 w(leaf)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(so)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
44 w(return)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(it)p 0 TeXcolorgray 150 3894
a
SDict begin H.S end
 150 3894 a 150 3894 a
SDict begin 15 H.A end
 150 3894 a 150 3894 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.6) cvn /DEST pdfmark
end
 150 3894
a 0 0 1 TeXcolorrgb 134 w Fa(if)p 0 TeXcolorgray(\(start)g(==)g(end\))
150 4019 y
SDict begin H.S end
 150 4019 a 150 4019 a
SDict begin 15 H.A end
 150 4019 a 150 4019
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.7) cvn /DEST pdfmark
end
 150 4019 a 0 0 1 TeXcolorrgb 269 w Fa(return)p 0 TeXcolorgray
44 w(root)o(;)150 4143 y
SDict begin H.S end
 150 4143 a 150 4143 a
SDict begin 15 H.A end
 150 4143
a 150 4143 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.8) cvn /DEST pdfmark
end
 150 4143 a 150 4268 a
SDict begin H.S end
 150 4268 a 150 4268
a
SDict begin 15 H.A end
 150 4268 a 150 4268 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.9) cvn /DEST pdfmark
end
 150 4268 a 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 134 w Fa(//)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb(look)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(for)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
45 w(the)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(location)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 43 w(in)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 45 w(the)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(postorder)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 44 w(array)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(of)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
44 w(the)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(new)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 45 w(root)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 44 w(from)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(pre)p 0 TeXcolorgray
150 4392 a
SDict begin H.S end
 150 4392 a 150 4392 a
SDict begin 15 H.A end
 150 4392 a 150 4392
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.10) cvn /DEST pdfmark
end
 150 4392 a 0 0 1 TeXcolorrgb 134 w Fa(int)p 0 TeXcolorgray
45 w(index)o(;)150 4517 y
SDict begin H.S end
 150 4517 a 150 4517 a
SDict begin 15 H.A end
 150 4517
a 150 4517 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.11) cvn /DEST pdfmark
end
 150 4517 a 0 0 1 TeXcolorrgb 134 w Fa(for)p
0 TeXcolorgray 45 w(\(index)g(=)g(0;)h(index)f(<)g(postorder)o(.length)
o(;)g(index++\))g({)150 4641 y
SDict begin H.S end
 150 4641 a 150 4641 a
SDict begin 15 H.A end

150 4641 a 150 4641 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.12) cvn /DEST pdfmark
end
 150 4641 a 0 0 1 TeXcolorrgb 269
w Fa(if)p 0 TeXcolorgray(\()o(postorder)o([index)o(])h(==)f(preorder)o
([loc)o(]\))150 4766 y
SDict begin H.S end
 150 4766 a 150 4766 a
SDict begin 15 H.A end
 150 4766
a 150 4766 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.13) cvn /DEST pdfmark
end
 150 4766 a 0 0 1 TeXcolorrgb 403 w Fa(break)p
0 TeXcolorgray(;)150 4890 y
SDict begin H.S end
 150 4890 a 150 4890 a
SDict begin 15 H.A end
 150
4890 a 150 4890 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.14) cvn /DEST pdfmark
end
 150 4890 a 134 w Fa(})150 5015 y
SDict begin H.S end
 150
5015 a 150 5015 a
SDict begin 15 H.A end
 150 5015 a 150 5015 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.15) cvn /DEST pdfmark
end
 150 5015 a 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -331 a
SDict begin H.S end
 142 -331 a 142 -331 a
SDict begin H.R end
 142 -331 a 142 -331
a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 142 -331 a 0 TeXcolorgray 0 TeXcolorgray 3721 -223
a Fj(5)p 0 TeXcolorgray 150 100 a
SDict begin H.S end
 150 100 a 150 100 a
SDict begin 15 H.A end

150 100 a 150 100 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.16) cvn /DEST pdfmark
end
 150 100 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 134 w Fa(//)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb(pass)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(in)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
45 w(the)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(new)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(indeces)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 44 w(of)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 45 w(the)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
44 w(subarrays)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 43 w(for)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
45 w(the)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 44 w(new)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 44 w(trees)p
0 TeXcolorgray 150 224 a
SDict begin H.S end
 150 224 a 150 224 a
SDict begin 15 H.A end
 150 224
a 150 224 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.17) cvn /DEST pdfmark
end
 150 224 a 134 w Fa(root.left)44 b(=)g(constructTree)n
(\(preorder)o(,)g(postorder)o(,)h(start)o(,)f(index\))o(;)150
349 y
SDict begin H.S end
 150 349 a 150 349 a
SDict begin 15 H.A end
 150 349 a 150 349 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.18) cvn /DEST pdfmark
end
 150 349
a 134 w Fa(root.right)g(=)g(constructTree)n(\(preorder)o(,)g(postorder)
o(,)g(index+1,)g(end)o(-1\);)150 473 y
SDict begin H.S end
 150 473 a 150
473 a
SDict begin 15 H.A end
 150 473 a 150 473 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.19) cvn /DEST pdfmark
end
 150 473 a 150 598 a
SDict begin H.S end
 150 598
a 150 598 a
SDict begin 15 H.A end
 150 598 a 150 598 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.20) cvn /DEST pdfmark
end
 150 598 a 0 0 1 TeXcolorrgb
134 w Fa(return)p 0 TeXcolorgray 44 w(root;)150 722 y
SDict begin H.S end

150 722 a 150 722 a
SDict begin 15 H.A end
 150 722 a 150 722 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.21) cvn /DEST pdfmark
end
 150 722 a Fa(})p
150 788 3600 4 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
